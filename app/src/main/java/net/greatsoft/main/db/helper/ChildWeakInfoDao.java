package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.child.ChildWeakInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CHILD_WEAK_INFO".
*/
public class ChildWeakInfoDao extends AbstractDao<ChildWeakInfo, Void> {

    public static final String TABLENAME = "CHILD_WEAK_INFO";

    /**
     * Properties of entity ChildWeakInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ChildWeakInfoId = new Property(0, String.class, "childWeakInfoId", false, "CHILD_WEAK_INFO_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property ChildWeakInfoNo = new Property(2, String.class, "childWeakInfoNo", false, "CHILD_WEAK_INFO_NO");
        public final static Property InfoType = new Property(3, String.class, "infoType", false, "INFO_TYPE");
        public final static Property InfoTypeOther = new Property(4, String.class, "infoTypeOther", false, "INFO_TYPE_OTHER");
        public final static Property BornHistoryEarly = new Property(5, String.class, "bornHistoryEarly", false, "BORN_HISTORY_EARLY");
        public final static Property BornHistoryLessWeight = new Property(6, String.class, "bornHistoryLessWeight", false, "BORN_HISTORY_LESS_WEIGHT");
        public final static Property BornHistoryFetusMore = new Property(7, String.class, "bornHistoryFetusMore", false, "BORN_HISTORY_FETUS_MORE");
        public final static Property PregnancyAnemiaWeek = new Property(8, Integer.class, "pregnancyAnemiaWeek", false, "PREGNANCY_ANEMIA_WEEK");
        public final static Property PregnancyAnemiaHb = new Property(9, Integer.class, "pregnancyAnemiaHb", false, "PREGNANCY_ANEMIA_HB");
        public final static Property PregnancyBreastNotakevitd = new Property(10, String.class, "pregnancyBreastNotakevitd", false, "PREGNANCY_BREAST_NOTAKEVITD");
        public final static Property PregnancyBreastLesssunshine = new Property(11, String.class, "pregnancyBreastLesssunshine", false, "PREGNANCY_BREAST_LESSSUNSHINE");
        public final static Property PregnancyBreastSpasm = new Property(12, String.class, "pregnancyBreastSpasm", false, "PREGNANCY_BREAST_SPASM");
        public final static Property Ferralis = new Property(13, String.class, "ferralis", false, "FERRALIS");
        public final static Property TakeVitd = new Property(14, String.class, "takeVitd", false, "TAKE_VITD");
        public final static Property TakeVitdAgeMonth = new Property(15, Integer.class, "takeVitdAgeMonth", false, "TAKE_VITD_AGE_MONTH");
        public final static Property TakeVitdAgeDay = new Property(16, Integer.class, "takeVitdAgeDay", false, "TAKE_VITD_AGE_DAY");
        public final static Property MedicineName = new Property(17, String.class, "medicineName", false, "MEDICINE_NAME");
        public final static Property Dosage = new Property(18, Double.class, "dosage", false, "DOSAGE");
        public final static Property DosageUnit = new Property(19, String.class, "dosageUnit", false, "DOSAGE_UNIT");
        public final static Property CourseWeek = new Property(20, Integer.class, "courseWeek", false, "COURSE_WEEK");
        public final static Property FeedCondition = new Property(21, String.class, "feedCondition", false, "FEED_CONDITION");
        public final static Property ChangeFoodAge = new Property(22, Integer.class, "changeFoodAge", false, "CHANGE_FOOD_AGE");
        public final static Property Illness = new Property(23, String.class, "illness", false, "ILLNESS");
        public final static Property SignCaputQuadratum = new Property(24, String.class, "signCaputQuadratum", false, "SIGN_CAPUT_QUADRATUM");
        public final static Property SignRachiticrosary = new Property(25, String.class, "signRachiticrosary", false, "SIGN_RACHITICROSARY");
        public final static Property SignCartilageSulcus = new Property(26, String.class, "signCartilageSulcus", false, "SIGN_CARTILAGE_SULCUS");
        public final static Property SignPectusCarinatum = new Property(27, String.class, "signPectusCarinatum", false, "SIGN_PECTUS_CARINATUM");
        public final static Property SignScleromata = new Property(28, String.class, "signScleromata", false, "SIGN_SCLEROMATA");
        public final static Property SignBakerLeg = new Property(29, String.class, "signBakerLeg", false, "SIGN_BAKER_LEG");
        public final static Property SignBandyLeg = new Property(30, String.class, "signBandyLeg", false, "SIGN_BANDY_LEG");
        public final static Property BloodCalcuim = new Property(31, String.class, "bloodCalcuim", false, "BLOOD_CALCUIM");
        public final static Property BloodPhosphorus = new Property(32, String.class, "bloodPhosphorus", false, "BLOOD_PHOSPHORUS");
        public final static Property BloodAkp = new Property(33, String.class, "bloodAkp", false, "BLOOD_AKP");
        public final static Property Blood25ohd = new Property(34, String.class, "blood25ohd", false, "BLOOD25OHD");
        public final static Property XRatios = new Property(35, String.class, "xRatios", false, "X_RATIOS");
        public final static Property FeedHistory = new Property(36, String.class, "feedHistory", false, "FEED_HISTORY");
        public final static Property WeakDiagnosis = new Property(37, String.class, "weakDiagnosis", false, "WEAK_DIAGNOSIS");
        public final static Property FollowupResult = new Property(38, String.class, "followupResult", false, "FOLLOWUP_RESULT");
        public final static Property Evaluation = new Property(39, String.class, "evaluation", false, "EVALUATION");
        public final static Property WeakLevel = new Property(40, String.class, "weakLevel", false, "WEAK_LEVEL");
        public final static Property CreateDate = new Property(41, java.util.Date.class, "createDate", false, "CREATE_DATE");
        public final static Property WeakFinishDate = new Property(42, java.util.Date.class, "weakFinishDate", false, "WEAK_FINISH_DATE");
        public final static Property WeakTransfer = new Property(43, String.class, "weakTransfer", false, "WEAK_TRANSFER");
        public final static Property RefferalOrgName = new Property(44, String.class, "refferalOrgName", false, "REFFERAL_ORG_NAME");
        public final static Property WeakTransferOther = new Property(45, String.class, "weakTransferOther", false, "WEAK_TRANSFER_OTHER");
        public final static Property FinishOperatorName = new Property(46, String.class, "finishOperatorName", false, "FINISH_OPERATOR_NAME");
        public final static Property FinishOrgName = new Property(47, String.class, "finishOrgName", false, "FINISH_ORG_NAME");
        public final static Property IsCancel = new Property(48, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(49, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(50, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(51, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(52, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(53, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(54, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(55, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(56, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(57, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(58, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
    };


    public ChildWeakInfoDao(DaoConfig config) {
        super(config);
    }
    
    public ChildWeakInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CHILD_WEAK_INFO\" (" + //
                "\"CHILD_WEAK_INFO_ID\" TEXT," + // 0: childWeakInfoId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"CHILD_WEAK_INFO_NO\" TEXT," + // 2: childWeakInfoNo
                "\"INFO_TYPE\" TEXT," + // 3: infoType
                "\"INFO_TYPE_OTHER\" TEXT," + // 4: infoTypeOther
                "\"BORN_HISTORY_EARLY\" TEXT," + // 5: bornHistoryEarly
                "\"BORN_HISTORY_LESS_WEIGHT\" TEXT," + // 6: bornHistoryLessWeight
                "\"BORN_HISTORY_FETUS_MORE\" TEXT," + // 7: bornHistoryFetusMore
                "\"PREGNANCY_ANEMIA_WEEK\" INTEGER," + // 8: pregnancyAnemiaWeek
                "\"PREGNANCY_ANEMIA_HB\" INTEGER," + // 9: pregnancyAnemiaHb
                "\"PREGNANCY_BREAST_NOTAKEVITD\" TEXT," + // 10: pregnancyBreastNotakevitd
                "\"PREGNANCY_BREAST_LESSSUNSHINE\" TEXT," + // 11: pregnancyBreastLesssunshine
                "\"PREGNANCY_BREAST_SPASM\" TEXT," + // 12: pregnancyBreastSpasm
                "\"FERRALIS\" TEXT," + // 13: ferralis
                "\"TAKE_VITD\" TEXT," + // 14: takeVitd
                "\"TAKE_VITD_AGE_MONTH\" INTEGER," + // 15: takeVitdAgeMonth
                "\"TAKE_VITD_AGE_DAY\" INTEGER," + // 16: takeVitdAgeDay
                "\"MEDICINE_NAME\" TEXT," + // 17: medicineName
                "\"DOSAGE\" REAL," + // 18: dosage
                "\"DOSAGE_UNIT\" TEXT," + // 19: dosageUnit
                "\"COURSE_WEEK\" INTEGER," + // 20: courseWeek
                "\"FEED_CONDITION\" TEXT," + // 21: feedCondition
                "\"CHANGE_FOOD_AGE\" INTEGER," + // 22: changeFoodAge
                "\"ILLNESS\" TEXT," + // 23: illness
                "\"SIGN_CAPUT_QUADRATUM\" TEXT," + // 24: signCaputQuadratum
                "\"SIGN_RACHITICROSARY\" TEXT," + // 25: signRachiticrosary
                "\"SIGN_CARTILAGE_SULCUS\" TEXT," + // 26: signCartilageSulcus
                "\"SIGN_PECTUS_CARINATUM\" TEXT," + // 27: signPectusCarinatum
                "\"SIGN_SCLEROMATA\" TEXT," + // 28: signScleromata
                "\"SIGN_BAKER_LEG\" TEXT," + // 29: signBakerLeg
                "\"SIGN_BANDY_LEG\" TEXT," + // 30: signBandyLeg
                "\"BLOOD_CALCUIM\" TEXT," + // 31: bloodCalcuim
                "\"BLOOD_PHOSPHORUS\" TEXT," + // 32: bloodPhosphorus
                "\"BLOOD_AKP\" TEXT," + // 33: bloodAkp
                "\"BLOOD25OHD\" TEXT," + // 34: blood25ohd
                "\"X_RATIOS\" TEXT," + // 35: xRatios
                "\"FEED_HISTORY\" TEXT," + // 36: feedHistory
                "\"WEAK_DIAGNOSIS\" TEXT," + // 37: weakDiagnosis
                "\"FOLLOWUP_RESULT\" TEXT," + // 38: followupResult
                "\"EVALUATION\" TEXT," + // 39: evaluation
                "\"WEAK_LEVEL\" TEXT," + // 40: weakLevel
                "\"CREATE_DATE\" INTEGER," + // 41: createDate
                "\"WEAK_FINISH_DATE\" INTEGER," + // 42: weakFinishDate
                "\"WEAK_TRANSFER\" TEXT," + // 43: weakTransfer
                "\"REFFERAL_ORG_NAME\" TEXT," + // 44: refferalOrgName
                "\"WEAK_TRANSFER_OTHER\" TEXT," + // 45: weakTransferOther
                "\"FINISH_OPERATOR_NAME\" TEXT," + // 46: finishOperatorName
                "\"FINISH_ORG_NAME\" TEXT," + // 47: finishOrgName
                "\"IS_CANCEL\" INTEGER," + // 48: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 49: createOrgId
                "\"ORG_NAME\" TEXT," + // 50: orgName
                "\"CREATOR_ID\" TEXT," + // 51: creatorId
                "\"CREATOR\" TEXT," + // 52: creator
                "\"CREATE_TIME\" INTEGER," + // 53: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 54: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 55: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 56: modifierId
                "\"MODIFIER\" TEXT," + // 57: modifier
                "\"MODIFIED_TIME\" INTEGER);"); // 58: modifiedTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CHILD_WEAK_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ChildWeakInfo entity) {
        stmt.clearBindings();
 
        String childWeakInfoId = entity.getChildWeakInfoId();
        if (childWeakInfoId != null) {
            stmt.bindString(1, childWeakInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String childWeakInfoNo = entity.getChildWeakInfoNo();
        if (childWeakInfoNo != null) {
            stmt.bindString(3, childWeakInfoNo);
        }
 
        String infoType = entity.getInfoType();
        if (infoType != null) {
            stmt.bindString(4, infoType);
        }
 
        String infoTypeOther = entity.getInfoTypeOther();
        if (infoTypeOther != null) {
            stmt.bindString(5, infoTypeOther);
        }
 
        String bornHistoryEarly = entity.getBornHistoryEarly();
        if (bornHistoryEarly != null) {
            stmt.bindString(6, bornHistoryEarly);
        }
 
        String bornHistoryLessWeight = entity.getBornHistoryLessWeight();
        if (bornHistoryLessWeight != null) {
            stmt.bindString(7, bornHistoryLessWeight);
        }
 
        String bornHistoryFetusMore = entity.getBornHistoryFetusMore();
        if (bornHistoryFetusMore != null) {
            stmt.bindString(8, bornHistoryFetusMore);
        }
 
        Integer pregnancyAnemiaWeek = entity.getPregnancyAnemiaWeek();
        if (pregnancyAnemiaWeek != null) {
            stmt.bindLong(9, pregnancyAnemiaWeek);
        }
 
        Integer pregnancyAnemiaHb = entity.getPregnancyAnemiaHb();
        if (pregnancyAnemiaHb != null) {
            stmt.bindLong(10, pregnancyAnemiaHb);
        }
 
        String pregnancyBreastNotakevitd = entity.getPregnancyBreastNotakevitd();
        if (pregnancyBreastNotakevitd != null) {
            stmt.bindString(11, pregnancyBreastNotakevitd);
        }
 
        String pregnancyBreastLesssunshine = entity.getPregnancyBreastLesssunshine();
        if (pregnancyBreastLesssunshine != null) {
            stmt.bindString(12, pregnancyBreastLesssunshine);
        }
 
        String pregnancyBreastSpasm = entity.getPregnancyBreastSpasm();
        if (pregnancyBreastSpasm != null) {
            stmt.bindString(13, pregnancyBreastSpasm);
        }
 
        String ferralis = entity.getFerralis();
        if (ferralis != null) {
            stmt.bindString(14, ferralis);
        }
 
        String takeVitd = entity.getTakeVitd();
        if (takeVitd != null) {
            stmt.bindString(15, takeVitd);
        }
 
        Integer takeVitdAgeMonth = entity.getTakeVitdAgeMonth();
        if (takeVitdAgeMonth != null) {
            stmt.bindLong(16, takeVitdAgeMonth);
        }
 
        Integer takeVitdAgeDay = entity.getTakeVitdAgeDay();
        if (takeVitdAgeDay != null) {
            stmt.bindLong(17, takeVitdAgeDay);
        }
 
        String medicineName = entity.getMedicineName();
        if (medicineName != null) {
            stmt.bindString(18, medicineName);
        }
 
        Double dosage = entity.getDosage();
        if (dosage != null) {
            stmt.bindDouble(19, dosage);
        }
 
        String dosageUnit = entity.getDosageUnit();
        if (dosageUnit != null) {
            stmt.bindString(20, dosageUnit);
        }
 
        Integer courseWeek = entity.getCourseWeek();
        if (courseWeek != null) {
            stmt.bindLong(21, courseWeek);
        }
 
        String feedCondition = entity.getFeedCondition();
        if (feedCondition != null) {
            stmt.bindString(22, feedCondition);
        }
 
        Integer changeFoodAge = entity.getChangeFoodAge();
        if (changeFoodAge != null) {
            stmt.bindLong(23, changeFoodAge);
        }
 
        String illness = entity.getIllness();
        if (illness != null) {
            stmt.bindString(24, illness);
        }
 
        String signCaputQuadratum = entity.getSignCaputQuadratum();
        if (signCaputQuadratum != null) {
            stmt.bindString(25, signCaputQuadratum);
        }
 
        String signRachiticrosary = entity.getSignRachiticrosary();
        if (signRachiticrosary != null) {
            stmt.bindString(26, signRachiticrosary);
        }
 
        String signCartilageSulcus = entity.getSignCartilageSulcus();
        if (signCartilageSulcus != null) {
            stmt.bindString(27, signCartilageSulcus);
        }
 
        String signPectusCarinatum = entity.getSignPectusCarinatum();
        if (signPectusCarinatum != null) {
            stmt.bindString(28, signPectusCarinatum);
        }
 
        String signScleromata = entity.getSignScleromata();
        if (signScleromata != null) {
            stmt.bindString(29, signScleromata);
        }
 
        String signBakerLeg = entity.getSignBakerLeg();
        if (signBakerLeg != null) {
            stmt.bindString(30, signBakerLeg);
        }
 
        String signBandyLeg = entity.getSignBandyLeg();
        if (signBandyLeg != null) {
            stmt.bindString(31, signBandyLeg);
        }
 
        String bloodCalcuim = entity.getBloodCalcuim();
        if (bloodCalcuim != null) {
            stmt.bindString(32, bloodCalcuim);
        }
 
        String bloodPhosphorus = entity.getBloodPhosphorus();
        if (bloodPhosphorus != null) {
            stmt.bindString(33, bloodPhosphorus);
        }
 
        String bloodAkp = entity.getBloodAkp();
        if (bloodAkp != null) {
            stmt.bindString(34, bloodAkp);
        }
 
        String blood25ohd = entity.getBlood25ohd();
        if (blood25ohd != null) {
            stmt.bindString(35, blood25ohd);
        }
 
        String xRatios = entity.getXRatios();
        if (xRatios != null) {
            stmt.bindString(36, xRatios);
        }
 
        String feedHistory = entity.getFeedHistory();
        if (feedHistory != null) {
            stmt.bindString(37, feedHistory);
        }
 
        String weakDiagnosis = entity.getWeakDiagnosis();
        if (weakDiagnosis != null) {
            stmt.bindString(38, weakDiagnosis);
        }
 
        String followupResult = entity.getFollowupResult();
        if (followupResult != null) {
            stmt.bindString(39, followupResult);
        }
 
        String evaluation = entity.getEvaluation();
        if (evaluation != null) {
            stmt.bindString(40, evaluation);
        }
 
        String weakLevel = entity.getWeakLevel();
        if (weakLevel != null) {
            stmt.bindString(41, weakLevel);
        }
 
        java.util.Date createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindLong(42, createDate.getTime());
        }
 
        java.util.Date weakFinishDate = entity.getWeakFinishDate();
        if (weakFinishDate != null) {
            stmt.bindLong(43, weakFinishDate.getTime());
        }
 
        String weakTransfer = entity.getWeakTransfer();
        if (weakTransfer != null) {
            stmt.bindString(44, weakTransfer);
        }
 
        String refferalOrgName = entity.getRefferalOrgName();
        if (refferalOrgName != null) {
            stmt.bindString(45, refferalOrgName);
        }
 
        String weakTransferOther = entity.getWeakTransferOther();
        if (weakTransferOther != null) {
            stmt.bindString(46, weakTransferOther);
        }
 
        String finishOperatorName = entity.getFinishOperatorName();
        if (finishOperatorName != null) {
            stmt.bindString(47, finishOperatorName);
        }
 
        String finishOrgName = entity.getFinishOrgName();
        if (finishOrgName != null) {
            stmt.bindString(48, finishOrgName);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(49, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(50, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(51, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(52, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(53, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(54, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(55, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(56, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(57, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(58, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(59, modifiedTime.getTime());
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ChildWeakInfo entity) {
        stmt.clearBindings();
 
        String childWeakInfoId = entity.getChildWeakInfoId();
        if (childWeakInfoId != null) {
            stmt.bindString(1, childWeakInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String childWeakInfoNo = entity.getChildWeakInfoNo();
        if (childWeakInfoNo != null) {
            stmt.bindString(3, childWeakInfoNo);
        }
 
        String infoType = entity.getInfoType();
        if (infoType != null) {
            stmt.bindString(4, infoType);
        }
 
        String infoTypeOther = entity.getInfoTypeOther();
        if (infoTypeOther != null) {
            stmt.bindString(5, infoTypeOther);
        }
 
        String bornHistoryEarly = entity.getBornHistoryEarly();
        if (bornHistoryEarly != null) {
            stmt.bindString(6, bornHistoryEarly);
        }
 
        String bornHistoryLessWeight = entity.getBornHistoryLessWeight();
        if (bornHistoryLessWeight != null) {
            stmt.bindString(7, bornHistoryLessWeight);
        }
 
        String bornHistoryFetusMore = entity.getBornHistoryFetusMore();
        if (bornHistoryFetusMore != null) {
            stmt.bindString(8, bornHistoryFetusMore);
        }
 
        Integer pregnancyAnemiaWeek = entity.getPregnancyAnemiaWeek();
        if (pregnancyAnemiaWeek != null) {
            stmt.bindLong(9, pregnancyAnemiaWeek);
        }
 
        Integer pregnancyAnemiaHb = entity.getPregnancyAnemiaHb();
        if (pregnancyAnemiaHb != null) {
            stmt.bindLong(10, pregnancyAnemiaHb);
        }
 
        String pregnancyBreastNotakevitd = entity.getPregnancyBreastNotakevitd();
        if (pregnancyBreastNotakevitd != null) {
            stmt.bindString(11, pregnancyBreastNotakevitd);
        }
 
        String pregnancyBreastLesssunshine = entity.getPregnancyBreastLesssunshine();
        if (pregnancyBreastLesssunshine != null) {
            stmt.bindString(12, pregnancyBreastLesssunshine);
        }
 
        String pregnancyBreastSpasm = entity.getPregnancyBreastSpasm();
        if (pregnancyBreastSpasm != null) {
            stmt.bindString(13, pregnancyBreastSpasm);
        }
 
        String ferralis = entity.getFerralis();
        if (ferralis != null) {
            stmt.bindString(14, ferralis);
        }
 
        String takeVitd = entity.getTakeVitd();
        if (takeVitd != null) {
            stmt.bindString(15, takeVitd);
        }
 
        Integer takeVitdAgeMonth = entity.getTakeVitdAgeMonth();
        if (takeVitdAgeMonth != null) {
            stmt.bindLong(16, takeVitdAgeMonth);
        }
 
        Integer takeVitdAgeDay = entity.getTakeVitdAgeDay();
        if (takeVitdAgeDay != null) {
            stmt.bindLong(17, takeVitdAgeDay);
        }
 
        String medicineName = entity.getMedicineName();
        if (medicineName != null) {
            stmt.bindString(18, medicineName);
        }
 
        Double dosage = entity.getDosage();
        if (dosage != null) {
            stmt.bindDouble(19, dosage);
        }
 
        String dosageUnit = entity.getDosageUnit();
        if (dosageUnit != null) {
            stmt.bindString(20, dosageUnit);
        }
 
        Integer courseWeek = entity.getCourseWeek();
        if (courseWeek != null) {
            stmt.bindLong(21, courseWeek);
        }
 
        String feedCondition = entity.getFeedCondition();
        if (feedCondition != null) {
            stmt.bindString(22, feedCondition);
        }
 
        Integer changeFoodAge = entity.getChangeFoodAge();
        if (changeFoodAge != null) {
            stmt.bindLong(23, changeFoodAge);
        }
 
        String illness = entity.getIllness();
        if (illness != null) {
            stmt.bindString(24, illness);
        }
 
        String signCaputQuadratum = entity.getSignCaputQuadratum();
        if (signCaputQuadratum != null) {
            stmt.bindString(25, signCaputQuadratum);
        }
 
        String signRachiticrosary = entity.getSignRachiticrosary();
        if (signRachiticrosary != null) {
            stmt.bindString(26, signRachiticrosary);
        }
 
        String signCartilageSulcus = entity.getSignCartilageSulcus();
        if (signCartilageSulcus != null) {
            stmt.bindString(27, signCartilageSulcus);
        }
 
        String signPectusCarinatum = entity.getSignPectusCarinatum();
        if (signPectusCarinatum != null) {
            stmt.bindString(28, signPectusCarinatum);
        }
 
        String signScleromata = entity.getSignScleromata();
        if (signScleromata != null) {
            stmt.bindString(29, signScleromata);
        }
 
        String signBakerLeg = entity.getSignBakerLeg();
        if (signBakerLeg != null) {
            stmt.bindString(30, signBakerLeg);
        }
 
        String signBandyLeg = entity.getSignBandyLeg();
        if (signBandyLeg != null) {
            stmt.bindString(31, signBandyLeg);
        }
 
        String bloodCalcuim = entity.getBloodCalcuim();
        if (bloodCalcuim != null) {
            stmt.bindString(32, bloodCalcuim);
        }
 
        String bloodPhosphorus = entity.getBloodPhosphorus();
        if (bloodPhosphorus != null) {
            stmt.bindString(33, bloodPhosphorus);
        }
 
        String bloodAkp = entity.getBloodAkp();
        if (bloodAkp != null) {
            stmt.bindString(34, bloodAkp);
        }
 
        String blood25ohd = entity.getBlood25ohd();
        if (blood25ohd != null) {
            stmt.bindString(35, blood25ohd);
        }
 
        String xRatios = entity.getXRatios();
        if (xRatios != null) {
            stmt.bindString(36, xRatios);
        }
 
        String feedHistory = entity.getFeedHistory();
        if (feedHistory != null) {
            stmt.bindString(37, feedHistory);
        }
 
        String weakDiagnosis = entity.getWeakDiagnosis();
        if (weakDiagnosis != null) {
            stmt.bindString(38, weakDiagnosis);
        }
 
        String followupResult = entity.getFollowupResult();
        if (followupResult != null) {
            stmt.bindString(39, followupResult);
        }
 
        String evaluation = entity.getEvaluation();
        if (evaluation != null) {
            stmt.bindString(40, evaluation);
        }
 
        String weakLevel = entity.getWeakLevel();
        if (weakLevel != null) {
            stmt.bindString(41, weakLevel);
        }
 
        java.util.Date createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindLong(42, createDate.getTime());
        }
 
        java.util.Date weakFinishDate = entity.getWeakFinishDate();
        if (weakFinishDate != null) {
            stmt.bindLong(43, weakFinishDate.getTime());
        }
 
        String weakTransfer = entity.getWeakTransfer();
        if (weakTransfer != null) {
            stmt.bindString(44, weakTransfer);
        }
 
        String refferalOrgName = entity.getRefferalOrgName();
        if (refferalOrgName != null) {
            stmt.bindString(45, refferalOrgName);
        }
 
        String weakTransferOther = entity.getWeakTransferOther();
        if (weakTransferOther != null) {
            stmt.bindString(46, weakTransferOther);
        }
 
        String finishOperatorName = entity.getFinishOperatorName();
        if (finishOperatorName != null) {
            stmt.bindString(47, finishOperatorName);
        }
 
        String finishOrgName = entity.getFinishOrgName();
        if (finishOrgName != null) {
            stmt.bindString(48, finishOrgName);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(49, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(50, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(51, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(52, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(53, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(54, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(55, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(56, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(57, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(58, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(59, modifiedTime.getTime());
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public ChildWeakInfo readEntity(Cursor cursor, int offset) {
        ChildWeakInfo entity = new ChildWeakInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // childWeakInfoId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // childWeakInfoNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // infoType
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // infoTypeOther
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // bornHistoryEarly
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // bornHistoryLessWeight
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // bornHistoryFetusMore
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // pregnancyAnemiaWeek
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // pregnancyAnemiaHb
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // pregnancyBreastNotakevitd
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // pregnancyBreastLesssunshine
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // pregnancyBreastSpasm
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // ferralis
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // takeVitd
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // takeVitdAgeMonth
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // takeVitdAgeDay
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // medicineName
            cursor.isNull(offset + 18) ? null : cursor.getDouble(offset + 18), // dosage
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // dosageUnit
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // courseWeek
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // feedCondition
            cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22), // changeFoodAge
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // illness
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // signCaputQuadratum
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // signRachiticrosary
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // signCartilageSulcus
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // signPectusCarinatum
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // signScleromata
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // signBakerLeg
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // signBandyLeg
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // bloodCalcuim
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // bloodPhosphorus
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // bloodAkp
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // blood25ohd
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // xRatios
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // feedHistory
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // weakDiagnosis
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // followupResult
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // evaluation
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // weakLevel
            cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)), // createDate
            cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)), // weakFinishDate
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // weakTransfer
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // refferalOrgName
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // weakTransferOther
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // finishOperatorName
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // finishOrgName
            cursor.isNull(offset + 48) ? null : cursor.getInt(offset + 48), // isCancel
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // createOrgId
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // orgName
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // creatorId
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // creator
            cursor.isNull(offset + 53) ? null : new java.util.Date(cursor.getLong(offset + 53)), // createTime
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // modifiedOrgId
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // modifiedOrgName
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // modifierId
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // modifier
            cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)) // modifiedTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ChildWeakInfo entity, int offset) {
        entity.setChildWeakInfoId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setChildWeakInfoNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setInfoType(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setInfoTypeOther(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setBornHistoryEarly(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setBornHistoryLessWeight(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setBornHistoryFetusMore(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setPregnancyAnemiaWeek(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setPregnancyAnemiaHb(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setPregnancyBreastNotakevitd(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setPregnancyBreastLesssunshine(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setPregnancyBreastSpasm(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFerralis(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setTakeVitd(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setTakeVitdAgeMonth(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setTakeVitdAgeDay(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setMedicineName(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setDosage(cursor.isNull(offset + 18) ? null : cursor.getDouble(offset + 18));
        entity.setDosageUnit(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setCourseWeek(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setFeedCondition(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setChangeFoodAge(cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22));
        entity.setIllness(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setSignCaputQuadratum(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setSignRachiticrosary(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setSignCartilageSulcus(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setSignPectusCarinatum(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setSignScleromata(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setSignBakerLeg(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setSignBandyLeg(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setBloodCalcuim(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setBloodPhosphorus(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setBloodAkp(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setBlood25ohd(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setXRatios(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setFeedHistory(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setWeakDiagnosis(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setFollowupResult(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setEvaluation(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setWeakLevel(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setCreateDate(cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)));
        entity.setWeakFinishDate(cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)));
        entity.setWeakTransfer(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setRefferalOrgName(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setWeakTransferOther(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setFinishOperatorName(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setFinishOrgName(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setIsCancel(cursor.isNull(offset + 48) ? null : cursor.getInt(offset + 48));
        entity.setCreateOrgId(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setOrgName(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setCreatorId(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setCreator(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setCreateTime(cursor.isNull(offset + 53) ? null : new java.util.Date(cursor.getLong(offset + 53)));
        entity.setModifiedOrgId(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setModifiedOrgName(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setModifierId(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setModifier(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setModifiedTime(cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(ChildWeakInfo entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(ChildWeakInfo entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
