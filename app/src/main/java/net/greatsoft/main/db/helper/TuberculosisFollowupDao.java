package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.tuberculosis.TuberculosisFollowup;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TUBERCULOSIS_FOLLOWUP".
*/
public class TuberculosisFollowupDao extends AbstractDao<TuberculosisFollowup, Void> {

    public static final String TABLENAME = "TUBERCULOSIS_FOLLOWUP";

    /**
     * Properties of entity TuberculosisFollowup.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property TuberculosisFollowupId = new Property(0, String.class, "tuberculosisFollowupId", false, "TUBERCULOSIS_FOLLOWUP_ID");
        public final static Property TuberculosisInfoId = new Property(1, String.class, "tuberculosisInfoId", false, "TUBERCULOSIS_INFO_ID");
        public final static Property PersonInfoId = new Property(2, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property TuberculosisFollowupNo = new Property(3, String.class, "tuberculosisFollowupNo", false, "TUBERCULOSIS_FOLLOWUP_NO");
        public final static Property TrentmentMonth = new Property(4, Integer.class, "trentmentMonth", false, "TRENTMENT_MONTH");
        public final static Property SuperviseTypeCode = new Property(5, String.class, "superviseTypeCode", false, "SUPERVISE_TYPE_CODE");
        public final static Property Name = new Property(6, String.class, "name", false, "NAME");
        public final static Property FollowupDate = new Property(7, java.util.Date.class, "followupDate", false, "FOLLOWUP_DATE");
        public final static Property FollowupWayCode = new Property(8, String.class, "followupWayCode", false, "FOLLOWUP_WAY_CODE");
        public final static Property DailySmoking = new Property(9, Integer.class, "dailySmoking", false, "DAILY_SMOKING");
        public final static Property AimDailySmoking = new Property(10, Integer.class, "aimDailySmoking", false, "AIM_DAILY_SMOKING");
        public final static Property DailyDrinking = new Property(11, Integer.class, "dailyDrinking", false, "DAILY_DRINKING");
        public final static Property AimDailyDrinking = new Property(12, Integer.class, "aimDailyDrinking", false, "AIM_DAILY_DRINKING");
        public final static Property ChemotherapyCode = new Property(13, String.class, "chemotherapyCode", false, "CHEMOTHERAPY_CODE");
        public final static Property ChemotherapyValue = new Property(14, String.class, "chemotherapyValue", false, "CHEMOTHERAPY_VALUE");
        public final static Property DrugUseCode = new Property(15, String.class, "drugUseCode", false, "DRUG_USE_CODE");
        public final static Property LoseDrugTimes = new Property(16, Integer.class, "loseDrugTimes", false, "LOSE_DRUG_TIMES");
        public final static Property DrugAdverseCode = new Property(17, String.class, "drugAdverseCode", false, "DRUG_ADVERSE_CODE");
        public final static Property DrugAdverseDesc = new Property(18, String.class, "drugAdverseDesc", false, "DRUG_ADVERSE_DESC");
        public final static Property ComplicationCode = new Property(19, String.class, "complicationCode", false, "COMPLICATION_CODE");
        public final static Property ComplicationDesc = new Property(20, String.class, "complicationDesc", false, "COMPLICATION_DESC");
        public final static Property IsReferralCode = new Property(21, String.class, "isReferralCode", false, "IS_REFERRAL_CODE");
        public final static Property ReferralReason = new Property(22, String.class, "referralReason", false, "REFERRAL_REASON");
        public final static Property RefertoOrgName = new Property(23, String.class, "refertoOrgName", false, "REFERTO_ORG_NAME");
        public final static Property RefertoDeptName = new Property(24, String.class, "refertoDeptName", false, "REFERTO_DEPT_NAME");
        public final static Property GetMedicinePlace = new Property(25, String.class, "getMedicinePlace", false, "GET_MEDICINE_PLACE");
        public final static Property Suggestion = new Property(26, String.class, "suggestion", false, "SUGGESTION");
        public final static Property NextFollowupDate = new Property(27, java.util.Date.class, "nextFollowupDate", false, "NEXT_FOLLOWUP_DATE");
        public final static Property FollowupDoctorId = new Property(28, String.class, "followupDoctorId", false, "FOLLOWUP_DOCTOR_ID");
        public final static Property FollowupDoctorName = new Property(29, String.class, "followupDoctorName", false, "FOLLOWUP_DOCTOR_NAME");
        public final static Property IsCancel = new Property(30, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(31, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(32, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(33, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(34, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(35, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(36, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(37, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(38, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(39, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(40, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
    };


    public TuberculosisFollowupDao(DaoConfig config) {
        super(config);
    }
    
    public TuberculosisFollowupDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TUBERCULOSIS_FOLLOWUP\" (" + //
                "\"TUBERCULOSIS_FOLLOWUP_ID\" TEXT," + // 0: tuberculosisFollowupId
                "\"TUBERCULOSIS_INFO_ID\" TEXT," + // 1: tuberculosisInfoId
                "\"PERSON_INFO_ID\" TEXT," + // 2: personInfoId
                "\"TUBERCULOSIS_FOLLOWUP_NO\" TEXT," + // 3: tuberculosisFollowupNo
                "\"TRENTMENT_MONTH\" INTEGER," + // 4: trentmentMonth
                "\"SUPERVISE_TYPE_CODE\" TEXT," + // 5: superviseTypeCode
                "\"NAME\" TEXT," + // 6: name
                "\"FOLLOWUP_DATE\" INTEGER," + // 7: followupDate
                "\"FOLLOWUP_WAY_CODE\" TEXT," + // 8: followupWayCode
                "\"DAILY_SMOKING\" INTEGER," + // 9: dailySmoking
                "\"AIM_DAILY_SMOKING\" INTEGER," + // 10: aimDailySmoking
                "\"DAILY_DRINKING\" INTEGER," + // 11: dailyDrinking
                "\"AIM_DAILY_DRINKING\" INTEGER," + // 12: aimDailyDrinking
                "\"CHEMOTHERAPY_CODE\" TEXT," + // 13: chemotherapyCode
                "\"CHEMOTHERAPY_VALUE\" TEXT," + // 14: chemotherapyValue
                "\"DRUG_USE_CODE\" TEXT," + // 15: drugUseCode
                "\"LOSE_DRUG_TIMES\" INTEGER," + // 16: loseDrugTimes
                "\"DRUG_ADVERSE_CODE\" TEXT," + // 17: drugAdverseCode
                "\"DRUG_ADVERSE_DESC\" TEXT," + // 18: drugAdverseDesc
                "\"COMPLICATION_CODE\" TEXT," + // 19: complicationCode
                "\"COMPLICATION_DESC\" TEXT," + // 20: complicationDesc
                "\"IS_REFERRAL_CODE\" TEXT," + // 21: isReferralCode
                "\"REFERRAL_REASON\" TEXT," + // 22: referralReason
                "\"REFERTO_ORG_NAME\" TEXT," + // 23: refertoOrgName
                "\"REFERTO_DEPT_NAME\" TEXT," + // 24: refertoDeptName
                "\"GET_MEDICINE_PLACE\" TEXT," + // 25: getMedicinePlace
                "\"SUGGESTION\" TEXT," + // 26: suggestion
                "\"NEXT_FOLLOWUP_DATE\" INTEGER," + // 27: nextFollowupDate
                "\"FOLLOWUP_DOCTOR_ID\" TEXT," + // 28: followupDoctorId
                "\"FOLLOWUP_DOCTOR_NAME\" TEXT," + // 29: followupDoctorName
                "\"IS_CANCEL\" INTEGER," + // 30: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 31: createOrgId
                "\"ORG_NAME\" TEXT," + // 32: orgName
                "\"CREATOR_ID\" TEXT," + // 33: creatorId
                "\"CREATOR\" TEXT," + // 34: creator
                "\"CREATE_TIME\" INTEGER," + // 35: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 36: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 37: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 38: modifierId
                "\"MODIFIER\" TEXT," + // 39: modifier
                "\"MODIFIED_TIME\" INTEGER);"); // 40: modifiedTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TUBERCULOSIS_FOLLOWUP\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TuberculosisFollowup entity) {
        stmt.clearBindings();
 
        String tuberculosisFollowupId = entity.getTuberculosisFollowupId();
        if (tuberculosisFollowupId != null) {
            stmt.bindString(1, tuberculosisFollowupId);
        }
 
        String tuberculosisInfoId = entity.getTuberculosisInfoId();
        if (tuberculosisInfoId != null) {
            stmt.bindString(2, tuberculosisInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(3, personInfoId);
        }
 
        String tuberculosisFollowupNo = entity.getTuberculosisFollowupNo();
        if (tuberculosisFollowupNo != null) {
            stmt.bindString(4, tuberculosisFollowupNo);
        }
 
        Integer trentmentMonth = entity.getTrentmentMonth();
        if (trentmentMonth != null) {
            stmt.bindLong(5, trentmentMonth);
        }
 
        String superviseTypeCode = entity.getSuperviseTypeCode();
        if (superviseTypeCode != null) {
            stmt.bindString(6, superviseTypeCode);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        java.util.Date followupDate = entity.getFollowupDate();
        if (followupDate != null) {
            stmt.bindLong(8, followupDate.getTime());
        }
 
        String followupWayCode = entity.getFollowupWayCode();
        if (followupWayCode != null) {
            stmt.bindString(9, followupWayCode);
        }
 
        Integer dailySmoking = entity.getDailySmoking();
        if (dailySmoking != null) {
            stmt.bindLong(10, dailySmoking);
        }
 
        Integer aimDailySmoking = entity.getAimDailySmoking();
        if (aimDailySmoking != null) {
            stmt.bindLong(11, aimDailySmoking);
        }
 
        Integer dailyDrinking = entity.getDailyDrinking();
        if (dailyDrinking != null) {
            stmt.bindLong(12, dailyDrinking);
        }
 
        Integer aimDailyDrinking = entity.getAimDailyDrinking();
        if (aimDailyDrinking != null) {
            stmt.bindLong(13, aimDailyDrinking);
        }
 
        String chemotherapyCode = entity.getChemotherapyCode();
        if (chemotherapyCode != null) {
            stmt.bindString(14, chemotherapyCode);
        }
 
        String chemotherapyValue = entity.getChemotherapyValue();
        if (chemotherapyValue != null) {
            stmt.bindString(15, chemotherapyValue);
        }
 
        String drugUseCode = entity.getDrugUseCode();
        if (drugUseCode != null) {
            stmt.bindString(16, drugUseCode);
        }
 
        Integer loseDrugTimes = entity.getLoseDrugTimes();
        if (loseDrugTimes != null) {
            stmt.bindLong(17, loseDrugTimes);
        }
 
        String drugAdverseCode = entity.getDrugAdverseCode();
        if (drugAdverseCode != null) {
            stmt.bindString(18, drugAdverseCode);
        }
 
        String drugAdverseDesc = entity.getDrugAdverseDesc();
        if (drugAdverseDesc != null) {
            stmt.bindString(19, drugAdverseDesc);
        }
 
        String complicationCode = entity.getComplicationCode();
        if (complicationCode != null) {
            stmt.bindString(20, complicationCode);
        }
 
        String complicationDesc = entity.getComplicationDesc();
        if (complicationDesc != null) {
            stmt.bindString(21, complicationDesc);
        }
 
        String isReferralCode = entity.getIsReferralCode();
        if (isReferralCode != null) {
            stmt.bindString(22, isReferralCode);
        }
 
        String referralReason = entity.getReferralReason();
        if (referralReason != null) {
            stmt.bindString(23, referralReason);
        }
 
        String refertoOrgName = entity.getRefertoOrgName();
        if (refertoOrgName != null) {
            stmt.bindString(24, refertoOrgName);
        }
 
        String refertoDeptName = entity.getRefertoDeptName();
        if (refertoDeptName != null) {
            stmt.bindString(25, refertoDeptName);
        }
 
        String getMedicinePlace = entity.getGetMedicinePlace();
        if (getMedicinePlace != null) {
            stmt.bindString(26, getMedicinePlace);
        }
 
        String suggestion = entity.getSuggestion();
        if (suggestion != null) {
            stmt.bindString(27, suggestion);
        }
 
        java.util.Date nextFollowupDate = entity.getNextFollowupDate();
        if (nextFollowupDate != null) {
            stmt.bindLong(28, nextFollowupDate.getTime());
        }
 
        String followupDoctorId = entity.getFollowupDoctorId();
        if (followupDoctorId != null) {
            stmt.bindString(29, followupDoctorId);
        }
 
        String followupDoctorName = entity.getFollowupDoctorName();
        if (followupDoctorName != null) {
            stmt.bindString(30, followupDoctorName);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(31, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(32, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(33, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(34, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(35, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(36, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(37, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(38, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(39, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(40, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(41, modifiedTime.getTime());
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TuberculosisFollowup entity) {
        stmt.clearBindings();
 
        String tuberculosisFollowupId = entity.getTuberculosisFollowupId();
        if (tuberculosisFollowupId != null) {
            stmt.bindString(1, tuberculosisFollowupId);
        }
 
        String tuberculosisInfoId = entity.getTuberculosisInfoId();
        if (tuberculosisInfoId != null) {
            stmt.bindString(2, tuberculosisInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(3, personInfoId);
        }
 
        String tuberculosisFollowupNo = entity.getTuberculosisFollowupNo();
        if (tuberculosisFollowupNo != null) {
            stmt.bindString(4, tuberculosisFollowupNo);
        }
 
        Integer trentmentMonth = entity.getTrentmentMonth();
        if (trentmentMonth != null) {
            stmt.bindLong(5, trentmentMonth);
        }
 
        String superviseTypeCode = entity.getSuperviseTypeCode();
        if (superviseTypeCode != null) {
            stmt.bindString(6, superviseTypeCode);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        java.util.Date followupDate = entity.getFollowupDate();
        if (followupDate != null) {
            stmt.bindLong(8, followupDate.getTime());
        }
 
        String followupWayCode = entity.getFollowupWayCode();
        if (followupWayCode != null) {
            stmt.bindString(9, followupWayCode);
        }
 
        Integer dailySmoking = entity.getDailySmoking();
        if (dailySmoking != null) {
            stmt.bindLong(10, dailySmoking);
        }
 
        Integer aimDailySmoking = entity.getAimDailySmoking();
        if (aimDailySmoking != null) {
            stmt.bindLong(11, aimDailySmoking);
        }
 
        Integer dailyDrinking = entity.getDailyDrinking();
        if (dailyDrinking != null) {
            stmt.bindLong(12, dailyDrinking);
        }
 
        Integer aimDailyDrinking = entity.getAimDailyDrinking();
        if (aimDailyDrinking != null) {
            stmt.bindLong(13, aimDailyDrinking);
        }
 
        String chemotherapyCode = entity.getChemotherapyCode();
        if (chemotherapyCode != null) {
            stmt.bindString(14, chemotherapyCode);
        }
 
        String chemotherapyValue = entity.getChemotherapyValue();
        if (chemotherapyValue != null) {
            stmt.bindString(15, chemotherapyValue);
        }
 
        String drugUseCode = entity.getDrugUseCode();
        if (drugUseCode != null) {
            stmt.bindString(16, drugUseCode);
        }
 
        Integer loseDrugTimes = entity.getLoseDrugTimes();
        if (loseDrugTimes != null) {
            stmt.bindLong(17, loseDrugTimes);
        }
 
        String drugAdverseCode = entity.getDrugAdverseCode();
        if (drugAdverseCode != null) {
            stmt.bindString(18, drugAdverseCode);
        }
 
        String drugAdverseDesc = entity.getDrugAdverseDesc();
        if (drugAdverseDesc != null) {
            stmt.bindString(19, drugAdverseDesc);
        }
 
        String complicationCode = entity.getComplicationCode();
        if (complicationCode != null) {
            stmt.bindString(20, complicationCode);
        }
 
        String complicationDesc = entity.getComplicationDesc();
        if (complicationDesc != null) {
            stmt.bindString(21, complicationDesc);
        }
 
        String isReferralCode = entity.getIsReferralCode();
        if (isReferralCode != null) {
            stmt.bindString(22, isReferralCode);
        }
 
        String referralReason = entity.getReferralReason();
        if (referralReason != null) {
            stmt.bindString(23, referralReason);
        }
 
        String refertoOrgName = entity.getRefertoOrgName();
        if (refertoOrgName != null) {
            stmt.bindString(24, refertoOrgName);
        }
 
        String refertoDeptName = entity.getRefertoDeptName();
        if (refertoDeptName != null) {
            stmt.bindString(25, refertoDeptName);
        }
 
        String getMedicinePlace = entity.getGetMedicinePlace();
        if (getMedicinePlace != null) {
            stmt.bindString(26, getMedicinePlace);
        }
 
        String suggestion = entity.getSuggestion();
        if (suggestion != null) {
            stmt.bindString(27, suggestion);
        }
 
        java.util.Date nextFollowupDate = entity.getNextFollowupDate();
        if (nextFollowupDate != null) {
            stmt.bindLong(28, nextFollowupDate.getTime());
        }
 
        String followupDoctorId = entity.getFollowupDoctorId();
        if (followupDoctorId != null) {
            stmt.bindString(29, followupDoctorId);
        }
 
        String followupDoctorName = entity.getFollowupDoctorName();
        if (followupDoctorName != null) {
            stmt.bindString(30, followupDoctorName);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(31, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(32, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(33, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(34, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(35, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(36, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(37, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(38, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(39, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(40, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(41, modifiedTime.getTime());
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public TuberculosisFollowup readEntity(Cursor cursor, int offset) {
        TuberculosisFollowup entity = new TuberculosisFollowup( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // tuberculosisFollowupId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // tuberculosisInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // personInfoId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // tuberculosisFollowupNo
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // trentmentMonth
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // superviseTypeCode
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // name
            cursor.isNull(offset + 7) ? null : new java.util.Date(cursor.getLong(offset + 7)), // followupDate
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // followupWayCode
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // dailySmoking
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // aimDailySmoking
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // dailyDrinking
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // aimDailyDrinking
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // chemotherapyCode
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // chemotherapyValue
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // drugUseCode
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // loseDrugTimes
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // drugAdverseCode
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // drugAdverseDesc
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // complicationCode
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // complicationDesc
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // isReferralCode
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // referralReason
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // refertoOrgName
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // refertoDeptName
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // getMedicinePlace
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // suggestion
            cursor.isNull(offset + 27) ? null : new java.util.Date(cursor.getLong(offset + 27)), // nextFollowupDate
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // followupDoctorId
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // followupDoctorName
            cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30), // isCancel
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // createOrgId
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // orgName
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // creatorId
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // creator
            cursor.isNull(offset + 35) ? null : new java.util.Date(cursor.getLong(offset + 35)), // createTime
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // modifiedOrgId
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // modifiedOrgName
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // modifierId
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // modifier
            cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)) // modifiedTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TuberculosisFollowup entity, int offset) {
        entity.setTuberculosisFollowupId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setTuberculosisInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPersonInfoId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTuberculosisFollowupNo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTrentmentMonth(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setSuperviseTypeCode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFollowupDate(cursor.isNull(offset + 7) ? null : new java.util.Date(cursor.getLong(offset + 7)));
        entity.setFollowupWayCode(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setDailySmoking(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setAimDailySmoking(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setDailyDrinking(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setAimDailyDrinking(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setChemotherapyCode(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setChemotherapyValue(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDrugUseCode(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setLoseDrugTimes(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setDrugAdverseCode(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setDrugAdverseDesc(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setComplicationCode(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setComplicationDesc(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setIsReferralCode(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setReferralReason(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setRefertoOrgName(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setRefertoDeptName(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setGetMedicinePlace(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setSuggestion(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setNextFollowupDate(cursor.isNull(offset + 27) ? null : new java.util.Date(cursor.getLong(offset + 27)));
        entity.setFollowupDoctorId(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setFollowupDoctorName(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setIsCancel(cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30));
        entity.setCreateOrgId(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setOrgName(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setCreatorId(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setCreator(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCreateTime(cursor.isNull(offset + 35) ? null : new java.util.Date(cursor.getLong(offset + 35)));
        entity.setModifiedOrgId(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setModifiedOrgName(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setModifierId(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setModifier(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setModifiedTime(cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(TuberculosisFollowup entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(TuberculosisFollowup entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
