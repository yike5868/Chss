package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.smi.SmiInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SMI_INFO".
*/
public class SmiInfoDao extends AbstractDao<SmiInfo, Void> {

    public static final String TABLENAME = "SMI_INFO";

    /**
     * Properties of entity SmiInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property SmiInfoId = new Property(0, String.class, "smiInfoId", false, "SMI_INFO_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property SmiInfoNo = new Property(2, String.class, "smiInfoNo", false, "SMI_INFO_NO");
        public final static Property ManageOrgId = new Property(3, String.class, "manageOrgId", false, "MANAGE_ORG_ID");
        public final static Property ManageDate = new Property(4, java.util.Date.class, "manageDate", false, "MANAGE_DATE");
        public final static Property Name = new Property(5, String.class, "name", false, "NAME");
        public final static Property GuardianName = new Property(6, String.class, "guardianName", false, "GUARDIAN_NAME");
        public final static Property GuardianRelationCode = new Property(7, String.class, "guardianRelationCode", false, "GUARDIAN_RELATION_CODE");
        public final static Property GuardianAddr = new Property(8, String.class, "guardianAddr", false, "GUARDIAN_ADDR");
        public final static Property GuardianTelNo = new Property(9, String.class, "guardianTelNo", false, "GUARDIAN_TEL_NO");
        public final static Property CommunityId = new Property(10, String.class, "communityId", false, "COMMUNITY_ID");
        public final static Property CommunityName = new Property(11, String.class, "communityName", false, "COMMUNITY_NAME");
        public final static Property CommunityContactName = new Property(12, String.class, "communityContactName", false, "COMMUNITY_CONTACT_NAME");
        public final static Property CommunityContactTelNo = new Property(13, String.class, "communityContactTelNo", false, "COMMUNITY_CONTACT_TEL_NO");
        public final static Property PermanentTypeCode = new Property(14, String.class, "permanentTypeCode", false, "PERMANENT_TYPE_CODE");
        public final static Property SocietyEffect = new Property(15, String.class, "societyEffect", false, "SOCIETY_EFFECT");
        public final static Property LowRandalieren = new Property(16, String.class, "lowRandalieren", false, "LOW_RANDALIEREN");
        public final static Property LowRandalierenTimes = new Property(17, Integer.class, "lowRandalierenTimes", false, "LOW_RANDALIEREN_TIMES");
        public final static Property CauseTrouble = new Property(18, String.class, "causeTrouble", false, "CAUSE_TROUBLE");
        public final static Property CauseTroubleTimes = new Property(19, Integer.class, "causeTroubleTimes", false, "CAUSE_TROUBLE_TIMES");
        public final static Property Accident = new Property(20, String.class, "accident", false, "ACCIDENT");
        public final static Property AccidentTimes = new Property(21, Integer.class, "accidentTimes", false, "ACCIDENT_TIMES");
        public final static Property OtherHarm = new Property(22, String.class, "otherHarm", false, "OTHER_HARM");
        public final static Property OtherHarmTimes = new Property(23, Integer.class, "otherHarmTimes", false, "OTHER_HARM_TIMES");
        public final static Property Autolesion = new Property(24, String.class, "autolesion", false, "AUTOLESION");
        public final static Property AutolesionTimes = new Property(25, Integer.class, "autolesionTimes", false, "AUTOLESION_TIMES");
        public final static Property IncompleteSuicide = new Property(26, String.class, "incompleteSuicide", false, "INCOMPLETE_SUICIDE");
        public final static Property IncompleteSuicideTimes = new Property(27, Integer.class, "incompleteSuicideTimes", false, "INCOMPLETE_SUICIDE_TIMES");
        public final static Property EmploymentStatusCode = new Property(28, String.class, "employmentStatusCode", false, "EMPLOYMENT_STATUS_CODE");
        public final static Property RespDoctorName = new Property(29, String.class, "respDoctorName", false, "RESP_DOCTOR_NAME");
        public final static Property InformedConsentCode = new Property(30, String.class, "informedConsentCode", false, "INFORMED_CONSENT_CODE");
        public final static Property InformedConsentSignerName = new Property(31, String.class, "informedConsentSignerName", false, "INFORMED_CONSENT_SIGNER_NAME");
        public final static Property InformedConsentSignDate = new Property(32, java.util.Date.class, "informedConsentSignDate", false, "INFORMED_CONSENT_SIGN_DATE");
        public final static Property SmiFirstOnsetDate = new Property(33, java.util.Date.class, "smiFirstOnsetDate", false, "SMI_FIRST_ONSET_DATE");
        public final static Property SmiFirstOnsetAge = new Property(34, Integer.class, "smiFirstOnsetAge", false, "SMI_FIRST_ONSET_AGE");
        public final static Property PassLockCode = new Property(35, String.class, "passLockCode", false, "PASS_LOCK_CODE");
        public final static Property PastClinicTreatCode = new Property(36, String.class, "pastClinicTreatCode", false, "PAST_CLINIC_TREAT_CODE");
        public final static Property FirstAntipsyTreatDate = new Property(37, java.util.Date.class, "firstAntipsyTreatDate", false, "FIRST_ANTIPSY_TREAT_DATE");
        public final static Property PastPsyInpatTimes = new Property(38, Integer.class, "pastPsyInpatTimes", false, "PAST_PSY_INPAT_TIMES");
        public final static Property SmiCode = new Property(39, String.class, "smiCode", false, "SMI_CODE");
        public final static Property SmiName = new Property(40, String.class, "smiName", false, "SMI_NAME");
        public final static Property ConfirmedDiagOrgName = new Property(41, String.class, "confirmedDiagOrgName", false, "CONFIRMED_DIAG_ORG_NAME");
        public final static Property ConfirmedDiagDate = new Property(42, java.util.Date.class, "confirmedDiagDate", false, "CONFIRMED_DIAG_DATE");
        public final static Property LastTreatResultCode = new Property(43, String.class, "lastTreatResultCode", false, "LAST_TREAT_RESULT_CODE");
        public final static Property FinancialSituationCode = new Property(44, String.class, "financialSituationCode", false, "FINANCIAL_SITUATION_CODE");
        public final static Property SpecialistAdvice = new Property(45, String.class, "specialistAdvice", false, "SPECIALIST_ADVICE");
        public final static Property SignatureDoctorName = new Property(46, String.class, "signatureDoctorName", false, "SIGNATURE_DOCTOR_NAME");
        public final static Property SignatureDoctorId = new Property(47, String.class, "signatureDoctorId", false, "SIGNATURE_DOCTOR_ID");
        public final static Property FillDate = new Property(48, java.util.Date.class, "fillDate", false, "FILL_DATE");
        public final static Property IsCancel = new Property(49, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(50, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(51, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(52, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(53, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(54, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(55, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(56, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(57, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(58, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(59, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
    };


    public SmiInfoDao(DaoConfig config) {
        super(config);
    }
    
    public SmiInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SMI_INFO\" (" + //
                "\"SMI_INFO_ID\" TEXT," + // 0: smiInfoId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"SMI_INFO_NO\" TEXT," + // 2: smiInfoNo
                "\"MANAGE_ORG_ID\" TEXT," + // 3: manageOrgId
                "\"MANAGE_DATE\" INTEGER," + // 4: manageDate
                "\"NAME\" TEXT," + // 5: name
                "\"GUARDIAN_NAME\" TEXT," + // 6: guardianName
                "\"GUARDIAN_RELATION_CODE\" TEXT," + // 7: guardianRelationCode
                "\"GUARDIAN_ADDR\" TEXT," + // 8: guardianAddr
                "\"GUARDIAN_TEL_NO\" TEXT," + // 9: guardianTelNo
                "\"COMMUNITY_ID\" TEXT," + // 10: communityId
                "\"COMMUNITY_NAME\" TEXT," + // 11: communityName
                "\"COMMUNITY_CONTACT_NAME\" TEXT," + // 12: communityContactName
                "\"COMMUNITY_CONTACT_TEL_NO\" TEXT," + // 13: communityContactTelNo
                "\"PERMANENT_TYPE_CODE\" TEXT," + // 14: permanentTypeCode
                "\"SOCIETY_EFFECT\" TEXT," + // 15: societyEffect
                "\"LOW_RANDALIEREN\" TEXT," + // 16: lowRandalieren
                "\"LOW_RANDALIEREN_TIMES\" INTEGER," + // 17: lowRandalierenTimes
                "\"CAUSE_TROUBLE\" TEXT," + // 18: causeTrouble
                "\"CAUSE_TROUBLE_TIMES\" INTEGER," + // 19: causeTroubleTimes
                "\"ACCIDENT\" TEXT," + // 20: accident
                "\"ACCIDENT_TIMES\" INTEGER," + // 21: accidentTimes
                "\"OTHER_HARM\" TEXT," + // 22: otherHarm
                "\"OTHER_HARM_TIMES\" INTEGER," + // 23: otherHarmTimes
                "\"AUTOLESION\" TEXT," + // 24: autolesion
                "\"AUTOLESION_TIMES\" INTEGER," + // 25: autolesionTimes
                "\"INCOMPLETE_SUICIDE\" TEXT," + // 26: incompleteSuicide
                "\"INCOMPLETE_SUICIDE_TIMES\" INTEGER," + // 27: incompleteSuicideTimes
                "\"EMPLOYMENT_STATUS_CODE\" TEXT," + // 28: employmentStatusCode
                "\"RESP_DOCTOR_NAME\" TEXT," + // 29: respDoctorName
                "\"INFORMED_CONSENT_CODE\" TEXT," + // 30: informedConsentCode
                "\"INFORMED_CONSENT_SIGNER_NAME\" TEXT," + // 31: informedConsentSignerName
                "\"INFORMED_CONSENT_SIGN_DATE\" INTEGER," + // 32: informedConsentSignDate
                "\"SMI_FIRST_ONSET_DATE\" INTEGER," + // 33: smiFirstOnsetDate
                "\"SMI_FIRST_ONSET_AGE\" INTEGER," + // 34: smiFirstOnsetAge
                "\"PASS_LOCK_CODE\" TEXT," + // 35: passLockCode
                "\"PAST_CLINIC_TREAT_CODE\" TEXT," + // 36: pastClinicTreatCode
                "\"FIRST_ANTIPSY_TREAT_DATE\" INTEGER," + // 37: firstAntipsyTreatDate
                "\"PAST_PSY_INPAT_TIMES\" INTEGER," + // 38: pastPsyInpatTimes
                "\"SMI_CODE\" TEXT," + // 39: smiCode
                "\"SMI_NAME\" TEXT," + // 40: smiName
                "\"CONFIRMED_DIAG_ORG_NAME\" TEXT," + // 41: confirmedDiagOrgName
                "\"CONFIRMED_DIAG_DATE\" INTEGER," + // 42: confirmedDiagDate
                "\"LAST_TREAT_RESULT_CODE\" TEXT," + // 43: lastTreatResultCode
                "\"FINANCIAL_SITUATION_CODE\" TEXT," + // 44: financialSituationCode
                "\"SPECIALIST_ADVICE\" TEXT," + // 45: specialistAdvice
                "\"SIGNATURE_DOCTOR_NAME\" TEXT," + // 46: signatureDoctorName
                "\"SIGNATURE_DOCTOR_ID\" TEXT," + // 47: signatureDoctorId
                "\"FILL_DATE\" INTEGER," + // 48: fillDate
                "\"IS_CANCEL\" INTEGER," + // 49: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 50: createOrgId
                "\"ORG_NAME\" TEXT," + // 51: orgName
                "\"CREATOR_ID\" TEXT," + // 52: creatorId
                "\"CREATOR\" TEXT," + // 53: creator
                "\"CREATE_TIME\" INTEGER," + // 54: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 55: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 56: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 57: modifierId
                "\"MODIFIER\" TEXT," + // 58: modifier
                "\"MODIFIED_TIME\" INTEGER);"); // 59: modifiedTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SMI_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, SmiInfo entity) {
        stmt.clearBindings();
 
        String smiInfoId = entity.getSmiInfoId();
        if (smiInfoId != null) {
            stmt.bindString(1, smiInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String smiInfoNo = entity.getSmiInfoNo();
        if (smiInfoNo != null) {
            stmt.bindString(3, smiInfoNo);
        }
 
        String manageOrgId = entity.getManageOrgId();
        if (manageOrgId != null) {
            stmt.bindString(4, manageOrgId);
        }
 
        java.util.Date manageDate = entity.getManageDate();
        if (manageDate != null) {
            stmt.bindLong(5, manageDate.getTime());
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(6, name);
        }
 
        String guardianName = entity.getGuardianName();
        if (guardianName != null) {
            stmt.bindString(7, guardianName);
        }
 
        String guardianRelationCode = entity.getGuardianRelationCode();
        if (guardianRelationCode != null) {
            stmt.bindString(8, guardianRelationCode);
        }
 
        String guardianAddr = entity.getGuardianAddr();
        if (guardianAddr != null) {
            stmt.bindString(9, guardianAddr);
        }
 
        String guardianTelNo = entity.getGuardianTelNo();
        if (guardianTelNo != null) {
            stmt.bindString(10, guardianTelNo);
        }
 
        String communityId = entity.getCommunityId();
        if (communityId != null) {
            stmt.bindString(11, communityId);
        }
 
        String communityName = entity.getCommunityName();
        if (communityName != null) {
            stmt.bindString(12, communityName);
        }
 
        String communityContactName = entity.getCommunityContactName();
        if (communityContactName != null) {
            stmt.bindString(13, communityContactName);
        }
 
        String communityContactTelNo = entity.getCommunityContactTelNo();
        if (communityContactTelNo != null) {
            stmt.bindString(14, communityContactTelNo);
        }
 
        String permanentTypeCode = entity.getPermanentTypeCode();
        if (permanentTypeCode != null) {
            stmt.bindString(15, permanentTypeCode);
        }
 
        String societyEffect = entity.getSocietyEffect();
        if (societyEffect != null) {
            stmt.bindString(16, societyEffect);
        }
 
        String lowRandalieren = entity.getLowRandalieren();
        if (lowRandalieren != null) {
            stmt.bindString(17, lowRandalieren);
        }
 
        Integer lowRandalierenTimes = entity.getLowRandalierenTimes();
        if (lowRandalierenTimes != null) {
            stmt.bindLong(18, lowRandalierenTimes);
        }
 
        String causeTrouble = entity.getCauseTrouble();
        if (causeTrouble != null) {
            stmt.bindString(19, causeTrouble);
        }
 
        Integer causeTroubleTimes = entity.getCauseTroubleTimes();
        if (causeTroubleTimes != null) {
            stmt.bindLong(20, causeTroubleTimes);
        }
 
        String accident = entity.getAccident();
        if (accident != null) {
            stmt.bindString(21, accident);
        }
 
        Integer accidentTimes = entity.getAccidentTimes();
        if (accidentTimes != null) {
            stmt.bindLong(22, accidentTimes);
        }
 
        String otherHarm = entity.getOtherHarm();
        if (otherHarm != null) {
            stmt.bindString(23, otherHarm);
        }
 
        Integer otherHarmTimes = entity.getOtherHarmTimes();
        if (otherHarmTimes != null) {
            stmt.bindLong(24, otherHarmTimes);
        }
 
        String autolesion = entity.getAutolesion();
        if (autolesion != null) {
            stmt.bindString(25, autolesion);
        }
 
        Integer autolesionTimes = entity.getAutolesionTimes();
        if (autolesionTimes != null) {
            stmt.bindLong(26, autolesionTimes);
        }
 
        String incompleteSuicide = entity.getIncompleteSuicide();
        if (incompleteSuicide != null) {
            stmt.bindString(27, incompleteSuicide);
        }
 
        Integer incompleteSuicideTimes = entity.getIncompleteSuicideTimes();
        if (incompleteSuicideTimes != null) {
            stmt.bindLong(28, incompleteSuicideTimes);
        }
 
        String employmentStatusCode = entity.getEmploymentStatusCode();
        if (employmentStatusCode != null) {
            stmt.bindString(29, employmentStatusCode);
        }
 
        String respDoctorName = entity.getRespDoctorName();
        if (respDoctorName != null) {
            stmt.bindString(30, respDoctorName);
        }
 
        String informedConsentCode = entity.getInformedConsentCode();
        if (informedConsentCode != null) {
            stmt.bindString(31, informedConsentCode);
        }
 
        String informedConsentSignerName = entity.getInformedConsentSignerName();
        if (informedConsentSignerName != null) {
            stmt.bindString(32, informedConsentSignerName);
        }
 
        java.util.Date informedConsentSignDate = entity.getInformedConsentSignDate();
        if (informedConsentSignDate != null) {
            stmt.bindLong(33, informedConsentSignDate.getTime());
        }
 
        java.util.Date smiFirstOnsetDate = entity.getSmiFirstOnsetDate();
        if (smiFirstOnsetDate != null) {
            stmt.bindLong(34, smiFirstOnsetDate.getTime());
        }
 
        Integer smiFirstOnsetAge = entity.getSmiFirstOnsetAge();
        if (smiFirstOnsetAge != null) {
            stmt.bindLong(35, smiFirstOnsetAge);
        }
 
        String passLockCode = entity.getPassLockCode();
        if (passLockCode != null) {
            stmt.bindString(36, passLockCode);
        }
 
        String pastClinicTreatCode = entity.getPastClinicTreatCode();
        if (pastClinicTreatCode != null) {
            stmt.bindString(37, pastClinicTreatCode);
        }
 
        java.util.Date firstAntipsyTreatDate = entity.getFirstAntipsyTreatDate();
        if (firstAntipsyTreatDate != null) {
            stmt.bindLong(38, firstAntipsyTreatDate.getTime());
        }
 
        Integer pastPsyInpatTimes = entity.getPastPsyInpatTimes();
        if (pastPsyInpatTimes != null) {
            stmt.bindLong(39, pastPsyInpatTimes);
        }
 
        String smiCode = entity.getSmiCode();
        if (smiCode != null) {
            stmt.bindString(40, smiCode);
        }
 
        String smiName = entity.getSmiName();
        if (smiName != null) {
            stmt.bindString(41, smiName);
        }
 
        String confirmedDiagOrgName = entity.getConfirmedDiagOrgName();
        if (confirmedDiagOrgName != null) {
            stmt.bindString(42, confirmedDiagOrgName);
        }
 
        java.util.Date confirmedDiagDate = entity.getConfirmedDiagDate();
        if (confirmedDiagDate != null) {
            stmt.bindLong(43, confirmedDiagDate.getTime());
        }
 
        String lastTreatResultCode = entity.getLastTreatResultCode();
        if (lastTreatResultCode != null) {
            stmt.bindString(44, lastTreatResultCode);
        }
 
        String financialSituationCode = entity.getFinancialSituationCode();
        if (financialSituationCode != null) {
            stmt.bindString(45, financialSituationCode);
        }
 
        String specialistAdvice = entity.getSpecialistAdvice();
        if (specialistAdvice != null) {
            stmt.bindString(46, specialistAdvice);
        }
 
        String signatureDoctorName = entity.getSignatureDoctorName();
        if (signatureDoctorName != null) {
            stmt.bindString(47, signatureDoctorName);
        }
 
        String signatureDoctorId = entity.getSignatureDoctorId();
        if (signatureDoctorId != null) {
            stmt.bindString(48, signatureDoctorId);
        }
 
        java.util.Date fillDate = entity.getFillDate();
        if (fillDate != null) {
            stmt.bindLong(49, fillDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(50, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(51, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(52, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(53, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(54, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(55, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(56, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(57, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(58, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(59, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(60, modifiedTime.getTime());
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, SmiInfo entity) {
        stmt.clearBindings();
 
        String smiInfoId = entity.getSmiInfoId();
        if (smiInfoId != null) {
            stmt.bindString(1, smiInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String smiInfoNo = entity.getSmiInfoNo();
        if (smiInfoNo != null) {
            stmt.bindString(3, smiInfoNo);
        }
 
        String manageOrgId = entity.getManageOrgId();
        if (manageOrgId != null) {
            stmt.bindString(4, manageOrgId);
        }
 
        java.util.Date manageDate = entity.getManageDate();
        if (manageDate != null) {
            stmt.bindLong(5, manageDate.getTime());
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(6, name);
        }
 
        String guardianName = entity.getGuardianName();
        if (guardianName != null) {
            stmt.bindString(7, guardianName);
        }
 
        String guardianRelationCode = entity.getGuardianRelationCode();
        if (guardianRelationCode != null) {
            stmt.bindString(8, guardianRelationCode);
        }
 
        String guardianAddr = entity.getGuardianAddr();
        if (guardianAddr != null) {
            stmt.bindString(9, guardianAddr);
        }
 
        String guardianTelNo = entity.getGuardianTelNo();
        if (guardianTelNo != null) {
            stmt.bindString(10, guardianTelNo);
        }
 
        String communityId = entity.getCommunityId();
        if (communityId != null) {
            stmt.bindString(11, communityId);
        }
 
        String communityName = entity.getCommunityName();
        if (communityName != null) {
            stmt.bindString(12, communityName);
        }
 
        String communityContactName = entity.getCommunityContactName();
        if (communityContactName != null) {
            stmt.bindString(13, communityContactName);
        }
 
        String communityContactTelNo = entity.getCommunityContactTelNo();
        if (communityContactTelNo != null) {
            stmt.bindString(14, communityContactTelNo);
        }
 
        String permanentTypeCode = entity.getPermanentTypeCode();
        if (permanentTypeCode != null) {
            stmt.bindString(15, permanentTypeCode);
        }
 
        String societyEffect = entity.getSocietyEffect();
        if (societyEffect != null) {
            stmt.bindString(16, societyEffect);
        }
 
        String lowRandalieren = entity.getLowRandalieren();
        if (lowRandalieren != null) {
            stmt.bindString(17, lowRandalieren);
        }
 
        Integer lowRandalierenTimes = entity.getLowRandalierenTimes();
        if (lowRandalierenTimes != null) {
            stmt.bindLong(18, lowRandalierenTimes);
        }
 
        String causeTrouble = entity.getCauseTrouble();
        if (causeTrouble != null) {
            stmt.bindString(19, causeTrouble);
        }
 
        Integer causeTroubleTimes = entity.getCauseTroubleTimes();
        if (causeTroubleTimes != null) {
            stmt.bindLong(20, causeTroubleTimes);
        }
 
        String accident = entity.getAccident();
        if (accident != null) {
            stmt.bindString(21, accident);
        }
 
        Integer accidentTimes = entity.getAccidentTimes();
        if (accidentTimes != null) {
            stmt.bindLong(22, accidentTimes);
        }
 
        String otherHarm = entity.getOtherHarm();
        if (otherHarm != null) {
            stmt.bindString(23, otherHarm);
        }
 
        Integer otherHarmTimes = entity.getOtherHarmTimes();
        if (otherHarmTimes != null) {
            stmt.bindLong(24, otherHarmTimes);
        }
 
        String autolesion = entity.getAutolesion();
        if (autolesion != null) {
            stmt.bindString(25, autolesion);
        }
 
        Integer autolesionTimes = entity.getAutolesionTimes();
        if (autolesionTimes != null) {
            stmt.bindLong(26, autolesionTimes);
        }
 
        String incompleteSuicide = entity.getIncompleteSuicide();
        if (incompleteSuicide != null) {
            stmt.bindString(27, incompleteSuicide);
        }
 
        Integer incompleteSuicideTimes = entity.getIncompleteSuicideTimes();
        if (incompleteSuicideTimes != null) {
            stmt.bindLong(28, incompleteSuicideTimes);
        }
 
        String employmentStatusCode = entity.getEmploymentStatusCode();
        if (employmentStatusCode != null) {
            stmt.bindString(29, employmentStatusCode);
        }
 
        String respDoctorName = entity.getRespDoctorName();
        if (respDoctorName != null) {
            stmt.bindString(30, respDoctorName);
        }
 
        String informedConsentCode = entity.getInformedConsentCode();
        if (informedConsentCode != null) {
            stmt.bindString(31, informedConsentCode);
        }
 
        String informedConsentSignerName = entity.getInformedConsentSignerName();
        if (informedConsentSignerName != null) {
            stmt.bindString(32, informedConsentSignerName);
        }
 
        java.util.Date informedConsentSignDate = entity.getInformedConsentSignDate();
        if (informedConsentSignDate != null) {
            stmt.bindLong(33, informedConsentSignDate.getTime());
        }
 
        java.util.Date smiFirstOnsetDate = entity.getSmiFirstOnsetDate();
        if (smiFirstOnsetDate != null) {
            stmt.bindLong(34, smiFirstOnsetDate.getTime());
        }
 
        Integer smiFirstOnsetAge = entity.getSmiFirstOnsetAge();
        if (smiFirstOnsetAge != null) {
            stmt.bindLong(35, smiFirstOnsetAge);
        }
 
        String passLockCode = entity.getPassLockCode();
        if (passLockCode != null) {
            stmt.bindString(36, passLockCode);
        }
 
        String pastClinicTreatCode = entity.getPastClinicTreatCode();
        if (pastClinicTreatCode != null) {
            stmt.bindString(37, pastClinicTreatCode);
        }
 
        java.util.Date firstAntipsyTreatDate = entity.getFirstAntipsyTreatDate();
        if (firstAntipsyTreatDate != null) {
            stmt.bindLong(38, firstAntipsyTreatDate.getTime());
        }
 
        Integer pastPsyInpatTimes = entity.getPastPsyInpatTimes();
        if (pastPsyInpatTimes != null) {
            stmt.bindLong(39, pastPsyInpatTimes);
        }
 
        String smiCode = entity.getSmiCode();
        if (smiCode != null) {
            stmt.bindString(40, smiCode);
        }
 
        String smiName = entity.getSmiName();
        if (smiName != null) {
            stmt.bindString(41, smiName);
        }
 
        String confirmedDiagOrgName = entity.getConfirmedDiagOrgName();
        if (confirmedDiagOrgName != null) {
            stmt.bindString(42, confirmedDiagOrgName);
        }
 
        java.util.Date confirmedDiagDate = entity.getConfirmedDiagDate();
        if (confirmedDiagDate != null) {
            stmt.bindLong(43, confirmedDiagDate.getTime());
        }
 
        String lastTreatResultCode = entity.getLastTreatResultCode();
        if (lastTreatResultCode != null) {
            stmt.bindString(44, lastTreatResultCode);
        }
 
        String financialSituationCode = entity.getFinancialSituationCode();
        if (financialSituationCode != null) {
            stmt.bindString(45, financialSituationCode);
        }
 
        String specialistAdvice = entity.getSpecialistAdvice();
        if (specialistAdvice != null) {
            stmt.bindString(46, specialistAdvice);
        }
 
        String signatureDoctorName = entity.getSignatureDoctorName();
        if (signatureDoctorName != null) {
            stmt.bindString(47, signatureDoctorName);
        }
 
        String signatureDoctorId = entity.getSignatureDoctorId();
        if (signatureDoctorId != null) {
            stmt.bindString(48, signatureDoctorId);
        }
 
        java.util.Date fillDate = entity.getFillDate();
        if (fillDate != null) {
            stmt.bindLong(49, fillDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(50, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(51, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(52, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(53, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(54, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(55, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(56, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(57, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(58, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(59, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(60, modifiedTime.getTime());
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public SmiInfo readEntity(Cursor cursor, int offset) {
        SmiInfo entity = new SmiInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // smiInfoId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // smiInfoNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // manageOrgId
            cursor.isNull(offset + 4) ? null : new java.util.Date(cursor.getLong(offset + 4)), // manageDate
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // name
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // guardianName
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // guardianRelationCode
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // guardianAddr
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // guardianTelNo
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // communityId
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // communityName
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // communityContactName
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // communityContactTelNo
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // permanentTypeCode
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // societyEffect
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // lowRandalieren
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // lowRandalierenTimes
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // causeTrouble
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // causeTroubleTimes
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // accident
            cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21), // accidentTimes
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // otherHarm
            cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23), // otherHarmTimes
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // autolesion
            cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25), // autolesionTimes
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // incompleteSuicide
            cursor.isNull(offset + 27) ? null : cursor.getInt(offset + 27), // incompleteSuicideTimes
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // employmentStatusCode
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // respDoctorName
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // informedConsentCode
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // informedConsentSignerName
            cursor.isNull(offset + 32) ? null : new java.util.Date(cursor.getLong(offset + 32)), // informedConsentSignDate
            cursor.isNull(offset + 33) ? null : new java.util.Date(cursor.getLong(offset + 33)), // smiFirstOnsetDate
            cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34), // smiFirstOnsetAge
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // passLockCode
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // pastClinicTreatCode
            cursor.isNull(offset + 37) ? null : new java.util.Date(cursor.getLong(offset + 37)), // firstAntipsyTreatDate
            cursor.isNull(offset + 38) ? null : cursor.getInt(offset + 38), // pastPsyInpatTimes
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // smiCode
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // smiName
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // confirmedDiagOrgName
            cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)), // confirmedDiagDate
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // lastTreatResultCode
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // financialSituationCode
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // specialistAdvice
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // signatureDoctorName
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // signatureDoctorId
            cursor.isNull(offset + 48) ? null : new java.util.Date(cursor.getLong(offset + 48)), // fillDate
            cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49), // isCancel
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // createOrgId
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // orgName
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // creatorId
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // creator
            cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)), // createTime
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // modifiedOrgId
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // modifiedOrgName
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // modifierId
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // modifier
            cursor.isNull(offset + 59) ? null : new java.util.Date(cursor.getLong(offset + 59)) // modifiedTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, SmiInfo entity, int offset) {
        entity.setSmiInfoId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setSmiInfoNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setManageOrgId(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setManageDate(cursor.isNull(offset + 4) ? null : new java.util.Date(cursor.getLong(offset + 4)));
        entity.setName(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setGuardianName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setGuardianRelationCode(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setGuardianAddr(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setGuardianTelNo(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setCommunityId(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCommunityName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCommunityContactName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setCommunityContactTelNo(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPermanentTypeCode(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setSocietyEffect(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setLowRandalieren(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setLowRandalierenTimes(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setCauseTrouble(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setCauseTroubleTimes(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setAccident(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setAccidentTimes(cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21));
        entity.setOtherHarm(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setOtherHarmTimes(cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23));
        entity.setAutolesion(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setAutolesionTimes(cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25));
        entity.setIncompleteSuicide(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setIncompleteSuicideTimes(cursor.isNull(offset + 27) ? null : cursor.getInt(offset + 27));
        entity.setEmploymentStatusCode(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setRespDoctorName(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setInformedConsentCode(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setInformedConsentSignerName(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setInformedConsentSignDate(cursor.isNull(offset + 32) ? null : new java.util.Date(cursor.getLong(offset + 32)));
        entity.setSmiFirstOnsetDate(cursor.isNull(offset + 33) ? null : new java.util.Date(cursor.getLong(offset + 33)));
        entity.setSmiFirstOnsetAge(cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34));
        entity.setPassLockCode(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setPastClinicTreatCode(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setFirstAntipsyTreatDate(cursor.isNull(offset + 37) ? null : new java.util.Date(cursor.getLong(offset + 37)));
        entity.setPastPsyInpatTimes(cursor.isNull(offset + 38) ? null : cursor.getInt(offset + 38));
        entity.setSmiCode(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setSmiName(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setConfirmedDiagOrgName(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setConfirmedDiagDate(cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)));
        entity.setLastTreatResultCode(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setFinancialSituationCode(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setSpecialistAdvice(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setSignatureDoctorName(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setSignatureDoctorId(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setFillDate(cursor.isNull(offset + 48) ? null : new java.util.Date(cursor.getLong(offset + 48)));
        entity.setIsCancel(cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49));
        entity.setCreateOrgId(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setOrgName(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setCreatorId(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setCreator(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setCreateTime(cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)));
        entity.setModifiedOrgId(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setModifiedOrgName(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setModifierId(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setModifier(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setModifiedTime(cursor.isNull(offset + 59) ? null : new java.util.Date(cursor.getLong(offset + 59)));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(SmiInfo entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(SmiInfo entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
