package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.old.ElderSelfcareAbility;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ELDER_SELFCARE_ABILITY".
*/
public class ElderSelfcareAbilityDao extends AbstractDao<ElderSelfcareAbility, Void> {

    public static final String TABLENAME = "ELDER_SELFCARE_ABILITY";

    /**
     * Properties of entity ElderSelfcareAbility.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ElderSelfcareAbilityId = new Property(0, String.class, "elderSelfcareAbilityId", false, "ELDER_SELFCARE_ABILITY_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property ElderHealthAssessCode = new Property(2, String.class, "elderHealthAssessCode", false, "ELDER_HEALTH_ASSESS_CODE");
        public final static Property DineScore = new Property(3, Integer.class, "dineScore", false, "DINE_SCORE");
        public final static Property CleanupScore = new Property(4, Integer.class, "cleanupScore", false, "CLEANUP_SCORE");
        public final static Property DressedScore = new Property(5, Integer.class, "dressedScore", false, "DRESSED_SCORE");
        public final static Property DefecationScore = new Property(6, Integer.class, "defecationScore", false, "DEFECATION_SCORE");
        public final static Property ActivityScore = new Property(7, Integer.class, "activityScore", false, "ACTIVITY_SCORE");
        public final static Property TotalScore = new Property(8, Integer.class, "totalScore", false, "TOTAL_SCORE");
        public final static Property FillDate = new Property(9, java.util.Date.class, "fillDate", false, "FILL_DATE");
        public final static Property IsCancel = new Property(10, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(11, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(12, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(13, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(14, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(15, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(16, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(17, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(18, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(19, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(20, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
    };


    public ElderSelfcareAbilityDao(DaoConfig config) {
        super(config);
    }
    
    public ElderSelfcareAbilityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ELDER_SELFCARE_ABILITY\" (" + //
                "\"ELDER_SELFCARE_ABILITY_ID\" TEXT," + // 0: elderSelfcareAbilityId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"ELDER_HEALTH_ASSESS_CODE\" TEXT," + // 2: elderHealthAssessCode
                "\"DINE_SCORE\" INTEGER," + // 3: dineScore
                "\"CLEANUP_SCORE\" INTEGER," + // 4: cleanupScore
                "\"DRESSED_SCORE\" INTEGER," + // 5: dressedScore
                "\"DEFECATION_SCORE\" INTEGER," + // 6: defecationScore
                "\"ACTIVITY_SCORE\" INTEGER," + // 7: activityScore
                "\"TOTAL_SCORE\" INTEGER," + // 8: totalScore
                "\"FILL_DATE\" INTEGER," + // 9: fillDate
                "\"IS_CANCEL\" INTEGER," + // 10: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 11: createOrgId
                "\"ORG_NAME\" TEXT," + // 12: orgName
                "\"CREATOR_ID\" TEXT," + // 13: creatorId
                "\"CREATOR\" TEXT," + // 14: creator
                "\"CREATE_TIME\" INTEGER," + // 15: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 16: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 17: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 18: modifierId
                "\"MODIFIER\" TEXT," + // 19: modifier
                "\"MODIFIED_TIME\" INTEGER);"); // 20: modifiedTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ELDER_SELFCARE_ABILITY\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ElderSelfcareAbility entity) {
        stmt.clearBindings();
 
        String elderSelfcareAbilityId = entity.getElderSelfcareAbilityId();
        if (elderSelfcareAbilityId != null) {
            stmt.bindString(1, elderSelfcareAbilityId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String elderHealthAssessCode = entity.getElderHealthAssessCode();
        if (elderHealthAssessCode != null) {
            stmt.bindString(3, elderHealthAssessCode);
        }
 
        Integer dineScore = entity.getDineScore();
        if (dineScore != null) {
            stmt.bindLong(4, dineScore);
        }
 
        Integer cleanupScore = entity.getCleanupScore();
        if (cleanupScore != null) {
            stmt.bindLong(5, cleanupScore);
        }
 
        Integer dressedScore = entity.getDressedScore();
        if (dressedScore != null) {
            stmt.bindLong(6, dressedScore);
        }
 
        Integer defecationScore = entity.getDefecationScore();
        if (defecationScore != null) {
            stmt.bindLong(7, defecationScore);
        }
 
        Integer activityScore = entity.getActivityScore();
        if (activityScore != null) {
            stmt.bindLong(8, activityScore);
        }
 
        Integer totalScore = entity.getTotalScore();
        if (totalScore != null) {
            stmt.bindLong(9, totalScore);
        }
 
        java.util.Date fillDate = entity.getFillDate();
        if (fillDate != null) {
            stmt.bindLong(10, fillDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(11, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(12, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(13, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(14, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(15, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(16, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(17, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(18, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(19, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(20, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(21, modifiedTime.getTime());
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ElderSelfcareAbility entity) {
        stmt.clearBindings();
 
        String elderSelfcareAbilityId = entity.getElderSelfcareAbilityId();
        if (elderSelfcareAbilityId != null) {
            stmt.bindString(1, elderSelfcareAbilityId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String elderHealthAssessCode = entity.getElderHealthAssessCode();
        if (elderHealthAssessCode != null) {
            stmt.bindString(3, elderHealthAssessCode);
        }
 
        Integer dineScore = entity.getDineScore();
        if (dineScore != null) {
            stmt.bindLong(4, dineScore);
        }
 
        Integer cleanupScore = entity.getCleanupScore();
        if (cleanupScore != null) {
            stmt.bindLong(5, cleanupScore);
        }
 
        Integer dressedScore = entity.getDressedScore();
        if (dressedScore != null) {
            stmt.bindLong(6, dressedScore);
        }
 
        Integer defecationScore = entity.getDefecationScore();
        if (defecationScore != null) {
            stmt.bindLong(7, defecationScore);
        }
 
        Integer activityScore = entity.getActivityScore();
        if (activityScore != null) {
            stmt.bindLong(8, activityScore);
        }
 
        Integer totalScore = entity.getTotalScore();
        if (totalScore != null) {
            stmt.bindLong(9, totalScore);
        }
 
        java.util.Date fillDate = entity.getFillDate();
        if (fillDate != null) {
            stmt.bindLong(10, fillDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(11, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(12, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(13, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(14, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(15, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(16, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(17, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(18, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(19, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(20, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(21, modifiedTime.getTime());
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public ElderSelfcareAbility readEntity(Cursor cursor, int offset) {
        ElderSelfcareAbility entity = new ElderSelfcareAbility( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // elderSelfcareAbilityId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // elderHealthAssessCode
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // dineScore
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // cleanupScore
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // dressedScore
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // defecationScore
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // activityScore
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // totalScore
            cursor.isNull(offset + 9) ? null : new java.util.Date(cursor.getLong(offset + 9)), // fillDate
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // isCancel
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // createOrgId
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // orgName
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // creatorId
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // creator
            cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)), // createTime
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // modifiedOrgId
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // modifiedOrgName
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // modifierId
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // modifier
            cursor.isNull(offset + 20) ? null : new java.util.Date(cursor.getLong(offset + 20)) // modifiedTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ElderSelfcareAbility entity, int offset) {
        entity.setElderSelfcareAbilityId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setElderHealthAssessCode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDineScore(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setCleanupScore(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setDressedScore(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setDefecationScore(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setActivityScore(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setTotalScore(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setFillDate(cursor.isNull(offset + 9) ? null : new java.util.Date(cursor.getLong(offset + 9)));
        entity.setIsCancel(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setCreateOrgId(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setOrgName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setCreatorId(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setCreator(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setCreateTime(cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)));
        entity.setModifiedOrgId(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setModifiedOrgName(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setModifierId(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setModifier(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setModifiedTime(cursor.isNull(offset + 20) ? null : new java.util.Date(cursor.getLong(offset + 20)));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(ElderSelfcareAbility entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(ElderSelfcareAbility entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
