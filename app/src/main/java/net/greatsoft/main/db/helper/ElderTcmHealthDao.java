package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.old.ElderTcmHealth;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ELDER_TCM_HEALTH".
*/
public class ElderTcmHealthDao extends AbstractDao<ElderTcmHealth, Void> {

    public static final String TABLENAME = "ELDER_TCM_HEALTH";

    /**
     * Properties of entity ElderTcmHealth.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ElderTcmHealthId = new Property(0, String.class, "elderTcmHealthId", false, "ELDER_TCM_HEALTH_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property ElderTcmHealthNo = new Property(2, String.class, "elderTcmHealthNo", false, "ELDER_TCM_HEALTH_NO");
        public final static Property Name = new Property(3, String.class, "name", false, "NAME");
        public final static Property Energy = new Property(4, String.class, "energy", false, "ENERGY");
        public final static Property Fatigue = new Property(5, String.class, "fatigue", false, "FATIGUE");
        public final static Property Breathe = new Property(6, String.class, "breathe", false, "BREATHE");
        public final static Property Speak = new Property(7, String.class, "speak", false, "SPEAK");
        public final static Property Unpleasant = new Property(8, String.class, "unpleasant", false, "UNPLEASANT");
        public final static Property Nervous = new Property(9, String.class, "nervous", false, "NERVOUS");
        public final static Property Solitary = new Property(10, String.class, "solitary", false, "SOLITARY");
        public final static Property Scare = new Property(11, String.class, "scare", false, "SCARE");
        public final static Property Weight = new Property(12, String.class, "weight", false, "WEIGHT");
        public final static Property Eye = new Property(13, String.class, "eye", false, "EYE");
        public final static Property Hand = new Property(14, String.class, "hand", false, "HAND");
        public final static Property Craw = new Property(15, String.class, "craw", false, "CRAW");
        public final static Property Cold = new Property(16, String.class, "cold", false, "COLD");
        public final static Property Catchacold = new Property(17, String.class, "catchacold", false, "CATCHACOLD");
        public final static Property Runathenose = new Property(18, String.class, "runathenose", false, "RUNATHENOSE");
        public final static Property Mouth = new Property(19, String.class, "mouth", false, "MOUTH");
        public final static Property Food = new Property(20, String.class, "food", false, "FOOD");
        public final static Property Derma = new Property(21, String.class, "derma", false, "DERMA");
        public final static Property Bleeding = new Property(22, String.class, "bleeding", false, "BLEEDING");
        public final static Property Fingermail = new Property(23, String.class, "fingermail", false, "FINGERMAIL");
        public final static Property Oraldry = new Property(24, String.class, "oraldry", false, "ORALDRY");
        public final static Property Ache = new Property(25, String.class, "ache", false, "ACHE");
        public final static Property Face = new Property(26, String.class, "face", false, "FACE");
        public final static Property Spot = new Property(27, String.class, "spot", false, "SPOT");
        public final static Property Sore = new Property(28, String.class, "sore", false, "SORE");
        public final static Property Drinking = new Property(29, String.class, "drinking", false, "DRINKING");
        public final static Property Bittertaste = new Property(30, String.class, "bittertaste", false, "BITTERTASTE");
        public final static Property Abdomen = new Property(31, String.class, "abdomen", false, "ABDOMEN");
        public final static Property Uncomfortable = new Property(32, String.class, "uncomfortable", false, "UNCOMFORTABLE");
        public final static Property Unwell = new Property(33, String.class, "unwell", false, "UNWELL");
        public final static Property Malaise = new Property(34, String.class, "malaise", false, "MALAISE");
        public final static Property Tongue = new Property(35, String.class, "tongue", false, "TONGUE");
        public final static Property Vein = new Property(36, String.class, "vein", false, "VEIN");
        public final static Property QiDeficiencyScore = new Property(37, Integer.class, "qiDeficiencyScore", false, "QI_DEFICIENCY_SCORE");
        public final static Property QiDeficiencyCode = new Property(38, String.class, "qiDeficiencyCode", false, "QI_DEFICIENCY_CODE");
        public final static Property YangDeficiencyScore = new Property(39, Integer.class, "yangDeficiencyScore", false, "YANG_DEFICIENCY_SCORE");
        public final static Property YangDeficiencyCode = new Property(40, String.class, "yangDeficiencyCode", false, "YANG_DEFICIENCY_CODE");
        public final static Property YinDeficiencyScore = new Property(41, Integer.class, "yinDeficiencyScore", false, "YIN_DEFICIENCY_SCORE");
        public final static Property YinDeficiencyCode = new Property(42, String.class, "yinDeficiencyCode", false, "YIN_DEFICIENCY_CODE");
        public final static Property PhlegmWetScore = new Property(43, Integer.class, "phlegmWetScore", false, "PHLEGM_WET_SCORE");
        public final static Property PhlegmWetCode = new Property(44, String.class, "phlegmWetCode", false, "PHLEGM_WET_CODE");
        public final static Property DampHeatScore = new Property(45, Integer.class, "dampHeatScore", false, "DAMP_HEAT_SCORE");
        public final static Property DampHeatCode = new Property(46, String.class, "dampHeatCode", false, "DAMP_HEAT_CODE");
        public final static Property BloodStasisScore = new Property(47, Integer.class, "bloodStasisScore", false, "BLOOD_STASIS_SCORE");
        public final static Property BloodStasisCode = new Property(48, String.class, "bloodStasisCode", false, "BLOOD_STASIS_CODE");
        public final static Property QiDepressionScore = new Property(49, Integer.class, "qiDepressionScore", false, "QI_DEPRESSION_SCORE");
        public final static Property QiDepressionCode = new Property(50, String.class, "qiDepressionCode", false, "QI_DEPRESSION_CODE");
        public final static Property SpecialDiathsisScore = new Property(51, Integer.class, "specialDiathsisScore", false, "SPECIAL_DIATHSIS_SCORE");
        public final static Property SpecialDiathsisCode = new Property(52, String.class, "specialDiathsisCode", false, "SPECIAL_DIATHSIS_CODE");
        public final static Property GentleQualityScore = new Property(53, Integer.class, "gentleQualityScore", false, "GENTLE_QUALITY_SCORE");
        public final static Property GentleQualityCode = new Property(54, String.class, "gentleQualityCode", false, "GENTLE_QUALITY_CODE");
        public final static Property DoctorId = new Property(55, String.class, "doctorId", false, "DOCTOR_ID");
        public final static Property DoctorName = new Property(56, String.class, "doctorName", false, "DOCTOR_NAME");
        public final static Property FillDate = new Property(57, java.util.Date.class, "fillDate", false, "FILL_DATE");
        public final static Property IsCancel = new Property(58, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(59, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(60, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(61, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(62, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(63, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(64, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(65, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(66, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(67, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(68, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
        public final static Property JsonDetail = new Property(69, String.class, "jsonDetail", false, "JSON_DETAIL");
    };


    public ElderTcmHealthDao(DaoConfig config) {
        super(config);
    }
    
    public ElderTcmHealthDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ELDER_TCM_HEALTH\" (" + //
                "\"ELDER_TCM_HEALTH_ID\" TEXT," + // 0: elderTcmHealthId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"ELDER_TCM_HEALTH_NO\" TEXT," + // 2: elderTcmHealthNo
                "\"NAME\" TEXT," + // 3: name
                "\"ENERGY\" TEXT," + // 4: energy
                "\"FATIGUE\" TEXT," + // 5: fatigue
                "\"BREATHE\" TEXT," + // 6: breathe
                "\"SPEAK\" TEXT," + // 7: speak
                "\"UNPLEASANT\" TEXT," + // 8: unpleasant
                "\"NERVOUS\" TEXT," + // 9: nervous
                "\"SOLITARY\" TEXT," + // 10: solitary
                "\"SCARE\" TEXT," + // 11: scare
                "\"WEIGHT\" TEXT," + // 12: weight
                "\"EYE\" TEXT," + // 13: eye
                "\"HAND\" TEXT," + // 14: hand
                "\"CRAW\" TEXT," + // 15: craw
                "\"COLD\" TEXT," + // 16: cold
                "\"CATCHACOLD\" TEXT," + // 17: catchacold
                "\"RUNATHENOSE\" TEXT," + // 18: runathenose
                "\"MOUTH\" TEXT," + // 19: mouth
                "\"FOOD\" TEXT," + // 20: food
                "\"DERMA\" TEXT," + // 21: derma
                "\"BLEEDING\" TEXT," + // 22: bleeding
                "\"FINGERMAIL\" TEXT," + // 23: fingermail
                "\"ORALDRY\" TEXT," + // 24: oraldry
                "\"ACHE\" TEXT," + // 25: ache
                "\"FACE\" TEXT," + // 26: face
                "\"SPOT\" TEXT," + // 27: spot
                "\"SORE\" TEXT," + // 28: sore
                "\"DRINKING\" TEXT," + // 29: drinking
                "\"BITTERTASTE\" TEXT," + // 30: bittertaste
                "\"ABDOMEN\" TEXT," + // 31: abdomen
                "\"UNCOMFORTABLE\" TEXT," + // 32: uncomfortable
                "\"UNWELL\" TEXT," + // 33: unwell
                "\"MALAISE\" TEXT," + // 34: malaise
                "\"TONGUE\" TEXT," + // 35: tongue
                "\"VEIN\" TEXT," + // 36: vein
                "\"QI_DEFICIENCY_SCORE\" INTEGER," + // 37: qiDeficiencyScore
                "\"QI_DEFICIENCY_CODE\" TEXT," + // 38: qiDeficiencyCode
                "\"YANG_DEFICIENCY_SCORE\" INTEGER," + // 39: yangDeficiencyScore
                "\"YANG_DEFICIENCY_CODE\" TEXT," + // 40: yangDeficiencyCode
                "\"YIN_DEFICIENCY_SCORE\" INTEGER," + // 41: yinDeficiencyScore
                "\"YIN_DEFICIENCY_CODE\" TEXT," + // 42: yinDeficiencyCode
                "\"PHLEGM_WET_SCORE\" INTEGER," + // 43: phlegmWetScore
                "\"PHLEGM_WET_CODE\" TEXT," + // 44: phlegmWetCode
                "\"DAMP_HEAT_SCORE\" INTEGER," + // 45: dampHeatScore
                "\"DAMP_HEAT_CODE\" TEXT," + // 46: dampHeatCode
                "\"BLOOD_STASIS_SCORE\" INTEGER," + // 47: bloodStasisScore
                "\"BLOOD_STASIS_CODE\" TEXT," + // 48: bloodStasisCode
                "\"QI_DEPRESSION_SCORE\" INTEGER," + // 49: qiDepressionScore
                "\"QI_DEPRESSION_CODE\" TEXT," + // 50: qiDepressionCode
                "\"SPECIAL_DIATHSIS_SCORE\" INTEGER," + // 51: specialDiathsisScore
                "\"SPECIAL_DIATHSIS_CODE\" TEXT," + // 52: specialDiathsisCode
                "\"GENTLE_QUALITY_SCORE\" INTEGER," + // 53: gentleQualityScore
                "\"GENTLE_QUALITY_CODE\" TEXT," + // 54: gentleQualityCode
                "\"DOCTOR_ID\" TEXT," + // 55: doctorId
                "\"DOCTOR_NAME\" TEXT," + // 56: doctorName
                "\"FILL_DATE\" INTEGER," + // 57: fillDate
                "\"IS_CANCEL\" INTEGER," + // 58: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 59: createOrgId
                "\"ORG_NAME\" TEXT," + // 60: orgName
                "\"CREATOR_ID\" TEXT," + // 61: creatorId
                "\"CREATOR\" TEXT," + // 62: creator
                "\"CREATE_TIME\" INTEGER," + // 63: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 64: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 65: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 66: modifierId
                "\"MODIFIER\" TEXT," + // 67: modifier
                "\"MODIFIED_TIME\" INTEGER," + // 68: modifiedTime
                "\"JSON_DETAIL\" TEXT);"); // 69: jsonDetail
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ELDER_TCM_HEALTH\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ElderTcmHealth entity) {
        stmt.clearBindings();
 
        String elderTcmHealthId = entity.getElderTcmHealthId();
        if (elderTcmHealthId != null) {
            stmt.bindString(1, elderTcmHealthId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String elderTcmHealthNo = entity.getElderTcmHealthNo();
        if (elderTcmHealthNo != null) {
            stmt.bindString(3, elderTcmHealthNo);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(4, name);
        }
 
        String energy = entity.getEnergy();
        if (energy != null) {
            stmt.bindString(5, energy);
        }
 
        String fatigue = entity.getFatigue();
        if (fatigue != null) {
            stmt.bindString(6, fatigue);
        }
 
        String breathe = entity.getBreathe();
        if (breathe != null) {
            stmt.bindString(7, breathe);
        }
 
        String speak = entity.getSpeak();
        if (speak != null) {
            stmt.bindString(8, speak);
        }
 
        String unpleasant = entity.getUnpleasant();
        if (unpleasant != null) {
            stmt.bindString(9, unpleasant);
        }
 
        String nervous = entity.getNervous();
        if (nervous != null) {
            stmt.bindString(10, nervous);
        }
 
        String solitary = entity.getSolitary();
        if (solitary != null) {
            stmt.bindString(11, solitary);
        }
 
        String scare = entity.getScare();
        if (scare != null) {
            stmt.bindString(12, scare);
        }
 
        String weight = entity.getWeight();
        if (weight != null) {
            stmt.bindString(13, weight);
        }
 
        String eye = entity.getEye();
        if (eye != null) {
            stmt.bindString(14, eye);
        }
 
        String hand = entity.getHand();
        if (hand != null) {
            stmt.bindString(15, hand);
        }
 
        String craw = entity.getCraw();
        if (craw != null) {
            stmt.bindString(16, craw);
        }
 
        String cold = entity.getCold();
        if (cold != null) {
            stmt.bindString(17, cold);
        }
 
        String catchacold = entity.getCatchacold();
        if (catchacold != null) {
            stmt.bindString(18, catchacold);
        }
 
        String runathenose = entity.getRunathenose();
        if (runathenose != null) {
            stmt.bindString(19, runathenose);
        }
 
        String mouth = entity.getMouth();
        if (mouth != null) {
            stmt.bindString(20, mouth);
        }
 
        String food = entity.getFood();
        if (food != null) {
            stmt.bindString(21, food);
        }
 
        String derma = entity.getDerma();
        if (derma != null) {
            stmt.bindString(22, derma);
        }
 
        String bleeding = entity.getBleeding();
        if (bleeding != null) {
            stmt.bindString(23, bleeding);
        }
 
        String fingermail = entity.getFingermail();
        if (fingermail != null) {
            stmt.bindString(24, fingermail);
        }
 
        String oraldry = entity.getOraldry();
        if (oraldry != null) {
            stmt.bindString(25, oraldry);
        }
 
        String ache = entity.getAche();
        if (ache != null) {
            stmt.bindString(26, ache);
        }
 
        String face = entity.getFace();
        if (face != null) {
            stmt.bindString(27, face);
        }
 
        String spot = entity.getSpot();
        if (spot != null) {
            stmt.bindString(28, spot);
        }
 
        String sore = entity.getSore();
        if (sore != null) {
            stmt.bindString(29, sore);
        }
 
        String drinking = entity.getDrinking();
        if (drinking != null) {
            stmt.bindString(30, drinking);
        }
 
        String bittertaste = entity.getBittertaste();
        if (bittertaste != null) {
            stmt.bindString(31, bittertaste);
        }
 
        String abdomen = entity.getAbdomen();
        if (abdomen != null) {
            stmt.bindString(32, abdomen);
        }
 
        String uncomfortable = entity.getUncomfortable();
        if (uncomfortable != null) {
            stmt.bindString(33, uncomfortable);
        }
 
        String unwell = entity.getUnwell();
        if (unwell != null) {
            stmt.bindString(34, unwell);
        }
 
        String malaise = entity.getMalaise();
        if (malaise != null) {
            stmt.bindString(35, malaise);
        }
 
        String tongue = entity.getTongue();
        if (tongue != null) {
            stmt.bindString(36, tongue);
        }
 
        String vein = entity.getVein();
        if (vein != null) {
            stmt.bindString(37, vein);
        }
 
        Integer qiDeficiencyScore = entity.getQiDeficiencyScore();
        if (qiDeficiencyScore != null) {
            stmt.bindLong(38, qiDeficiencyScore);
        }
 
        String qiDeficiencyCode = entity.getQiDeficiencyCode();
        if (qiDeficiencyCode != null) {
            stmt.bindString(39, qiDeficiencyCode);
        }
 
        Integer yangDeficiencyScore = entity.getYangDeficiencyScore();
        if (yangDeficiencyScore != null) {
            stmt.bindLong(40, yangDeficiencyScore);
        }
 
        String yangDeficiencyCode = entity.getYangDeficiencyCode();
        if (yangDeficiencyCode != null) {
            stmt.bindString(41, yangDeficiencyCode);
        }
 
        Integer yinDeficiencyScore = entity.getYinDeficiencyScore();
        if (yinDeficiencyScore != null) {
            stmt.bindLong(42, yinDeficiencyScore);
        }
 
        String yinDeficiencyCode = entity.getYinDeficiencyCode();
        if (yinDeficiencyCode != null) {
            stmt.bindString(43, yinDeficiencyCode);
        }
 
        Integer phlegmWetScore = entity.getPhlegmWetScore();
        if (phlegmWetScore != null) {
            stmt.bindLong(44, phlegmWetScore);
        }
 
        String phlegmWetCode = entity.getPhlegmWetCode();
        if (phlegmWetCode != null) {
            stmt.bindString(45, phlegmWetCode);
        }
 
        Integer dampHeatScore = entity.getDampHeatScore();
        if (dampHeatScore != null) {
            stmt.bindLong(46, dampHeatScore);
        }
 
        String dampHeatCode = entity.getDampHeatCode();
        if (dampHeatCode != null) {
            stmt.bindString(47, dampHeatCode);
        }
 
        Integer bloodStasisScore = entity.getBloodStasisScore();
        if (bloodStasisScore != null) {
            stmt.bindLong(48, bloodStasisScore);
        }
 
        String bloodStasisCode = entity.getBloodStasisCode();
        if (bloodStasisCode != null) {
            stmt.bindString(49, bloodStasisCode);
        }
 
        Integer qiDepressionScore = entity.getQiDepressionScore();
        if (qiDepressionScore != null) {
            stmt.bindLong(50, qiDepressionScore);
        }
 
        String qiDepressionCode = entity.getQiDepressionCode();
        if (qiDepressionCode != null) {
            stmt.bindString(51, qiDepressionCode);
        }
 
        Integer specialDiathsisScore = entity.getSpecialDiathsisScore();
        if (specialDiathsisScore != null) {
            stmt.bindLong(52, specialDiathsisScore);
        }
 
        String specialDiathsisCode = entity.getSpecialDiathsisCode();
        if (specialDiathsisCode != null) {
            stmt.bindString(53, specialDiathsisCode);
        }
 
        Integer gentleQualityScore = entity.getGentleQualityScore();
        if (gentleQualityScore != null) {
            stmt.bindLong(54, gentleQualityScore);
        }
 
        String gentleQualityCode = entity.getGentleQualityCode();
        if (gentleQualityCode != null) {
            stmt.bindString(55, gentleQualityCode);
        }
 
        String doctorId = entity.getDoctorId();
        if (doctorId != null) {
            stmt.bindString(56, doctorId);
        }
 
        String doctorName = entity.getDoctorName();
        if (doctorName != null) {
            stmt.bindString(57, doctorName);
        }
 
        java.util.Date fillDate = entity.getFillDate();
        if (fillDate != null) {
            stmt.bindLong(58, fillDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(59, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(60, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(61, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(62, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(63, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(64, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(65, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(66, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(67, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(68, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(69, modifiedTime.getTime());
        }
 
        String jsonDetail = entity.getJsonDetail();
        if (jsonDetail != null) {
            stmt.bindString(70, jsonDetail);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ElderTcmHealth entity) {
        stmt.clearBindings();
 
        String elderTcmHealthId = entity.getElderTcmHealthId();
        if (elderTcmHealthId != null) {
            stmt.bindString(1, elderTcmHealthId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String elderTcmHealthNo = entity.getElderTcmHealthNo();
        if (elderTcmHealthNo != null) {
            stmt.bindString(3, elderTcmHealthNo);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(4, name);
        }
 
        String energy = entity.getEnergy();
        if (energy != null) {
            stmt.bindString(5, energy);
        }
 
        String fatigue = entity.getFatigue();
        if (fatigue != null) {
            stmt.bindString(6, fatigue);
        }
 
        String breathe = entity.getBreathe();
        if (breathe != null) {
            stmt.bindString(7, breathe);
        }
 
        String speak = entity.getSpeak();
        if (speak != null) {
            stmt.bindString(8, speak);
        }
 
        String unpleasant = entity.getUnpleasant();
        if (unpleasant != null) {
            stmt.bindString(9, unpleasant);
        }
 
        String nervous = entity.getNervous();
        if (nervous != null) {
            stmt.bindString(10, nervous);
        }
 
        String solitary = entity.getSolitary();
        if (solitary != null) {
            stmt.bindString(11, solitary);
        }
 
        String scare = entity.getScare();
        if (scare != null) {
            stmt.bindString(12, scare);
        }
 
        String weight = entity.getWeight();
        if (weight != null) {
            stmt.bindString(13, weight);
        }
 
        String eye = entity.getEye();
        if (eye != null) {
            stmt.bindString(14, eye);
        }
 
        String hand = entity.getHand();
        if (hand != null) {
            stmt.bindString(15, hand);
        }
 
        String craw = entity.getCraw();
        if (craw != null) {
            stmt.bindString(16, craw);
        }
 
        String cold = entity.getCold();
        if (cold != null) {
            stmt.bindString(17, cold);
        }
 
        String catchacold = entity.getCatchacold();
        if (catchacold != null) {
            stmt.bindString(18, catchacold);
        }
 
        String runathenose = entity.getRunathenose();
        if (runathenose != null) {
            stmt.bindString(19, runathenose);
        }
 
        String mouth = entity.getMouth();
        if (mouth != null) {
            stmt.bindString(20, mouth);
        }
 
        String food = entity.getFood();
        if (food != null) {
            stmt.bindString(21, food);
        }
 
        String derma = entity.getDerma();
        if (derma != null) {
            stmt.bindString(22, derma);
        }
 
        String bleeding = entity.getBleeding();
        if (bleeding != null) {
            stmt.bindString(23, bleeding);
        }
 
        String fingermail = entity.getFingermail();
        if (fingermail != null) {
            stmt.bindString(24, fingermail);
        }
 
        String oraldry = entity.getOraldry();
        if (oraldry != null) {
            stmt.bindString(25, oraldry);
        }
 
        String ache = entity.getAche();
        if (ache != null) {
            stmt.bindString(26, ache);
        }
 
        String face = entity.getFace();
        if (face != null) {
            stmt.bindString(27, face);
        }
 
        String spot = entity.getSpot();
        if (spot != null) {
            stmt.bindString(28, spot);
        }
 
        String sore = entity.getSore();
        if (sore != null) {
            stmt.bindString(29, sore);
        }
 
        String drinking = entity.getDrinking();
        if (drinking != null) {
            stmt.bindString(30, drinking);
        }
 
        String bittertaste = entity.getBittertaste();
        if (bittertaste != null) {
            stmt.bindString(31, bittertaste);
        }
 
        String abdomen = entity.getAbdomen();
        if (abdomen != null) {
            stmt.bindString(32, abdomen);
        }
 
        String uncomfortable = entity.getUncomfortable();
        if (uncomfortable != null) {
            stmt.bindString(33, uncomfortable);
        }
 
        String unwell = entity.getUnwell();
        if (unwell != null) {
            stmt.bindString(34, unwell);
        }
 
        String malaise = entity.getMalaise();
        if (malaise != null) {
            stmt.bindString(35, malaise);
        }
 
        String tongue = entity.getTongue();
        if (tongue != null) {
            stmt.bindString(36, tongue);
        }
 
        String vein = entity.getVein();
        if (vein != null) {
            stmt.bindString(37, vein);
        }
 
        Integer qiDeficiencyScore = entity.getQiDeficiencyScore();
        if (qiDeficiencyScore != null) {
            stmt.bindLong(38, qiDeficiencyScore);
        }
 
        String qiDeficiencyCode = entity.getQiDeficiencyCode();
        if (qiDeficiencyCode != null) {
            stmt.bindString(39, qiDeficiencyCode);
        }
 
        Integer yangDeficiencyScore = entity.getYangDeficiencyScore();
        if (yangDeficiencyScore != null) {
            stmt.bindLong(40, yangDeficiencyScore);
        }
 
        String yangDeficiencyCode = entity.getYangDeficiencyCode();
        if (yangDeficiencyCode != null) {
            stmt.bindString(41, yangDeficiencyCode);
        }
 
        Integer yinDeficiencyScore = entity.getYinDeficiencyScore();
        if (yinDeficiencyScore != null) {
            stmt.bindLong(42, yinDeficiencyScore);
        }
 
        String yinDeficiencyCode = entity.getYinDeficiencyCode();
        if (yinDeficiencyCode != null) {
            stmt.bindString(43, yinDeficiencyCode);
        }
 
        Integer phlegmWetScore = entity.getPhlegmWetScore();
        if (phlegmWetScore != null) {
            stmt.bindLong(44, phlegmWetScore);
        }
 
        String phlegmWetCode = entity.getPhlegmWetCode();
        if (phlegmWetCode != null) {
            stmt.bindString(45, phlegmWetCode);
        }
 
        Integer dampHeatScore = entity.getDampHeatScore();
        if (dampHeatScore != null) {
            stmt.bindLong(46, dampHeatScore);
        }
 
        String dampHeatCode = entity.getDampHeatCode();
        if (dampHeatCode != null) {
            stmt.bindString(47, dampHeatCode);
        }
 
        Integer bloodStasisScore = entity.getBloodStasisScore();
        if (bloodStasisScore != null) {
            stmt.bindLong(48, bloodStasisScore);
        }
 
        String bloodStasisCode = entity.getBloodStasisCode();
        if (bloodStasisCode != null) {
            stmt.bindString(49, bloodStasisCode);
        }
 
        Integer qiDepressionScore = entity.getQiDepressionScore();
        if (qiDepressionScore != null) {
            stmt.bindLong(50, qiDepressionScore);
        }
 
        String qiDepressionCode = entity.getQiDepressionCode();
        if (qiDepressionCode != null) {
            stmt.bindString(51, qiDepressionCode);
        }
 
        Integer specialDiathsisScore = entity.getSpecialDiathsisScore();
        if (specialDiathsisScore != null) {
            stmt.bindLong(52, specialDiathsisScore);
        }
 
        String specialDiathsisCode = entity.getSpecialDiathsisCode();
        if (specialDiathsisCode != null) {
            stmt.bindString(53, specialDiathsisCode);
        }
 
        Integer gentleQualityScore = entity.getGentleQualityScore();
        if (gentleQualityScore != null) {
            stmt.bindLong(54, gentleQualityScore);
        }
 
        String gentleQualityCode = entity.getGentleQualityCode();
        if (gentleQualityCode != null) {
            stmt.bindString(55, gentleQualityCode);
        }
 
        String doctorId = entity.getDoctorId();
        if (doctorId != null) {
            stmt.bindString(56, doctorId);
        }
 
        String doctorName = entity.getDoctorName();
        if (doctorName != null) {
            stmt.bindString(57, doctorName);
        }
 
        java.util.Date fillDate = entity.getFillDate();
        if (fillDate != null) {
            stmt.bindLong(58, fillDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(59, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(60, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(61, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(62, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(63, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(64, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(65, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(66, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(67, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(68, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(69, modifiedTime.getTime());
        }
 
        String jsonDetail = entity.getJsonDetail();
        if (jsonDetail != null) {
            stmt.bindString(70, jsonDetail);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public ElderTcmHealth readEntity(Cursor cursor, int offset) {
        ElderTcmHealth entity = new ElderTcmHealth( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // elderTcmHealthId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // elderTcmHealthNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // name
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // energy
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // fatigue
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // breathe
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // speak
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // unpleasant
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // nervous
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // solitary
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // scare
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // weight
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // eye
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // hand
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // craw
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // cold
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // catchacold
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // runathenose
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // mouth
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // food
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // derma
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // bleeding
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // fingermail
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // oraldry
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // ache
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // face
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // spot
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // sore
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // drinking
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // bittertaste
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // abdomen
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // uncomfortable
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // unwell
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // malaise
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // tongue
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // vein
            cursor.isNull(offset + 37) ? null : cursor.getInt(offset + 37), // qiDeficiencyScore
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // qiDeficiencyCode
            cursor.isNull(offset + 39) ? null : cursor.getInt(offset + 39), // yangDeficiencyScore
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // yangDeficiencyCode
            cursor.isNull(offset + 41) ? null : cursor.getInt(offset + 41), // yinDeficiencyScore
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // yinDeficiencyCode
            cursor.isNull(offset + 43) ? null : cursor.getInt(offset + 43), // phlegmWetScore
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // phlegmWetCode
            cursor.isNull(offset + 45) ? null : cursor.getInt(offset + 45), // dampHeatScore
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // dampHeatCode
            cursor.isNull(offset + 47) ? null : cursor.getInt(offset + 47), // bloodStasisScore
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // bloodStasisCode
            cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49), // qiDepressionScore
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // qiDepressionCode
            cursor.isNull(offset + 51) ? null : cursor.getInt(offset + 51), // specialDiathsisScore
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // specialDiathsisCode
            cursor.isNull(offset + 53) ? null : cursor.getInt(offset + 53), // gentleQualityScore
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // gentleQualityCode
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // doctorId
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // doctorName
            cursor.isNull(offset + 57) ? null : new java.util.Date(cursor.getLong(offset + 57)), // fillDate
            cursor.isNull(offset + 58) ? null : cursor.getInt(offset + 58), // isCancel
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // createOrgId
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // orgName
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // creatorId
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // creator
            cursor.isNull(offset + 63) ? null : new java.util.Date(cursor.getLong(offset + 63)), // createTime
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // modifiedOrgId
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // modifiedOrgName
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // modifierId
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // modifier
            cursor.isNull(offset + 68) ? null : new java.util.Date(cursor.getLong(offset + 68)), // modifiedTime
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69) // jsonDetail
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ElderTcmHealth entity, int offset) {
        entity.setElderTcmHealthId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setElderTcmHealthNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setEnergy(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFatigue(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setBreathe(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setSpeak(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setUnpleasant(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setNervous(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setSolitary(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setScare(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setWeight(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setEye(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setHand(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setCraw(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setCold(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setCatchacold(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setRunathenose(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setMouth(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setFood(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setDerma(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBleeding(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setFingermail(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setOraldry(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setAche(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setFace(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setSpot(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setSore(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setDrinking(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setBittertaste(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setAbdomen(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setUncomfortable(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setUnwell(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setMalaise(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setTongue(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setVein(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setQiDeficiencyScore(cursor.isNull(offset + 37) ? null : cursor.getInt(offset + 37));
        entity.setQiDeficiencyCode(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setYangDeficiencyScore(cursor.isNull(offset + 39) ? null : cursor.getInt(offset + 39));
        entity.setYangDeficiencyCode(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setYinDeficiencyScore(cursor.isNull(offset + 41) ? null : cursor.getInt(offset + 41));
        entity.setYinDeficiencyCode(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setPhlegmWetScore(cursor.isNull(offset + 43) ? null : cursor.getInt(offset + 43));
        entity.setPhlegmWetCode(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setDampHeatScore(cursor.isNull(offset + 45) ? null : cursor.getInt(offset + 45));
        entity.setDampHeatCode(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setBloodStasisScore(cursor.isNull(offset + 47) ? null : cursor.getInt(offset + 47));
        entity.setBloodStasisCode(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setQiDepressionScore(cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49));
        entity.setQiDepressionCode(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setSpecialDiathsisScore(cursor.isNull(offset + 51) ? null : cursor.getInt(offset + 51));
        entity.setSpecialDiathsisCode(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setGentleQualityScore(cursor.isNull(offset + 53) ? null : cursor.getInt(offset + 53));
        entity.setGentleQualityCode(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setDoctorId(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setDoctorName(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setFillDate(cursor.isNull(offset + 57) ? null : new java.util.Date(cursor.getLong(offset + 57)));
        entity.setIsCancel(cursor.isNull(offset + 58) ? null : cursor.getInt(offset + 58));
        entity.setCreateOrgId(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setOrgName(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setCreatorId(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setCreator(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setCreateTime(cursor.isNull(offset + 63) ? null : new java.util.Date(cursor.getLong(offset + 63)));
        entity.setModifiedOrgId(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setModifiedOrgName(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setModifierId(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setModifier(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setModifiedTime(cursor.isNull(offset + 68) ? null : new java.util.Date(cursor.getLong(offset + 68)));
        entity.setJsonDetail(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(ElderTcmHealth entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(ElderTcmHealth entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
