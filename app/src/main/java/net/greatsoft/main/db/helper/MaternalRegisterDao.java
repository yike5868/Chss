package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.maternal.MaternalRegister;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "MATERNAL_REGISTER".
*/
public class MaternalRegisterDao extends AbstractDao<MaternalRegister, Void> {

    public static final String TABLENAME = "MATERNAL_REGISTER";

    /**
     * Properties of entity MaternalRegister.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property MaternalRegisterId = new Property(0, String.class, "maternalRegisterId", false, "MATERNAL_REGISTER_ID");
        public final static Property MaternalInfoId = new Property(1, String.class, "maternalInfoId", false, "MATERNAL_INFO_ID");
        public final static Property PersonInfoId = new Property(2, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property MaternalInfoNo = new Property(3, String.class, "maternalInfoNo", false, "MATERNAL_INFO_NO");
        public final static Property PregnantCount = new Property(4, Integer.class, "pregnantCount", false, "PREGNANT_COUNT");
        public final static Property TelNo = new Property(5, String.class, "telNo", false, "TEL_NO");
        public final static Property Household = new Property(6, String.class, "household", false, "HOUSEHOLD");
        public final static Property Name = new Property(7, String.class, "name", false, "NAME");
        public final static Property Age = new Property(8, Integer.class, "age", false, "AGE");
        public final static Property HusbandAge = new Property(9, Integer.class, "husbandAge", false, "HUSBAND_AGE");
        public final static Property HusbandPersonInfoId = new Property(10, String.class, "husbandPersonInfoId", false, "HUSBAND_PERSON_INFO_ID");
        public final static Property HusbandName = new Property(11, String.class, "husbandName", false, "HUSBAND_NAME");
        public final static Property HusbandUnit = new Property(12, String.class, "husbandUnit", false, "HUSBAND_UNIT");
        public final static Property Address = new Property(13, String.class, "address", false, "ADDRESS");
        public final static Property HusbandTelNo = new Property(14, String.class, "husbandTelNo", false, "HUSBAND_TEL_NO");
        public final static Property MensesPeriod = new Property(15, Integer.class, "mensesPeriod", false, "MENSES_PERIOD");
        public final static Property MensesMeasure = new Property(16, String.class, "mensesMeasure", false, "MENSES_MEASURE");
        public final static Property MensesLastDate = new Property(17, java.util.Date.class, "mensesLastDate", false, "MENSES_LAST_DATE");
        public final static Property ExpectedChildBirthday = new Property(18, java.util.Date.class, "expectedChildBirthday", false, "EXPECTED_CHILD_BIRTHDAY");
        public final static Property ChildrenCount = new Property(19, Integer.class, "childrenCount", false, "CHILDREN_COUNT");
        public final static Property BuildingManualCode = new Property(20, String.class, "buildingManualCode", false, "BUILDING_MANUAL_CODE");
        public final static Property BuildingManualDate = new Property(21, java.util.Date.class, "buildingManualDate", false, "BUILDING_MANUAL_DATE");
        public final static Property SpontaneousAbortionCount = new Property(22, Integer.class, "spontaneousAbortionCount", false, "SPONTANEOUS_ABORTION_COUNT");
        public final static Property ArtificialAbortionCount = new Property(23, Integer.class, "artificialAbortionCount", false, "ARTIFICIAL_ABORTION_COUNT");
        public final static Property DrugAbortionCount = new Property(24, Integer.class, "drugAbortionCount", false, "DRUG_ABORTION_COUNT");
        public final static Property PregnancyInplan = new Property(25, String.class, "pregnancyInplan", false, "PREGNANCY_INPLAN");
        public final static Property PregnancyLasttime = new Property(26, java.util.Date.class, "pregnancyLasttime", false, "PREGNANCY_LASTTIME");
        public final static Property Gravidity = new Property(27, Integer.class, "gravidity", false, "GRAVIDITY");
        public final static Property Parity = new Property(28, Integer.class, "parity", false, "PARITY");
        public final static Property Height = new Property(29, Double.class, "height", false, "HEIGHT");
        public final static Property Weight = new Property(30, Double.class, "weight", false, "WEIGHT");
        public final static Property Bmi = new Property(31, Double.class, "bmi", false, "BMI");
        public final static Property Sbp = new Property(32, Integer.class, "sbp", false, "SBP");
        public final static Property Dbp = new Property(33, Integer.class, "dbp", false, "DBP");
        public final static Property Remark = new Property(34, String.class, "remark", false, "REMARK");
        public final static Property CaseStatus = new Property(35, String.class, "caseStatus", false, "CASE_STATUS");
        public final static Property IsCancel = new Property(36, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(37, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(38, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(39, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(40, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(41, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(42, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(43, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(44, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(45, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(46, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
        public final static Property BuildWeeks = new Property(47, Integer.class, "buildWeeks", false, "BUILD_WEEKS");
        public final static Property CurrentWeeks = new Property(48, Integer.class, "currentWeeks", false, "CURRENT_WEEKS");
        public final static Property BuildDays = new Property(49, Integer.class, "buildDays", false, "BUILD_DAYS");
        public final static Property FirstFollowupDate = new Property(50, java.util.Date.class, "firstFollowupDate", false, "FIRST_FOLLOWUP_DATE");
        public final static Property FirstFollowupWeeks = new Property(51, Integer.class, "firstFollowupWeeks", false, "FIRST_FOLLOWUP_WEEKS");
        public final static Property FirstFollowupDays = new Property(52, Integer.class, "firstFollowupDays", false, "FIRST_FOLLOWUP_DAYS");
        public final static Property FirstFollowupOrgId = new Property(53, String.class, "firstFollowupOrgId", false, "FIRST_FOLLOWUP_ORG_ID");
        public final static Property SecondFollowupDate = new Property(54, java.util.Date.class, "secondFollowupDate", false, "SECOND_FOLLOWUP_DATE");
        public final static Property SecondFollowupWeeks = new Property(55, Integer.class, "secondFollowupWeeks", false, "SECOND_FOLLOWUP_WEEKS");
        public final static Property SecondFollowupDays = new Property(56, Integer.class, "secondFollowupDays", false, "SECOND_FOLLOWUP_DAYS");
        public final static Property SecondFollowupOrgId = new Property(57, String.class, "secondFollowupOrgId", false, "SECOND_FOLLOWUP_ORG_ID");
        public final static Property ThirdFollowupDate = new Property(58, java.util.Date.class, "thirdFollowupDate", false, "THIRD_FOLLOWUP_DATE");
        public final static Property ThirdFollowupWeeks = new Property(59, Integer.class, "thirdFollowupWeeks", false, "THIRD_FOLLOWUP_WEEKS");
        public final static Property ThirdFollowupDays = new Property(60, Integer.class, "thirdFollowupDays", false, "THIRD_FOLLOWUP_DAYS");
        public final static Property ThirdFollowupOrgId = new Property(61, String.class, "thirdFollowupOrgId", false, "THIRD_FOLLOWUP_ORG_ID");
        public final static Property FourthFollowupDate = new Property(62, java.util.Date.class, "fourthFollowupDate", false, "FOURTH_FOLLOWUP_DATE");
        public final static Property FourthFollowupWeeks = new Property(63, Integer.class, "fourthFollowupWeeks", false, "FOURTH_FOLLOWUP_WEEKS");
        public final static Property FourthFollowupDays = new Property(64, Integer.class, "fourthFollowupDays", false, "FOURTH_FOLLOWUP_DAYS");
        public final static Property FourthFollowupOrgId = new Property(65, String.class, "fourthFollowupOrgId", false, "FOURTH_FOLLOWUP_ORG_ID");
        public final static Property FifthFollowupDate = new Property(66, java.util.Date.class, "fifthFollowupDate", false, "FIFTH_FOLLOWUP_DATE");
        public final static Property FifthFollowupWeeks = new Property(67, Integer.class, "fifthFollowupWeeks", false, "FIFTH_FOLLOWUP_WEEKS");
        public final static Property FifthFollowupDays = new Property(68, Integer.class, "fifthFollowupDays", false, "FIFTH_FOLLOWUP_DAYS");
        public final static Property FifthFollowupOrgId = new Property(69, String.class, "fifthFollowupOrgId", false, "FIFTH_FOLLOWUP_ORG_ID");
        public final static Property FollowupDate1 = new Property(70, java.util.Date.class, "followupDate1", false, "FOLLOWUP_DATE1");
        public final static Property FollowupWeeks1 = new Property(71, Integer.class, "followupWeeks1", false, "FOLLOWUP_WEEKS1");
        public final static Property FollowupDays1 = new Property(72, Integer.class, "followupDays1", false, "FOLLOWUP_DAYS1");
        public final static Property FollowupOrgId1 = new Property(73, String.class, "followupOrgId1", false, "FOLLOWUP_ORG_ID1");
        public final static Property FollowupDate2 = new Property(74, java.util.Date.class, "followupDate2", false, "FOLLOWUP_DATE2");
        public final static Property FollowupWeeks2 = new Property(75, Integer.class, "followupWeeks2", false, "FOLLOWUP_WEEKS2");
        public final static Property FollowupDays2 = new Property(76, Integer.class, "followupDays2", false, "FOLLOWUP_DAYS2");
        public final static Property FollowupOrgId2 = new Property(77, String.class, "followupOrgId2", false, "FOLLOWUP_ORG_ID2");
        public final static Property FollowupDate3 = new Property(78, java.util.Date.class, "followupDate3", false, "FOLLOWUP_DATE3");
        public final static Property FollowupWeeks3 = new Property(79, Integer.class, "followupWeeks3", false, "FOLLOWUP_WEEKS3");
        public final static Property FollowupDays3 = new Property(80, Integer.class, "followupDays3", false, "FOLLOWUP_DAYS3");
        public final static Property FollowupOrgId3 = new Property(81, String.class, "followupOrgId3", false, "FOLLOWUP_ORG_ID3");
        public final static Property FollowupDate4 = new Property(82, java.util.Date.class, "followupDate4", false, "FOLLOWUP_DATE4");
        public final static Property FollowupWeeks4 = new Property(83, Integer.class, "followupWeeks4", false, "FOLLOWUP_WEEKS4");
        public final static Property FollowupDays4 = new Property(84, Integer.class, "followupDays4", false, "FOLLOWUP_DAYS4");
        public final static Property FollowupOrgId4 = new Property(85, String.class, "followupOrgId4", false, "FOLLOWUP_ORG_ID4");
        public final static Property FollowupDate5 = new Property(86, java.util.Date.class, "followupDate5", false, "FOLLOWUP_DATE5");
        public final static Property FollowupWeeks5 = new Property(87, Integer.class, "followupWeeks5", false, "FOLLOWUP_WEEKS5");
        public final static Property FollowupDays5 = new Property(88, Integer.class, "followupDays5", false, "FOLLOWUP_DAYS5");
        public final static Property FollowupOrgId5 = new Property(89, String.class, "followupOrgId5", false, "FOLLOWUP_ORG_ID5");
        public final static Property FollowupDate6 = new Property(90, java.util.Date.class, "followupDate6", false, "FOLLOWUP_DATE6");
        public final static Property FollowupWeeks6 = new Property(91, Integer.class, "followupWeeks6", false, "FOLLOWUP_WEEKS6");
        public final static Property FollowupDays6 = new Property(92, Integer.class, "followupDays6", false, "FOLLOWUP_DAYS6");
        public final static Property FollowupOrgId6 = new Property(93, String.class, "followupOrgId6", false, "FOLLOWUP_ORG_ID6");
        public final static Property FollowupDate7 = new Property(94, java.util.Date.class, "followupDate7", false, "FOLLOWUP_DATE7");
        public final static Property FollowupWeeks7 = new Property(95, Integer.class, "followupWeeks7", false, "FOLLOWUP_WEEKS7");
        public final static Property FollowupDays7 = new Property(96, Integer.class, "followupDays7", false, "FOLLOWUP_DAYS7");
        public final static Property FollowupOrgId7 = new Property(97, String.class, "followupOrgId7", false, "FOLLOWUP_ORG_ID7");
        public final static Property FollowupDate8 = new Property(98, java.util.Date.class, "followupDate8", false, "FOLLOWUP_DATE8");
        public final static Property FollowupWeeks8 = new Property(99, Integer.class, "followupWeeks8", false, "FOLLOWUP_WEEKS8");
        public final static Property FollowupDays8 = new Property(100, Integer.class, "followupDays8", false, "FOLLOWUP_DAYS8");
        public final static Property FollowupOrgId8 = new Property(101, String.class, "followupOrgId8", false, "FOLLOWUP_ORG_ID8");
        public final static Property FollowupDate9 = new Property(102, java.util.Date.class, "followupDate9", false, "FOLLOWUP_DATE9");
        public final static Property FollowupWeeks9 = new Property(103, Integer.class, "followupWeeks9", false, "FOLLOWUP_WEEKS9");
        public final static Property FollowupDays9 = new Property(104, Integer.class, "followupDays9", false, "FOLLOWUP_DAYS9");
        public final static Property FollowupOrgId9 = new Property(105, String.class, "followupOrgId9", false, "FOLLOWUP_ORG_ID9");
        public final static Property FollowupDate10 = new Property(106, java.util.Date.class, "followupDate10", false, "FOLLOWUP_DATE10");
        public final static Property FollowupWeeks10 = new Property(107, Integer.class, "followupWeeks10", false, "FOLLOWUP_WEEKS10");
        public final static Property FollowupDays10 = new Property(108, Integer.class, "followupDays10", false, "FOLLOWUP_DAYS10");
        public final static Property FollowupOrgId10 = new Property(109, String.class, "followupOrgId10", false, "FOLLOWUP_ORG_ID10");
        public final static Property Anemia = new Property(110, String.class, "anemia", false, "ANEMIA");
        public final static Property HivExamination = new Property(111, String.class, "hivExamination", false, "HIV_EXAMINATION");
        public final static Property HepatitisCheck = new Property(112, String.class, "hepatitisCheck", false, "HEPATITIS_CHECK");
        public final static Property SyphilisExamination = new Property(113, String.class, "syphilisExamination", false, "SYPHILIS_EXAMINATION");
        public final static Property HrScoreEarly = new Property(114, Integer.class, "hrScoreEarly", false, "HR_SCORE_EARLY");
        public final static Property HrScoreMiddle = new Property(115, Integer.class, "hrScoreMiddle", false, "HR_SCORE_MIDDLE");
        public final static Property HrScoreEarlyLater = new Property(116, Integer.class, "hrScoreEarlyLater", false, "HR_SCORE_EARLY_LATER");
        public final static Property DownsSyndrome = new Property(117, String.class, "downsSyndrome", false, "DOWNS_SYNDROME");
        public final static Property PrenatalDiagnosis = new Property(118, String.class, "prenatalDiagnosis", false, "PRENATAL_DIAGNOSIS");
        public final static Property MaternalChildbirthDate = new Property(119, java.util.Date.class, "maternalChildbirthDate", false, "MATERNAL_CHILDBIRTH_DATE");
        public final static Property MaternalWeeks = new Property(120, Integer.class, "maternalWeeks", false, "MATERNAL_WEEKS");
        public final static Property MaternalDays = new Property(121, Integer.class, "maternalDays", false, "MATERNAL_DAYS");
        public final static Property MaternalHospital = new Property(122, String.class, "maternalHospital", false, "MATERNAL_HOSPITAL");
        public final static Property LaborWayValue = new Property(123, String.class, "laborWayValue", false, "LABOR_WAY_VALUE");
        public final static Property PerinatalBabyScore = new Property(124, String.class, "perinatalBabyScore", false, "PERINATAL_BABY_SCORE");
        public final static Property PerinatalBabyWeight = new Property(125, String.class, "perinatalBabyWeight", false, "PERINATAL_BABY_WEIGHT");
        public final static Property PostpartumFollowupDate = new Property(126, java.util.Date.class, "postpartumFollowupDate", false, "POSTPARTUM_FOLLOWUP_DATE");
        public final static Property PostpartumPostpartumMom = new Property(127, String.class, "postpartumPostpartumMom", false, "POSTPARTUM_POSTPARTUM_MOM");
        public final static Property PostpartumOrgId = new Property(128, String.class, "postpartumOrgId", false, "POSTPARTUM_ORG_ID");
        public final static Property LastFollowupDate = new Property(129, java.util.Date.class, "lastFollowupDate", false, "LAST_FOLLOWUP_DATE");
        public final static Property LastFollowupResult = new Property(130, String.class, "lastFollowupResult", false, "LAST_FOLLOWUP_RESULT");
        public final static Property LastFollowupOrgId = new Property(131, String.class, "lastFollowupOrgId", false, "LAST_FOLLOWUP_ORG_ID");
        public final static Property BabySex = new Property(132, String.class, "babySex", false, "BABY_SEX");
        public final static Property FollowupType = new Property(133, String.class, "followupType", false, "FOLLOWUP_TYPE");
        public final static Property LedgerRemark = new Property(134, String.class, "ledgerRemark", false, "LEDGER_REMARK");
        public final static Property CloseCaseCode = new Property(135, String.class, "closeCaseCode", false, "CLOSE_CASE_CODE");
        public final static Property CloseCaseReason = new Property(136, String.class, "closeCaseReason", false, "CLOSE_CASE_REASON");
        public final static Property WorkUnit = new Property(137, String.class, "workUnit", false, "WORK_UNIT");
    };


    public MaternalRegisterDao(DaoConfig config) {
        super(config);
    }
    
    public MaternalRegisterDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"MATERNAL_REGISTER\" (" + //
                "\"MATERNAL_REGISTER_ID\" TEXT," + // 0: maternalRegisterId
                "\"MATERNAL_INFO_ID\" TEXT," + // 1: maternalInfoId
                "\"PERSON_INFO_ID\" TEXT," + // 2: personInfoId
                "\"MATERNAL_INFO_NO\" TEXT," + // 3: maternalInfoNo
                "\"PREGNANT_COUNT\" INTEGER," + // 4: pregnantCount
                "\"TEL_NO\" TEXT," + // 5: telNo
                "\"HOUSEHOLD\" TEXT," + // 6: household
                "\"NAME\" TEXT," + // 7: name
                "\"AGE\" INTEGER," + // 8: age
                "\"HUSBAND_AGE\" INTEGER," + // 9: husbandAge
                "\"HUSBAND_PERSON_INFO_ID\" TEXT," + // 10: husbandPersonInfoId
                "\"HUSBAND_NAME\" TEXT," + // 11: husbandName
                "\"HUSBAND_UNIT\" TEXT," + // 12: husbandUnit
                "\"ADDRESS\" TEXT," + // 13: address
                "\"HUSBAND_TEL_NO\" TEXT," + // 14: husbandTelNo
                "\"MENSES_PERIOD\" INTEGER," + // 15: mensesPeriod
                "\"MENSES_MEASURE\" TEXT," + // 16: mensesMeasure
                "\"MENSES_LAST_DATE\" INTEGER," + // 17: mensesLastDate
                "\"EXPECTED_CHILD_BIRTHDAY\" INTEGER," + // 18: expectedChildBirthday
                "\"CHILDREN_COUNT\" INTEGER," + // 19: childrenCount
                "\"BUILDING_MANUAL_CODE\" TEXT," + // 20: buildingManualCode
                "\"BUILDING_MANUAL_DATE\" INTEGER," + // 21: buildingManualDate
                "\"SPONTANEOUS_ABORTION_COUNT\" INTEGER," + // 22: spontaneousAbortionCount
                "\"ARTIFICIAL_ABORTION_COUNT\" INTEGER," + // 23: artificialAbortionCount
                "\"DRUG_ABORTION_COUNT\" INTEGER," + // 24: drugAbortionCount
                "\"PREGNANCY_INPLAN\" TEXT," + // 25: pregnancyInplan
                "\"PREGNANCY_LASTTIME\" INTEGER," + // 26: pregnancyLasttime
                "\"GRAVIDITY\" INTEGER," + // 27: gravidity
                "\"PARITY\" INTEGER," + // 28: parity
                "\"HEIGHT\" REAL," + // 29: height
                "\"WEIGHT\" REAL," + // 30: weight
                "\"BMI\" REAL," + // 31: bmi
                "\"SBP\" INTEGER," + // 32: sbp
                "\"DBP\" INTEGER," + // 33: dbp
                "\"REMARK\" TEXT," + // 34: remark
                "\"CASE_STATUS\" TEXT," + // 35: caseStatus
                "\"IS_CANCEL\" INTEGER," + // 36: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 37: createOrgId
                "\"ORG_NAME\" TEXT," + // 38: orgName
                "\"CREATOR_ID\" TEXT," + // 39: creatorId
                "\"CREATOR\" TEXT," + // 40: creator
                "\"CREATE_TIME\" INTEGER," + // 41: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 42: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 43: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 44: modifierId
                "\"MODIFIER\" TEXT," + // 45: modifier
                "\"MODIFIED_TIME\" INTEGER," + // 46: modifiedTime
                "\"BUILD_WEEKS\" INTEGER," + // 47: buildWeeks
                "\"CURRENT_WEEKS\" INTEGER," + // 48: currentWeeks
                "\"BUILD_DAYS\" INTEGER," + // 49: buildDays
                "\"FIRST_FOLLOWUP_DATE\" INTEGER," + // 50: firstFollowupDate
                "\"FIRST_FOLLOWUP_WEEKS\" INTEGER," + // 51: firstFollowupWeeks
                "\"FIRST_FOLLOWUP_DAYS\" INTEGER," + // 52: firstFollowupDays
                "\"FIRST_FOLLOWUP_ORG_ID\" TEXT," + // 53: firstFollowupOrgId
                "\"SECOND_FOLLOWUP_DATE\" INTEGER," + // 54: secondFollowupDate
                "\"SECOND_FOLLOWUP_WEEKS\" INTEGER," + // 55: secondFollowupWeeks
                "\"SECOND_FOLLOWUP_DAYS\" INTEGER," + // 56: secondFollowupDays
                "\"SECOND_FOLLOWUP_ORG_ID\" TEXT," + // 57: secondFollowupOrgId
                "\"THIRD_FOLLOWUP_DATE\" INTEGER," + // 58: thirdFollowupDate
                "\"THIRD_FOLLOWUP_WEEKS\" INTEGER," + // 59: thirdFollowupWeeks
                "\"THIRD_FOLLOWUP_DAYS\" INTEGER," + // 60: thirdFollowupDays
                "\"THIRD_FOLLOWUP_ORG_ID\" TEXT," + // 61: thirdFollowupOrgId
                "\"FOURTH_FOLLOWUP_DATE\" INTEGER," + // 62: fourthFollowupDate
                "\"FOURTH_FOLLOWUP_WEEKS\" INTEGER," + // 63: fourthFollowupWeeks
                "\"FOURTH_FOLLOWUP_DAYS\" INTEGER," + // 64: fourthFollowupDays
                "\"FOURTH_FOLLOWUP_ORG_ID\" TEXT," + // 65: fourthFollowupOrgId
                "\"FIFTH_FOLLOWUP_DATE\" INTEGER," + // 66: fifthFollowupDate
                "\"FIFTH_FOLLOWUP_WEEKS\" INTEGER," + // 67: fifthFollowupWeeks
                "\"FIFTH_FOLLOWUP_DAYS\" INTEGER," + // 68: fifthFollowupDays
                "\"FIFTH_FOLLOWUP_ORG_ID\" TEXT," + // 69: fifthFollowupOrgId
                "\"FOLLOWUP_DATE1\" INTEGER," + // 70: followupDate1
                "\"FOLLOWUP_WEEKS1\" INTEGER," + // 71: followupWeeks1
                "\"FOLLOWUP_DAYS1\" INTEGER," + // 72: followupDays1
                "\"FOLLOWUP_ORG_ID1\" TEXT," + // 73: followupOrgId1
                "\"FOLLOWUP_DATE2\" INTEGER," + // 74: followupDate2
                "\"FOLLOWUP_WEEKS2\" INTEGER," + // 75: followupWeeks2
                "\"FOLLOWUP_DAYS2\" INTEGER," + // 76: followupDays2
                "\"FOLLOWUP_ORG_ID2\" TEXT," + // 77: followupOrgId2
                "\"FOLLOWUP_DATE3\" INTEGER," + // 78: followupDate3
                "\"FOLLOWUP_WEEKS3\" INTEGER," + // 79: followupWeeks3
                "\"FOLLOWUP_DAYS3\" INTEGER," + // 80: followupDays3
                "\"FOLLOWUP_ORG_ID3\" TEXT," + // 81: followupOrgId3
                "\"FOLLOWUP_DATE4\" INTEGER," + // 82: followupDate4
                "\"FOLLOWUP_WEEKS4\" INTEGER," + // 83: followupWeeks4
                "\"FOLLOWUP_DAYS4\" INTEGER," + // 84: followupDays4
                "\"FOLLOWUP_ORG_ID4\" TEXT," + // 85: followupOrgId4
                "\"FOLLOWUP_DATE5\" INTEGER," + // 86: followupDate5
                "\"FOLLOWUP_WEEKS5\" INTEGER," + // 87: followupWeeks5
                "\"FOLLOWUP_DAYS5\" INTEGER," + // 88: followupDays5
                "\"FOLLOWUP_ORG_ID5\" TEXT," + // 89: followupOrgId5
                "\"FOLLOWUP_DATE6\" INTEGER," + // 90: followupDate6
                "\"FOLLOWUP_WEEKS6\" INTEGER," + // 91: followupWeeks6
                "\"FOLLOWUP_DAYS6\" INTEGER," + // 92: followupDays6
                "\"FOLLOWUP_ORG_ID6\" TEXT," + // 93: followupOrgId6
                "\"FOLLOWUP_DATE7\" INTEGER," + // 94: followupDate7
                "\"FOLLOWUP_WEEKS7\" INTEGER," + // 95: followupWeeks7
                "\"FOLLOWUP_DAYS7\" INTEGER," + // 96: followupDays7
                "\"FOLLOWUP_ORG_ID7\" TEXT," + // 97: followupOrgId7
                "\"FOLLOWUP_DATE8\" INTEGER," + // 98: followupDate8
                "\"FOLLOWUP_WEEKS8\" INTEGER," + // 99: followupWeeks8
                "\"FOLLOWUP_DAYS8\" INTEGER," + // 100: followupDays8
                "\"FOLLOWUP_ORG_ID8\" TEXT," + // 101: followupOrgId8
                "\"FOLLOWUP_DATE9\" INTEGER," + // 102: followupDate9
                "\"FOLLOWUP_WEEKS9\" INTEGER," + // 103: followupWeeks9
                "\"FOLLOWUP_DAYS9\" INTEGER," + // 104: followupDays9
                "\"FOLLOWUP_ORG_ID9\" TEXT," + // 105: followupOrgId9
                "\"FOLLOWUP_DATE10\" INTEGER," + // 106: followupDate10
                "\"FOLLOWUP_WEEKS10\" INTEGER," + // 107: followupWeeks10
                "\"FOLLOWUP_DAYS10\" INTEGER," + // 108: followupDays10
                "\"FOLLOWUP_ORG_ID10\" TEXT," + // 109: followupOrgId10
                "\"ANEMIA\" TEXT," + // 110: anemia
                "\"HIV_EXAMINATION\" TEXT," + // 111: hivExamination
                "\"HEPATITIS_CHECK\" TEXT," + // 112: hepatitisCheck
                "\"SYPHILIS_EXAMINATION\" TEXT," + // 113: syphilisExamination
                "\"HR_SCORE_EARLY\" INTEGER," + // 114: hrScoreEarly
                "\"HR_SCORE_MIDDLE\" INTEGER," + // 115: hrScoreMiddle
                "\"HR_SCORE_EARLY_LATER\" INTEGER," + // 116: hrScoreEarlyLater
                "\"DOWNS_SYNDROME\" TEXT," + // 117: downsSyndrome
                "\"PRENATAL_DIAGNOSIS\" TEXT," + // 118: prenatalDiagnosis
                "\"MATERNAL_CHILDBIRTH_DATE\" INTEGER," + // 119: maternalChildbirthDate
                "\"MATERNAL_WEEKS\" INTEGER," + // 120: maternalWeeks
                "\"MATERNAL_DAYS\" INTEGER," + // 121: maternalDays
                "\"MATERNAL_HOSPITAL\" TEXT," + // 122: maternalHospital
                "\"LABOR_WAY_VALUE\" TEXT," + // 123: laborWayValue
                "\"PERINATAL_BABY_SCORE\" TEXT," + // 124: perinatalBabyScore
                "\"PERINATAL_BABY_WEIGHT\" TEXT," + // 125: perinatalBabyWeight
                "\"POSTPARTUM_FOLLOWUP_DATE\" INTEGER," + // 126: postpartumFollowupDate
                "\"POSTPARTUM_POSTPARTUM_MOM\" TEXT," + // 127: postpartumPostpartumMom
                "\"POSTPARTUM_ORG_ID\" TEXT," + // 128: postpartumOrgId
                "\"LAST_FOLLOWUP_DATE\" INTEGER," + // 129: lastFollowupDate
                "\"LAST_FOLLOWUP_RESULT\" TEXT," + // 130: lastFollowupResult
                "\"LAST_FOLLOWUP_ORG_ID\" TEXT," + // 131: lastFollowupOrgId
                "\"BABY_SEX\" TEXT," + // 132: babySex
                "\"FOLLOWUP_TYPE\" TEXT," + // 133: followupType
                "\"LEDGER_REMARK\" TEXT," + // 134: ledgerRemark
                "\"CLOSE_CASE_CODE\" TEXT," + // 135: closeCaseCode
                "\"CLOSE_CASE_REASON\" TEXT," + // 136: closeCaseReason
                "\"WORK_UNIT\" TEXT);"); // 137: workUnit
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"MATERNAL_REGISTER\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, MaternalRegister entity) {
        stmt.clearBindings();
 
        String maternalRegisterId = entity.getMaternalRegisterId();
        if (maternalRegisterId != null) {
            stmt.bindString(1, maternalRegisterId);
        }
 
        String maternalInfoId = entity.getMaternalInfoId();
        if (maternalInfoId != null) {
            stmt.bindString(2, maternalInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(3, personInfoId);
        }
 
        String maternalInfoNo = entity.getMaternalInfoNo();
        if (maternalInfoNo != null) {
            stmt.bindString(4, maternalInfoNo);
        }
 
        Integer pregnantCount = entity.getPregnantCount();
        if (pregnantCount != null) {
            stmt.bindLong(5, pregnantCount);
        }
 
        String telNo = entity.getTelNo();
        if (telNo != null) {
            stmt.bindString(6, telNo);
        }
 
        String household = entity.getHousehold();
        if (household != null) {
            stmt.bindString(7, household);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(8, name);
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(9, age);
        }
 
        Integer husbandAge = entity.getHusbandAge();
        if (husbandAge != null) {
            stmt.bindLong(10, husbandAge);
        }
 
        String husbandPersonInfoId = entity.getHusbandPersonInfoId();
        if (husbandPersonInfoId != null) {
            stmt.bindString(11, husbandPersonInfoId);
        }
 
        String husbandName = entity.getHusbandName();
        if (husbandName != null) {
            stmt.bindString(12, husbandName);
        }
 
        String husbandUnit = entity.getHusbandUnit();
        if (husbandUnit != null) {
            stmt.bindString(13, husbandUnit);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(14, address);
        }
 
        String husbandTelNo = entity.getHusbandTelNo();
        if (husbandTelNo != null) {
            stmt.bindString(15, husbandTelNo);
        }
 
        Integer mensesPeriod = entity.getMensesPeriod();
        if (mensesPeriod != null) {
            stmt.bindLong(16, mensesPeriod);
        }
 
        String mensesMeasure = entity.getMensesMeasure();
        if (mensesMeasure != null) {
            stmt.bindString(17, mensesMeasure);
        }
 
        java.util.Date mensesLastDate = entity.getMensesLastDate();
        if (mensesLastDate != null) {
            stmt.bindLong(18, mensesLastDate.getTime());
        }
 
        java.util.Date expectedChildBirthday = entity.getExpectedChildBirthday();
        if (expectedChildBirthday != null) {
            stmt.bindLong(19, expectedChildBirthday.getTime());
        }
 
        Integer childrenCount = entity.getChildrenCount();
        if (childrenCount != null) {
            stmt.bindLong(20, childrenCount);
        }
 
        String buildingManualCode = entity.getBuildingManualCode();
        if (buildingManualCode != null) {
            stmt.bindString(21, buildingManualCode);
        }
 
        java.util.Date buildingManualDate = entity.getBuildingManualDate();
        if (buildingManualDate != null) {
            stmt.bindLong(22, buildingManualDate.getTime());
        }
 
        Integer spontaneousAbortionCount = entity.getSpontaneousAbortionCount();
        if (spontaneousAbortionCount != null) {
            stmt.bindLong(23, spontaneousAbortionCount);
        }
 
        Integer artificialAbortionCount = entity.getArtificialAbortionCount();
        if (artificialAbortionCount != null) {
            stmt.bindLong(24, artificialAbortionCount);
        }
 
        Integer drugAbortionCount = entity.getDrugAbortionCount();
        if (drugAbortionCount != null) {
            stmt.bindLong(25, drugAbortionCount);
        }
 
        String pregnancyInplan = entity.getPregnancyInplan();
        if (pregnancyInplan != null) {
            stmt.bindString(26, pregnancyInplan);
        }
 
        java.util.Date pregnancyLasttime = entity.getPregnancyLasttime();
        if (pregnancyLasttime != null) {
            stmt.bindLong(27, pregnancyLasttime.getTime());
        }
 
        Integer gravidity = entity.getGravidity();
        if (gravidity != null) {
            stmt.bindLong(28, gravidity);
        }
 
        Integer parity = entity.getParity();
        if (parity != null) {
            stmt.bindLong(29, parity);
        }
 
        Double height = entity.getHeight();
        if (height != null) {
            stmt.bindDouble(30, height);
        }
 
        Double weight = entity.getWeight();
        if (weight != null) {
            stmt.bindDouble(31, weight);
        }
 
        Double bmi = entity.getBmi();
        if (bmi != null) {
            stmt.bindDouble(32, bmi);
        }
 
        Integer sbp = entity.getSbp();
        if (sbp != null) {
            stmt.bindLong(33, sbp);
        }
 
        Integer dbp = entity.getDbp();
        if (dbp != null) {
            stmt.bindLong(34, dbp);
        }
 
        String remark = entity.getRemark();
        if (remark != null) {
            stmt.bindString(35, remark);
        }
 
        String caseStatus = entity.getCaseStatus();
        if (caseStatus != null) {
            stmt.bindString(36, caseStatus);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(37, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(38, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(39, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(40, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(41, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(42, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(43, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(44, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(45, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(46, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(47, modifiedTime.getTime());
        }
 
        Integer buildWeeks = entity.getBuildWeeks();
        if (buildWeeks != null) {
            stmt.bindLong(48, buildWeeks);
        }
 
        Integer currentWeeks = entity.getCurrentWeeks();
        if (currentWeeks != null) {
            stmt.bindLong(49, currentWeeks);
        }
 
        Integer buildDays = entity.getBuildDays();
        if (buildDays != null) {
            stmt.bindLong(50, buildDays);
        }
 
        java.util.Date firstFollowupDate = entity.getFirstFollowupDate();
        if (firstFollowupDate != null) {
            stmt.bindLong(51, firstFollowupDate.getTime());
        }
 
        Integer firstFollowupWeeks = entity.getFirstFollowupWeeks();
        if (firstFollowupWeeks != null) {
            stmt.bindLong(52, firstFollowupWeeks);
        }
 
        Integer firstFollowupDays = entity.getFirstFollowupDays();
        if (firstFollowupDays != null) {
            stmt.bindLong(53, firstFollowupDays);
        }
 
        String firstFollowupOrgId = entity.getFirstFollowupOrgId();
        if (firstFollowupOrgId != null) {
            stmt.bindString(54, firstFollowupOrgId);
        }
 
        java.util.Date secondFollowupDate = entity.getSecondFollowupDate();
        if (secondFollowupDate != null) {
            stmt.bindLong(55, secondFollowupDate.getTime());
        }
 
        Integer secondFollowupWeeks = entity.getSecondFollowupWeeks();
        if (secondFollowupWeeks != null) {
            stmt.bindLong(56, secondFollowupWeeks);
        }
 
        Integer secondFollowupDays = entity.getSecondFollowupDays();
        if (secondFollowupDays != null) {
            stmt.bindLong(57, secondFollowupDays);
        }
 
        String secondFollowupOrgId = entity.getSecondFollowupOrgId();
        if (secondFollowupOrgId != null) {
            stmt.bindString(58, secondFollowupOrgId);
        }
 
        java.util.Date thirdFollowupDate = entity.getThirdFollowupDate();
        if (thirdFollowupDate != null) {
            stmt.bindLong(59, thirdFollowupDate.getTime());
        }
 
        Integer thirdFollowupWeeks = entity.getThirdFollowupWeeks();
        if (thirdFollowupWeeks != null) {
            stmt.bindLong(60, thirdFollowupWeeks);
        }
 
        Integer thirdFollowupDays = entity.getThirdFollowupDays();
        if (thirdFollowupDays != null) {
            stmt.bindLong(61, thirdFollowupDays);
        }
 
        String thirdFollowupOrgId = entity.getThirdFollowupOrgId();
        if (thirdFollowupOrgId != null) {
            stmt.bindString(62, thirdFollowupOrgId);
        }
 
        java.util.Date fourthFollowupDate = entity.getFourthFollowupDate();
        if (fourthFollowupDate != null) {
            stmt.bindLong(63, fourthFollowupDate.getTime());
        }
 
        Integer fourthFollowupWeeks = entity.getFourthFollowupWeeks();
        if (fourthFollowupWeeks != null) {
            stmt.bindLong(64, fourthFollowupWeeks);
        }
 
        Integer fourthFollowupDays = entity.getFourthFollowupDays();
        if (fourthFollowupDays != null) {
            stmt.bindLong(65, fourthFollowupDays);
        }
 
        String fourthFollowupOrgId = entity.getFourthFollowupOrgId();
        if (fourthFollowupOrgId != null) {
            stmt.bindString(66, fourthFollowupOrgId);
        }
 
        java.util.Date fifthFollowupDate = entity.getFifthFollowupDate();
        if (fifthFollowupDate != null) {
            stmt.bindLong(67, fifthFollowupDate.getTime());
        }
 
        Integer fifthFollowupWeeks = entity.getFifthFollowupWeeks();
        if (fifthFollowupWeeks != null) {
            stmt.bindLong(68, fifthFollowupWeeks);
        }
 
        Integer fifthFollowupDays = entity.getFifthFollowupDays();
        if (fifthFollowupDays != null) {
            stmt.bindLong(69, fifthFollowupDays);
        }
 
        String fifthFollowupOrgId = entity.getFifthFollowupOrgId();
        if (fifthFollowupOrgId != null) {
            stmt.bindString(70, fifthFollowupOrgId);
        }
 
        java.util.Date followupDate1 = entity.getFollowupDate1();
        if (followupDate1 != null) {
            stmt.bindLong(71, followupDate1.getTime());
        }
 
        Integer followupWeeks1 = entity.getFollowupWeeks1();
        if (followupWeeks1 != null) {
            stmt.bindLong(72, followupWeeks1);
        }
 
        Integer followupDays1 = entity.getFollowupDays1();
        if (followupDays1 != null) {
            stmt.bindLong(73, followupDays1);
        }
 
        String followupOrgId1 = entity.getFollowupOrgId1();
        if (followupOrgId1 != null) {
            stmt.bindString(74, followupOrgId1);
        }
 
        java.util.Date followupDate2 = entity.getFollowupDate2();
        if (followupDate2 != null) {
            stmt.bindLong(75, followupDate2.getTime());
        }
 
        Integer followupWeeks2 = entity.getFollowupWeeks2();
        if (followupWeeks2 != null) {
            stmt.bindLong(76, followupWeeks2);
        }
 
        Integer followupDays2 = entity.getFollowupDays2();
        if (followupDays2 != null) {
            stmt.bindLong(77, followupDays2);
        }
 
        String followupOrgId2 = entity.getFollowupOrgId2();
        if (followupOrgId2 != null) {
            stmt.bindString(78, followupOrgId2);
        }
 
        java.util.Date followupDate3 = entity.getFollowupDate3();
        if (followupDate3 != null) {
            stmt.bindLong(79, followupDate3.getTime());
        }
 
        Integer followupWeeks3 = entity.getFollowupWeeks3();
        if (followupWeeks3 != null) {
            stmt.bindLong(80, followupWeeks3);
        }
 
        Integer followupDays3 = entity.getFollowupDays3();
        if (followupDays3 != null) {
            stmt.bindLong(81, followupDays3);
        }
 
        String followupOrgId3 = entity.getFollowupOrgId3();
        if (followupOrgId3 != null) {
            stmt.bindString(82, followupOrgId3);
        }
 
        java.util.Date followupDate4 = entity.getFollowupDate4();
        if (followupDate4 != null) {
            stmt.bindLong(83, followupDate4.getTime());
        }
 
        Integer followupWeeks4 = entity.getFollowupWeeks4();
        if (followupWeeks4 != null) {
            stmt.bindLong(84, followupWeeks4);
        }
 
        Integer followupDays4 = entity.getFollowupDays4();
        if (followupDays4 != null) {
            stmt.bindLong(85, followupDays4);
        }
 
        String followupOrgId4 = entity.getFollowupOrgId4();
        if (followupOrgId4 != null) {
            stmt.bindString(86, followupOrgId4);
        }
 
        java.util.Date followupDate5 = entity.getFollowupDate5();
        if (followupDate5 != null) {
            stmt.bindLong(87, followupDate5.getTime());
        }
 
        Integer followupWeeks5 = entity.getFollowupWeeks5();
        if (followupWeeks5 != null) {
            stmt.bindLong(88, followupWeeks5);
        }
 
        Integer followupDays5 = entity.getFollowupDays5();
        if (followupDays5 != null) {
            stmt.bindLong(89, followupDays5);
        }
 
        String followupOrgId5 = entity.getFollowupOrgId5();
        if (followupOrgId5 != null) {
            stmt.bindString(90, followupOrgId5);
        }
 
        java.util.Date followupDate6 = entity.getFollowupDate6();
        if (followupDate6 != null) {
            stmt.bindLong(91, followupDate6.getTime());
        }
 
        Integer followupWeeks6 = entity.getFollowupWeeks6();
        if (followupWeeks6 != null) {
            stmt.bindLong(92, followupWeeks6);
        }
 
        Integer followupDays6 = entity.getFollowupDays6();
        if (followupDays6 != null) {
            stmt.bindLong(93, followupDays6);
        }
 
        String followupOrgId6 = entity.getFollowupOrgId6();
        if (followupOrgId6 != null) {
            stmt.bindString(94, followupOrgId6);
        }
 
        java.util.Date followupDate7 = entity.getFollowupDate7();
        if (followupDate7 != null) {
            stmt.bindLong(95, followupDate7.getTime());
        }
 
        Integer followupWeeks7 = entity.getFollowupWeeks7();
        if (followupWeeks7 != null) {
            stmt.bindLong(96, followupWeeks7);
        }
 
        Integer followupDays7 = entity.getFollowupDays7();
        if (followupDays7 != null) {
            stmt.bindLong(97, followupDays7);
        }
 
        String followupOrgId7 = entity.getFollowupOrgId7();
        if (followupOrgId7 != null) {
            stmt.bindString(98, followupOrgId7);
        }
 
        java.util.Date followupDate8 = entity.getFollowupDate8();
        if (followupDate8 != null) {
            stmt.bindLong(99, followupDate8.getTime());
        }
 
        Integer followupWeeks8 = entity.getFollowupWeeks8();
        if (followupWeeks8 != null) {
            stmt.bindLong(100, followupWeeks8);
        }
 
        Integer followupDays8 = entity.getFollowupDays8();
        if (followupDays8 != null) {
            stmt.bindLong(101, followupDays8);
        }
 
        String followupOrgId8 = entity.getFollowupOrgId8();
        if (followupOrgId8 != null) {
            stmt.bindString(102, followupOrgId8);
        }
 
        java.util.Date followupDate9 = entity.getFollowupDate9();
        if (followupDate9 != null) {
            stmt.bindLong(103, followupDate9.getTime());
        }
 
        Integer followupWeeks9 = entity.getFollowupWeeks9();
        if (followupWeeks9 != null) {
            stmt.bindLong(104, followupWeeks9);
        }
 
        Integer followupDays9 = entity.getFollowupDays9();
        if (followupDays9 != null) {
            stmt.bindLong(105, followupDays9);
        }
 
        String followupOrgId9 = entity.getFollowupOrgId9();
        if (followupOrgId9 != null) {
            stmt.bindString(106, followupOrgId9);
        }
 
        java.util.Date followupDate10 = entity.getFollowupDate10();
        if (followupDate10 != null) {
            stmt.bindLong(107, followupDate10.getTime());
        }
 
        Integer followupWeeks10 = entity.getFollowupWeeks10();
        if (followupWeeks10 != null) {
            stmt.bindLong(108, followupWeeks10);
        }
 
        Integer followupDays10 = entity.getFollowupDays10();
        if (followupDays10 != null) {
            stmt.bindLong(109, followupDays10);
        }
 
        String followupOrgId10 = entity.getFollowupOrgId10();
        if (followupOrgId10 != null) {
            stmt.bindString(110, followupOrgId10);
        }
 
        String anemia = entity.getAnemia();
        if (anemia != null) {
            stmt.bindString(111, anemia);
        }
 
        String hivExamination = entity.getHivExamination();
        if (hivExamination != null) {
            stmt.bindString(112, hivExamination);
        }
 
        String hepatitisCheck = entity.getHepatitisCheck();
        if (hepatitisCheck != null) {
            stmt.bindString(113, hepatitisCheck);
        }
 
        String syphilisExamination = entity.getSyphilisExamination();
        if (syphilisExamination != null) {
            stmt.bindString(114, syphilisExamination);
        }
 
        Integer hrScoreEarly = entity.getHrScoreEarly();
        if (hrScoreEarly != null) {
            stmt.bindLong(115, hrScoreEarly);
        }
 
        Integer hrScoreMiddle = entity.getHrScoreMiddle();
        if (hrScoreMiddle != null) {
            stmt.bindLong(116, hrScoreMiddle);
        }
 
        Integer hrScoreEarlyLater = entity.getHrScoreEarlyLater();
        if (hrScoreEarlyLater != null) {
            stmt.bindLong(117, hrScoreEarlyLater);
        }
 
        String downsSyndrome = entity.getDownsSyndrome();
        if (downsSyndrome != null) {
            stmt.bindString(118, downsSyndrome);
        }
 
        String prenatalDiagnosis = entity.getPrenatalDiagnosis();
        if (prenatalDiagnosis != null) {
            stmt.bindString(119, prenatalDiagnosis);
        }
 
        java.util.Date maternalChildbirthDate = entity.getMaternalChildbirthDate();
        if (maternalChildbirthDate != null) {
            stmt.bindLong(120, maternalChildbirthDate.getTime());
        }
 
        Integer maternalWeeks = entity.getMaternalWeeks();
        if (maternalWeeks != null) {
            stmt.bindLong(121, maternalWeeks);
        }
 
        Integer maternalDays = entity.getMaternalDays();
        if (maternalDays != null) {
            stmt.bindLong(122, maternalDays);
        }
 
        String maternalHospital = entity.getMaternalHospital();
        if (maternalHospital != null) {
            stmt.bindString(123, maternalHospital);
        }
 
        String laborWayValue = entity.getLaborWayValue();
        if (laborWayValue != null) {
            stmt.bindString(124, laborWayValue);
        }
 
        String perinatalBabyScore = entity.getPerinatalBabyScore();
        if (perinatalBabyScore != null) {
            stmt.bindString(125, perinatalBabyScore);
        }
 
        String perinatalBabyWeight = entity.getPerinatalBabyWeight();
        if (perinatalBabyWeight != null) {
            stmt.bindString(126, perinatalBabyWeight);
        }
 
        java.util.Date postpartumFollowupDate = entity.getPostpartumFollowupDate();
        if (postpartumFollowupDate != null) {
            stmt.bindLong(127, postpartumFollowupDate.getTime());
        }
 
        String postpartumPostpartumMom = entity.getPostpartumPostpartumMom();
        if (postpartumPostpartumMom != null) {
            stmt.bindString(128, postpartumPostpartumMom);
        }
 
        String postpartumOrgId = entity.getPostpartumOrgId();
        if (postpartumOrgId != null) {
            stmt.bindString(129, postpartumOrgId);
        }
 
        java.util.Date lastFollowupDate = entity.getLastFollowupDate();
        if (lastFollowupDate != null) {
            stmt.bindLong(130, lastFollowupDate.getTime());
        }
 
        String lastFollowupResult = entity.getLastFollowupResult();
        if (lastFollowupResult != null) {
            stmt.bindString(131, lastFollowupResult);
        }
 
        String lastFollowupOrgId = entity.getLastFollowupOrgId();
        if (lastFollowupOrgId != null) {
            stmt.bindString(132, lastFollowupOrgId);
        }
 
        String babySex = entity.getBabySex();
        if (babySex != null) {
            stmt.bindString(133, babySex);
        }
 
        String followupType = entity.getFollowupType();
        if (followupType != null) {
            stmt.bindString(134, followupType);
        }
 
        String ledgerRemark = entity.getLedgerRemark();
        if (ledgerRemark != null) {
            stmt.bindString(135, ledgerRemark);
        }
 
        String closeCaseCode = entity.getCloseCaseCode();
        if (closeCaseCode != null) {
            stmt.bindString(136, closeCaseCode);
        }
 
        String closeCaseReason = entity.getCloseCaseReason();
        if (closeCaseReason != null) {
            stmt.bindString(137, closeCaseReason);
        }
 
        String workUnit = entity.getWorkUnit();
        if (workUnit != null) {
            stmt.bindString(138, workUnit);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, MaternalRegister entity) {
        stmt.clearBindings();
 
        String maternalRegisterId = entity.getMaternalRegisterId();
        if (maternalRegisterId != null) {
            stmt.bindString(1, maternalRegisterId);
        }
 
        String maternalInfoId = entity.getMaternalInfoId();
        if (maternalInfoId != null) {
            stmt.bindString(2, maternalInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(3, personInfoId);
        }
 
        String maternalInfoNo = entity.getMaternalInfoNo();
        if (maternalInfoNo != null) {
            stmt.bindString(4, maternalInfoNo);
        }
 
        Integer pregnantCount = entity.getPregnantCount();
        if (pregnantCount != null) {
            stmt.bindLong(5, pregnantCount);
        }
 
        String telNo = entity.getTelNo();
        if (telNo != null) {
            stmt.bindString(6, telNo);
        }
 
        String household = entity.getHousehold();
        if (household != null) {
            stmt.bindString(7, household);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(8, name);
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(9, age);
        }
 
        Integer husbandAge = entity.getHusbandAge();
        if (husbandAge != null) {
            stmt.bindLong(10, husbandAge);
        }
 
        String husbandPersonInfoId = entity.getHusbandPersonInfoId();
        if (husbandPersonInfoId != null) {
            stmt.bindString(11, husbandPersonInfoId);
        }
 
        String husbandName = entity.getHusbandName();
        if (husbandName != null) {
            stmt.bindString(12, husbandName);
        }
 
        String husbandUnit = entity.getHusbandUnit();
        if (husbandUnit != null) {
            stmt.bindString(13, husbandUnit);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(14, address);
        }
 
        String husbandTelNo = entity.getHusbandTelNo();
        if (husbandTelNo != null) {
            stmt.bindString(15, husbandTelNo);
        }
 
        Integer mensesPeriod = entity.getMensesPeriod();
        if (mensesPeriod != null) {
            stmt.bindLong(16, mensesPeriod);
        }
 
        String mensesMeasure = entity.getMensesMeasure();
        if (mensesMeasure != null) {
            stmt.bindString(17, mensesMeasure);
        }
 
        java.util.Date mensesLastDate = entity.getMensesLastDate();
        if (mensesLastDate != null) {
            stmt.bindLong(18, mensesLastDate.getTime());
        }
 
        java.util.Date expectedChildBirthday = entity.getExpectedChildBirthday();
        if (expectedChildBirthday != null) {
            stmt.bindLong(19, expectedChildBirthday.getTime());
        }
 
        Integer childrenCount = entity.getChildrenCount();
        if (childrenCount != null) {
            stmt.bindLong(20, childrenCount);
        }
 
        String buildingManualCode = entity.getBuildingManualCode();
        if (buildingManualCode != null) {
            stmt.bindString(21, buildingManualCode);
        }
 
        java.util.Date buildingManualDate = entity.getBuildingManualDate();
        if (buildingManualDate != null) {
            stmt.bindLong(22, buildingManualDate.getTime());
        }
 
        Integer spontaneousAbortionCount = entity.getSpontaneousAbortionCount();
        if (spontaneousAbortionCount != null) {
            stmt.bindLong(23, spontaneousAbortionCount);
        }
 
        Integer artificialAbortionCount = entity.getArtificialAbortionCount();
        if (artificialAbortionCount != null) {
            stmt.bindLong(24, artificialAbortionCount);
        }
 
        Integer drugAbortionCount = entity.getDrugAbortionCount();
        if (drugAbortionCount != null) {
            stmt.bindLong(25, drugAbortionCount);
        }
 
        String pregnancyInplan = entity.getPregnancyInplan();
        if (pregnancyInplan != null) {
            stmt.bindString(26, pregnancyInplan);
        }
 
        java.util.Date pregnancyLasttime = entity.getPregnancyLasttime();
        if (pregnancyLasttime != null) {
            stmt.bindLong(27, pregnancyLasttime.getTime());
        }
 
        Integer gravidity = entity.getGravidity();
        if (gravidity != null) {
            stmt.bindLong(28, gravidity);
        }
 
        Integer parity = entity.getParity();
        if (parity != null) {
            stmt.bindLong(29, parity);
        }
 
        Double height = entity.getHeight();
        if (height != null) {
            stmt.bindDouble(30, height);
        }
 
        Double weight = entity.getWeight();
        if (weight != null) {
            stmt.bindDouble(31, weight);
        }
 
        Double bmi = entity.getBmi();
        if (bmi != null) {
            stmt.bindDouble(32, bmi);
        }
 
        Integer sbp = entity.getSbp();
        if (sbp != null) {
            stmt.bindLong(33, sbp);
        }
 
        Integer dbp = entity.getDbp();
        if (dbp != null) {
            stmt.bindLong(34, dbp);
        }
 
        String remark = entity.getRemark();
        if (remark != null) {
            stmt.bindString(35, remark);
        }
 
        String caseStatus = entity.getCaseStatus();
        if (caseStatus != null) {
            stmt.bindString(36, caseStatus);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(37, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(38, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(39, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(40, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(41, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(42, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(43, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(44, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(45, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(46, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(47, modifiedTime.getTime());
        }
 
        Integer buildWeeks = entity.getBuildWeeks();
        if (buildWeeks != null) {
            stmt.bindLong(48, buildWeeks);
        }
 
        Integer currentWeeks = entity.getCurrentWeeks();
        if (currentWeeks != null) {
            stmt.bindLong(49, currentWeeks);
        }
 
        Integer buildDays = entity.getBuildDays();
        if (buildDays != null) {
            stmt.bindLong(50, buildDays);
        }
 
        java.util.Date firstFollowupDate = entity.getFirstFollowupDate();
        if (firstFollowupDate != null) {
            stmt.bindLong(51, firstFollowupDate.getTime());
        }
 
        Integer firstFollowupWeeks = entity.getFirstFollowupWeeks();
        if (firstFollowupWeeks != null) {
            stmt.bindLong(52, firstFollowupWeeks);
        }
 
        Integer firstFollowupDays = entity.getFirstFollowupDays();
        if (firstFollowupDays != null) {
            stmt.bindLong(53, firstFollowupDays);
        }
 
        String firstFollowupOrgId = entity.getFirstFollowupOrgId();
        if (firstFollowupOrgId != null) {
            stmt.bindString(54, firstFollowupOrgId);
        }
 
        java.util.Date secondFollowupDate = entity.getSecondFollowupDate();
        if (secondFollowupDate != null) {
            stmt.bindLong(55, secondFollowupDate.getTime());
        }
 
        Integer secondFollowupWeeks = entity.getSecondFollowupWeeks();
        if (secondFollowupWeeks != null) {
            stmt.bindLong(56, secondFollowupWeeks);
        }
 
        Integer secondFollowupDays = entity.getSecondFollowupDays();
        if (secondFollowupDays != null) {
            stmt.bindLong(57, secondFollowupDays);
        }
 
        String secondFollowupOrgId = entity.getSecondFollowupOrgId();
        if (secondFollowupOrgId != null) {
            stmt.bindString(58, secondFollowupOrgId);
        }
 
        java.util.Date thirdFollowupDate = entity.getThirdFollowupDate();
        if (thirdFollowupDate != null) {
            stmt.bindLong(59, thirdFollowupDate.getTime());
        }
 
        Integer thirdFollowupWeeks = entity.getThirdFollowupWeeks();
        if (thirdFollowupWeeks != null) {
            stmt.bindLong(60, thirdFollowupWeeks);
        }
 
        Integer thirdFollowupDays = entity.getThirdFollowupDays();
        if (thirdFollowupDays != null) {
            stmt.bindLong(61, thirdFollowupDays);
        }
 
        String thirdFollowupOrgId = entity.getThirdFollowupOrgId();
        if (thirdFollowupOrgId != null) {
            stmt.bindString(62, thirdFollowupOrgId);
        }
 
        java.util.Date fourthFollowupDate = entity.getFourthFollowupDate();
        if (fourthFollowupDate != null) {
            stmt.bindLong(63, fourthFollowupDate.getTime());
        }
 
        Integer fourthFollowupWeeks = entity.getFourthFollowupWeeks();
        if (fourthFollowupWeeks != null) {
            stmt.bindLong(64, fourthFollowupWeeks);
        }
 
        Integer fourthFollowupDays = entity.getFourthFollowupDays();
        if (fourthFollowupDays != null) {
            stmt.bindLong(65, fourthFollowupDays);
        }
 
        String fourthFollowupOrgId = entity.getFourthFollowupOrgId();
        if (fourthFollowupOrgId != null) {
            stmt.bindString(66, fourthFollowupOrgId);
        }
 
        java.util.Date fifthFollowupDate = entity.getFifthFollowupDate();
        if (fifthFollowupDate != null) {
            stmt.bindLong(67, fifthFollowupDate.getTime());
        }
 
        Integer fifthFollowupWeeks = entity.getFifthFollowupWeeks();
        if (fifthFollowupWeeks != null) {
            stmt.bindLong(68, fifthFollowupWeeks);
        }
 
        Integer fifthFollowupDays = entity.getFifthFollowupDays();
        if (fifthFollowupDays != null) {
            stmt.bindLong(69, fifthFollowupDays);
        }
 
        String fifthFollowupOrgId = entity.getFifthFollowupOrgId();
        if (fifthFollowupOrgId != null) {
            stmt.bindString(70, fifthFollowupOrgId);
        }
 
        java.util.Date followupDate1 = entity.getFollowupDate1();
        if (followupDate1 != null) {
            stmt.bindLong(71, followupDate1.getTime());
        }
 
        Integer followupWeeks1 = entity.getFollowupWeeks1();
        if (followupWeeks1 != null) {
            stmt.bindLong(72, followupWeeks1);
        }
 
        Integer followupDays1 = entity.getFollowupDays1();
        if (followupDays1 != null) {
            stmt.bindLong(73, followupDays1);
        }
 
        String followupOrgId1 = entity.getFollowupOrgId1();
        if (followupOrgId1 != null) {
            stmt.bindString(74, followupOrgId1);
        }
 
        java.util.Date followupDate2 = entity.getFollowupDate2();
        if (followupDate2 != null) {
            stmt.bindLong(75, followupDate2.getTime());
        }
 
        Integer followupWeeks2 = entity.getFollowupWeeks2();
        if (followupWeeks2 != null) {
            stmt.bindLong(76, followupWeeks2);
        }
 
        Integer followupDays2 = entity.getFollowupDays2();
        if (followupDays2 != null) {
            stmt.bindLong(77, followupDays2);
        }
 
        String followupOrgId2 = entity.getFollowupOrgId2();
        if (followupOrgId2 != null) {
            stmt.bindString(78, followupOrgId2);
        }
 
        java.util.Date followupDate3 = entity.getFollowupDate3();
        if (followupDate3 != null) {
            stmt.bindLong(79, followupDate3.getTime());
        }
 
        Integer followupWeeks3 = entity.getFollowupWeeks3();
        if (followupWeeks3 != null) {
            stmt.bindLong(80, followupWeeks3);
        }
 
        Integer followupDays3 = entity.getFollowupDays3();
        if (followupDays3 != null) {
            stmt.bindLong(81, followupDays3);
        }
 
        String followupOrgId3 = entity.getFollowupOrgId3();
        if (followupOrgId3 != null) {
            stmt.bindString(82, followupOrgId3);
        }
 
        java.util.Date followupDate4 = entity.getFollowupDate4();
        if (followupDate4 != null) {
            stmt.bindLong(83, followupDate4.getTime());
        }
 
        Integer followupWeeks4 = entity.getFollowupWeeks4();
        if (followupWeeks4 != null) {
            stmt.bindLong(84, followupWeeks4);
        }
 
        Integer followupDays4 = entity.getFollowupDays4();
        if (followupDays4 != null) {
            stmt.bindLong(85, followupDays4);
        }
 
        String followupOrgId4 = entity.getFollowupOrgId4();
        if (followupOrgId4 != null) {
            stmt.bindString(86, followupOrgId4);
        }
 
        java.util.Date followupDate5 = entity.getFollowupDate5();
        if (followupDate5 != null) {
            stmt.bindLong(87, followupDate5.getTime());
        }
 
        Integer followupWeeks5 = entity.getFollowupWeeks5();
        if (followupWeeks5 != null) {
            stmt.bindLong(88, followupWeeks5);
        }
 
        Integer followupDays5 = entity.getFollowupDays5();
        if (followupDays5 != null) {
            stmt.bindLong(89, followupDays5);
        }
 
        String followupOrgId5 = entity.getFollowupOrgId5();
        if (followupOrgId5 != null) {
            stmt.bindString(90, followupOrgId5);
        }
 
        java.util.Date followupDate6 = entity.getFollowupDate6();
        if (followupDate6 != null) {
            stmt.bindLong(91, followupDate6.getTime());
        }
 
        Integer followupWeeks6 = entity.getFollowupWeeks6();
        if (followupWeeks6 != null) {
            stmt.bindLong(92, followupWeeks6);
        }
 
        Integer followupDays6 = entity.getFollowupDays6();
        if (followupDays6 != null) {
            stmt.bindLong(93, followupDays6);
        }
 
        String followupOrgId6 = entity.getFollowupOrgId6();
        if (followupOrgId6 != null) {
            stmt.bindString(94, followupOrgId6);
        }
 
        java.util.Date followupDate7 = entity.getFollowupDate7();
        if (followupDate7 != null) {
            stmt.bindLong(95, followupDate7.getTime());
        }
 
        Integer followupWeeks7 = entity.getFollowupWeeks7();
        if (followupWeeks7 != null) {
            stmt.bindLong(96, followupWeeks7);
        }
 
        Integer followupDays7 = entity.getFollowupDays7();
        if (followupDays7 != null) {
            stmt.bindLong(97, followupDays7);
        }
 
        String followupOrgId7 = entity.getFollowupOrgId7();
        if (followupOrgId7 != null) {
            stmt.bindString(98, followupOrgId7);
        }
 
        java.util.Date followupDate8 = entity.getFollowupDate8();
        if (followupDate8 != null) {
            stmt.bindLong(99, followupDate8.getTime());
        }
 
        Integer followupWeeks8 = entity.getFollowupWeeks8();
        if (followupWeeks8 != null) {
            stmt.bindLong(100, followupWeeks8);
        }
 
        Integer followupDays8 = entity.getFollowupDays8();
        if (followupDays8 != null) {
            stmt.bindLong(101, followupDays8);
        }
 
        String followupOrgId8 = entity.getFollowupOrgId8();
        if (followupOrgId8 != null) {
            stmt.bindString(102, followupOrgId8);
        }
 
        java.util.Date followupDate9 = entity.getFollowupDate9();
        if (followupDate9 != null) {
            stmt.bindLong(103, followupDate9.getTime());
        }
 
        Integer followupWeeks9 = entity.getFollowupWeeks9();
        if (followupWeeks9 != null) {
            stmt.bindLong(104, followupWeeks9);
        }
 
        Integer followupDays9 = entity.getFollowupDays9();
        if (followupDays9 != null) {
            stmt.bindLong(105, followupDays9);
        }
 
        String followupOrgId9 = entity.getFollowupOrgId9();
        if (followupOrgId9 != null) {
            stmt.bindString(106, followupOrgId9);
        }
 
        java.util.Date followupDate10 = entity.getFollowupDate10();
        if (followupDate10 != null) {
            stmt.bindLong(107, followupDate10.getTime());
        }
 
        Integer followupWeeks10 = entity.getFollowupWeeks10();
        if (followupWeeks10 != null) {
            stmt.bindLong(108, followupWeeks10);
        }
 
        Integer followupDays10 = entity.getFollowupDays10();
        if (followupDays10 != null) {
            stmt.bindLong(109, followupDays10);
        }
 
        String followupOrgId10 = entity.getFollowupOrgId10();
        if (followupOrgId10 != null) {
            stmt.bindString(110, followupOrgId10);
        }
 
        String anemia = entity.getAnemia();
        if (anemia != null) {
            stmt.bindString(111, anemia);
        }
 
        String hivExamination = entity.getHivExamination();
        if (hivExamination != null) {
            stmt.bindString(112, hivExamination);
        }
 
        String hepatitisCheck = entity.getHepatitisCheck();
        if (hepatitisCheck != null) {
            stmt.bindString(113, hepatitisCheck);
        }
 
        String syphilisExamination = entity.getSyphilisExamination();
        if (syphilisExamination != null) {
            stmt.bindString(114, syphilisExamination);
        }
 
        Integer hrScoreEarly = entity.getHrScoreEarly();
        if (hrScoreEarly != null) {
            stmt.bindLong(115, hrScoreEarly);
        }
 
        Integer hrScoreMiddle = entity.getHrScoreMiddle();
        if (hrScoreMiddle != null) {
            stmt.bindLong(116, hrScoreMiddle);
        }
 
        Integer hrScoreEarlyLater = entity.getHrScoreEarlyLater();
        if (hrScoreEarlyLater != null) {
            stmt.bindLong(117, hrScoreEarlyLater);
        }
 
        String downsSyndrome = entity.getDownsSyndrome();
        if (downsSyndrome != null) {
            stmt.bindString(118, downsSyndrome);
        }
 
        String prenatalDiagnosis = entity.getPrenatalDiagnosis();
        if (prenatalDiagnosis != null) {
            stmt.bindString(119, prenatalDiagnosis);
        }
 
        java.util.Date maternalChildbirthDate = entity.getMaternalChildbirthDate();
        if (maternalChildbirthDate != null) {
            stmt.bindLong(120, maternalChildbirthDate.getTime());
        }
 
        Integer maternalWeeks = entity.getMaternalWeeks();
        if (maternalWeeks != null) {
            stmt.bindLong(121, maternalWeeks);
        }
 
        Integer maternalDays = entity.getMaternalDays();
        if (maternalDays != null) {
            stmt.bindLong(122, maternalDays);
        }
 
        String maternalHospital = entity.getMaternalHospital();
        if (maternalHospital != null) {
            stmt.bindString(123, maternalHospital);
        }
 
        String laborWayValue = entity.getLaborWayValue();
        if (laborWayValue != null) {
            stmt.bindString(124, laborWayValue);
        }
 
        String perinatalBabyScore = entity.getPerinatalBabyScore();
        if (perinatalBabyScore != null) {
            stmt.bindString(125, perinatalBabyScore);
        }
 
        String perinatalBabyWeight = entity.getPerinatalBabyWeight();
        if (perinatalBabyWeight != null) {
            stmt.bindString(126, perinatalBabyWeight);
        }
 
        java.util.Date postpartumFollowupDate = entity.getPostpartumFollowupDate();
        if (postpartumFollowupDate != null) {
            stmt.bindLong(127, postpartumFollowupDate.getTime());
        }
 
        String postpartumPostpartumMom = entity.getPostpartumPostpartumMom();
        if (postpartumPostpartumMom != null) {
            stmt.bindString(128, postpartumPostpartumMom);
        }
 
        String postpartumOrgId = entity.getPostpartumOrgId();
        if (postpartumOrgId != null) {
            stmt.bindString(129, postpartumOrgId);
        }
 
        java.util.Date lastFollowupDate = entity.getLastFollowupDate();
        if (lastFollowupDate != null) {
            stmt.bindLong(130, lastFollowupDate.getTime());
        }
 
        String lastFollowupResult = entity.getLastFollowupResult();
        if (lastFollowupResult != null) {
            stmt.bindString(131, lastFollowupResult);
        }
 
        String lastFollowupOrgId = entity.getLastFollowupOrgId();
        if (lastFollowupOrgId != null) {
            stmt.bindString(132, lastFollowupOrgId);
        }
 
        String babySex = entity.getBabySex();
        if (babySex != null) {
            stmt.bindString(133, babySex);
        }
 
        String followupType = entity.getFollowupType();
        if (followupType != null) {
            stmt.bindString(134, followupType);
        }
 
        String ledgerRemark = entity.getLedgerRemark();
        if (ledgerRemark != null) {
            stmt.bindString(135, ledgerRemark);
        }
 
        String closeCaseCode = entity.getCloseCaseCode();
        if (closeCaseCode != null) {
            stmt.bindString(136, closeCaseCode);
        }
 
        String closeCaseReason = entity.getCloseCaseReason();
        if (closeCaseReason != null) {
            stmt.bindString(137, closeCaseReason);
        }
 
        String workUnit = entity.getWorkUnit();
        if (workUnit != null) {
            stmt.bindString(138, workUnit);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public MaternalRegister readEntity(Cursor cursor, int offset) {
        MaternalRegister entity = new MaternalRegister( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // maternalRegisterId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // maternalInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // personInfoId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // maternalInfoNo
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // pregnantCount
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // telNo
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // household
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // name
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // age
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // husbandAge
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // husbandPersonInfoId
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // husbandName
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // husbandUnit
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // address
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // husbandTelNo
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // mensesPeriod
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // mensesMeasure
            cursor.isNull(offset + 17) ? null : new java.util.Date(cursor.getLong(offset + 17)), // mensesLastDate
            cursor.isNull(offset + 18) ? null : new java.util.Date(cursor.getLong(offset + 18)), // expectedChildBirthday
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // childrenCount
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // buildingManualCode
            cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)), // buildingManualDate
            cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22), // spontaneousAbortionCount
            cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23), // artificialAbortionCount
            cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24), // drugAbortionCount
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // pregnancyInplan
            cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)), // pregnancyLasttime
            cursor.isNull(offset + 27) ? null : cursor.getInt(offset + 27), // gravidity
            cursor.isNull(offset + 28) ? null : cursor.getInt(offset + 28), // parity
            cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29), // height
            cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30), // weight
            cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31), // bmi
            cursor.isNull(offset + 32) ? null : cursor.getInt(offset + 32), // sbp
            cursor.isNull(offset + 33) ? null : cursor.getInt(offset + 33), // dbp
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // remark
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // caseStatus
            cursor.isNull(offset + 36) ? null : cursor.getInt(offset + 36), // isCancel
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // createOrgId
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // orgName
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // creatorId
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // creator
            cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)), // createTime
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // modifiedOrgId
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // modifiedOrgName
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // modifierId
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // modifier
            cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)), // modifiedTime
            cursor.isNull(offset + 47) ? null : cursor.getInt(offset + 47), // buildWeeks
            cursor.isNull(offset + 48) ? null : cursor.getInt(offset + 48), // currentWeeks
            cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49), // buildDays
            cursor.isNull(offset + 50) ? null : new java.util.Date(cursor.getLong(offset + 50)), // firstFollowupDate
            cursor.isNull(offset + 51) ? null : cursor.getInt(offset + 51), // firstFollowupWeeks
            cursor.isNull(offset + 52) ? null : cursor.getInt(offset + 52), // firstFollowupDays
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // firstFollowupOrgId
            cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)), // secondFollowupDate
            cursor.isNull(offset + 55) ? null : cursor.getInt(offset + 55), // secondFollowupWeeks
            cursor.isNull(offset + 56) ? null : cursor.getInt(offset + 56), // secondFollowupDays
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // secondFollowupOrgId
            cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)), // thirdFollowupDate
            cursor.isNull(offset + 59) ? null : cursor.getInt(offset + 59), // thirdFollowupWeeks
            cursor.isNull(offset + 60) ? null : cursor.getInt(offset + 60), // thirdFollowupDays
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // thirdFollowupOrgId
            cursor.isNull(offset + 62) ? null : new java.util.Date(cursor.getLong(offset + 62)), // fourthFollowupDate
            cursor.isNull(offset + 63) ? null : cursor.getInt(offset + 63), // fourthFollowupWeeks
            cursor.isNull(offset + 64) ? null : cursor.getInt(offset + 64), // fourthFollowupDays
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // fourthFollowupOrgId
            cursor.isNull(offset + 66) ? null : new java.util.Date(cursor.getLong(offset + 66)), // fifthFollowupDate
            cursor.isNull(offset + 67) ? null : cursor.getInt(offset + 67), // fifthFollowupWeeks
            cursor.isNull(offset + 68) ? null : cursor.getInt(offset + 68), // fifthFollowupDays
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // fifthFollowupOrgId
            cursor.isNull(offset + 70) ? null : new java.util.Date(cursor.getLong(offset + 70)), // followupDate1
            cursor.isNull(offset + 71) ? null : cursor.getInt(offset + 71), // followupWeeks1
            cursor.isNull(offset + 72) ? null : cursor.getInt(offset + 72), // followupDays1
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // followupOrgId1
            cursor.isNull(offset + 74) ? null : new java.util.Date(cursor.getLong(offset + 74)), // followupDate2
            cursor.isNull(offset + 75) ? null : cursor.getInt(offset + 75), // followupWeeks2
            cursor.isNull(offset + 76) ? null : cursor.getInt(offset + 76), // followupDays2
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // followupOrgId2
            cursor.isNull(offset + 78) ? null : new java.util.Date(cursor.getLong(offset + 78)), // followupDate3
            cursor.isNull(offset + 79) ? null : cursor.getInt(offset + 79), // followupWeeks3
            cursor.isNull(offset + 80) ? null : cursor.getInt(offset + 80), // followupDays3
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // followupOrgId3
            cursor.isNull(offset + 82) ? null : new java.util.Date(cursor.getLong(offset + 82)), // followupDate4
            cursor.isNull(offset + 83) ? null : cursor.getInt(offset + 83), // followupWeeks4
            cursor.isNull(offset + 84) ? null : cursor.getInt(offset + 84), // followupDays4
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // followupOrgId4
            cursor.isNull(offset + 86) ? null : new java.util.Date(cursor.getLong(offset + 86)), // followupDate5
            cursor.isNull(offset + 87) ? null : cursor.getInt(offset + 87), // followupWeeks5
            cursor.isNull(offset + 88) ? null : cursor.getInt(offset + 88), // followupDays5
            cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89), // followupOrgId5
            cursor.isNull(offset + 90) ? null : new java.util.Date(cursor.getLong(offset + 90)), // followupDate6
            cursor.isNull(offset + 91) ? null : cursor.getInt(offset + 91), // followupWeeks6
            cursor.isNull(offset + 92) ? null : cursor.getInt(offset + 92), // followupDays6
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93), // followupOrgId6
            cursor.isNull(offset + 94) ? null : new java.util.Date(cursor.getLong(offset + 94)), // followupDate7
            cursor.isNull(offset + 95) ? null : cursor.getInt(offset + 95), // followupWeeks7
            cursor.isNull(offset + 96) ? null : cursor.getInt(offset + 96), // followupDays7
            cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97), // followupOrgId7
            cursor.isNull(offset + 98) ? null : new java.util.Date(cursor.getLong(offset + 98)), // followupDate8
            cursor.isNull(offset + 99) ? null : cursor.getInt(offset + 99), // followupWeeks8
            cursor.isNull(offset + 100) ? null : cursor.getInt(offset + 100), // followupDays8
            cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101), // followupOrgId8
            cursor.isNull(offset + 102) ? null : new java.util.Date(cursor.getLong(offset + 102)), // followupDate9
            cursor.isNull(offset + 103) ? null : cursor.getInt(offset + 103), // followupWeeks9
            cursor.isNull(offset + 104) ? null : cursor.getInt(offset + 104), // followupDays9
            cursor.isNull(offset + 105) ? null : cursor.getString(offset + 105), // followupOrgId9
            cursor.isNull(offset + 106) ? null : new java.util.Date(cursor.getLong(offset + 106)), // followupDate10
            cursor.isNull(offset + 107) ? null : cursor.getInt(offset + 107), // followupWeeks10
            cursor.isNull(offset + 108) ? null : cursor.getInt(offset + 108), // followupDays10
            cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109), // followupOrgId10
            cursor.isNull(offset + 110) ? null : cursor.getString(offset + 110), // anemia
            cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111), // hivExamination
            cursor.isNull(offset + 112) ? null : cursor.getString(offset + 112), // hepatitisCheck
            cursor.isNull(offset + 113) ? null : cursor.getString(offset + 113), // syphilisExamination
            cursor.isNull(offset + 114) ? null : cursor.getInt(offset + 114), // hrScoreEarly
            cursor.isNull(offset + 115) ? null : cursor.getInt(offset + 115), // hrScoreMiddle
            cursor.isNull(offset + 116) ? null : cursor.getInt(offset + 116), // hrScoreEarlyLater
            cursor.isNull(offset + 117) ? null : cursor.getString(offset + 117), // downsSyndrome
            cursor.isNull(offset + 118) ? null : cursor.getString(offset + 118), // prenatalDiagnosis
            cursor.isNull(offset + 119) ? null : new java.util.Date(cursor.getLong(offset + 119)), // maternalChildbirthDate
            cursor.isNull(offset + 120) ? null : cursor.getInt(offset + 120), // maternalWeeks
            cursor.isNull(offset + 121) ? null : cursor.getInt(offset + 121), // maternalDays
            cursor.isNull(offset + 122) ? null : cursor.getString(offset + 122), // maternalHospital
            cursor.isNull(offset + 123) ? null : cursor.getString(offset + 123), // laborWayValue
            cursor.isNull(offset + 124) ? null : cursor.getString(offset + 124), // perinatalBabyScore
            cursor.isNull(offset + 125) ? null : cursor.getString(offset + 125), // perinatalBabyWeight
            cursor.isNull(offset + 126) ? null : new java.util.Date(cursor.getLong(offset + 126)), // postpartumFollowupDate
            cursor.isNull(offset + 127) ? null : cursor.getString(offset + 127), // postpartumPostpartumMom
            cursor.isNull(offset + 128) ? null : cursor.getString(offset + 128), // postpartumOrgId
            cursor.isNull(offset + 129) ? null : new java.util.Date(cursor.getLong(offset + 129)), // lastFollowupDate
            cursor.isNull(offset + 130) ? null : cursor.getString(offset + 130), // lastFollowupResult
            cursor.isNull(offset + 131) ? null : cursor.getString(offset + 131), // lastFollowupOrgId
            cursor.isNull(offset + 132) ? null : cursor.getString(offset + 132), // babySex
            cursor.isNull(offset + 133) ? null : cursor.getString(offset + 133), // followupType
            cursor.isNull(offset + 134) ? null : cursor.getString(offset + 134), // ledgerRemark
            cursor.isNull(offset + 135) ? null : cursor.getString(offset + 135), // closeCaseCode
            cursor.isNull(offset + 136) ? null : cursor.getString(offset + 136), // closeCaseReason
            cursor.isNull(offset + 137) ? null : cursor.getString(offset + 137) // workUnit
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, MaternalRegister entity, int offset) {
        entity.setMaternalRegisterId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setMaternalInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPersonInfoId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMaternalInfoNo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPregnantCount(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setTelNo(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setHousehold(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setName(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setAge(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setHusbandAge(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setHusbandPersonInfoId(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setHusbandName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setHusbandUnit(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setAddress(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setHusbandTelNo(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setMensesPeriod(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setMensesMeasure(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setMensesLastDate(cursor.isNull(offset + 17) ? null : new java.util.Date(cursor.getLong(offset + 17)));
        entity.setExpectedChildBirthday(cursor.isNull(offset + 18) ? null : new java.util.Date(cursor.getLong(offset + 18)));
        entity.setChildrenCount(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setBuildingManualCode(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setBuildingManualDate(cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)));
        entity.setSpontaneousAbortionCount(cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22));
        entity.setArtificialAbortionCount(cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23));
        entity.setDrugAbortionCount(cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24));
        entity.setPregnancyInplan(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setPregnancyLasttime(cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)));
        entity.setGravidity(cursor.isNull(offset + 27) ? null : cursor.getInt(offset + 27));
        entity.setParity(cursor.isNull(offset + 28) ? null : cursor.getInt(offset + 28));
        entity.setHeight(cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29));
        entity.setWeight(cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30));
        entity.setBmi(cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31));
        entity.setSbp(cursor.isNull(offset + 32) ? null : cursor.getInt(offset + 32));
        entity.setDbp(cursor.isNull(offset + 33) ? null : cursor.getInt(offset + 33));
        entity.setRemark(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCaseStatus(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setIsCancel(cursor.isNull(offset + 36) ? null : cursor.getInt(offset + 36));
        entity.setCreateOrgId(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setOrgName(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setCreatorId(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setCreator(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setCreateTime(cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)));
        entity.setModifiedOrgId(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setModifiedOrgName(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setModifierId(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setModifier(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setModifiedTime(cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)));
        entity.setBuildWeeks(cursor.isNull(offset + 47) ? null : cursor.getInt(offset + 47));
        entity.setCurrentWeeks(cursor.isNull(offset + 48) ? null : cursor.getInt(offset + 48));
        entity.setBuildDays(cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49));
        entity.setFirstFollowupDate(cursor.isNull(offset + 50) ? null : new java.util.Date(cursor.getLong(offset + 50)));
        entity.setFirstFollowupWeeks(cursor.isNull(offset + 51) ? null : cursor.getInt(offset + 51));
        entity.setFirstFollowupDays(cursor.isNull(offset + 52) ? null : cursor.getInt(offset + 52));
        entity.setFirstFollowupOrgId(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setSecondFollowupDate(cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)));
        entity.setSecondFollowupWeeks(cursor.isNull(offset + 55) ? null : cursor.getInt(offset + 55));
        entity.setSecondFollowupDays(cursor.isNull(offset + 56) ? null : cursor.getInt(offset + 56));
        entity.setSecondFollowupOrgId(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setThirdFollowupDate(cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)));
        entity.setThirdFollowupWeeks(cursor.isNull(offset + 59) ? null : cursor.getInt(offset + 59));
        entity.setThirdFollowupDays(cursor.isNull(offset + 60) ? null : cursor.getInt(offset + 60));
        entity.setThirdFollowupOrgId(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setFourthFollowupDate(cursor.isNull(offset + 62) ? null : new java.util.Date(cursor.getLong(offset + 62)));
        entity.setFourthFollowupWeeks(cursor.isNull(offset + 63) ? null : cursor.getInt(offset + 63));
        entity.setFourthFollowupDays(cursor.isNull(offset + 64) ? null : cursor.getInt(offset + 64));
        entity.setFourthFollowupOrgId(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setFifthFollowupDate(cursor.isNull(offset + 66) ? null : new java.util.Date(cursor.getLong(offset + 66)));
        entity.setFifthFollowupWeeks(cursor.isNull(offset + 67) ? null : cursor.getInt(offset + 67));
        entity.setFifthFollowupDays(cursor.isNull(offset + 68) ? null : cursor.getInt(offset + 68));
        entity.setFifthFollowupOrgId(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setFollowupDate1(cursor.isNull(offset + 70) ? null : new java.util.Date(cursor.getLong(offset + 70)));
        entity.setFollowupWeeks1(cursor.isNull(offset + 71) ? null : cursor.getInt(offset + 71));
        entity.setFollowupDays1(cursor.isNull(offset + 72) ? null : cursor.getInt(offset + 72));
        entity.setFollowupOrgId1(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setFollowupDate2(cursor.isNull(offset + 74) ? null : new java.util.Date(cursor.getLong(offset + 74)));
        entity.setFollowupWeeks2(cursor.isNull(offset + 75) ? null : cursor.getInt(offset + 75));
        entity.setFollowupDays2(cursor.isNull(offset + 76) ? null : cursor.getInt(offset + 76));
        entity.setFollowupOrgId2(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setFollowupDate3(cursor.isNull(offset + 78) ? null : new java.util.Date(cursor.getLong(offset + 78)));
        entity.setFollowupWeeks3(cursor.isNull(offset + 79) ? null : cursor.getInt(offset + 79));
        entity.setFollowupDays3(cursor.isNull(offset + 80) ? null : cursor.getInt(offset + 80));
        entity.setFollowupOrgId3(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setFollowupDate4(cursor.isNull(offset + 82) ? null : new java.util.Date(cursor.getLong(offset + 82)));
        entity.setFollowupWeeks4(cursor.isNull(offset + 83) ? null : cursor.getInt(offset + 83));
        entity.setFollowupDays4(cursor.isNull(offset + 84) ? null : cursor.getInt(offset + 84));
        entity.setFollowupOrgId4(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setFollowupDate5(cursor.isNull(offset + 86) ? null : new java.util.Date(cursor.getLong(offset + 86)));
        entity.setFollowupWeeks5(cursor.isNull(offset + 87) ? null : cursor.getInt(offset + 87));
        entity.setFollowupDays5(cursor.isNull(offset + 88) ? null : cursor.getInt(offset + 88));
        entity.setFollowupOrgId5(cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89));
        entity.setFollowupDate6(cursor.isNull(offset + 90) ? null : new java.util.Date(cursor.getLong(offset + 90)));
        entity.setFollowupWeeks6(cursor.isNull(offset + 91) ? null : cursor.getInt(offset + 91));
        entity.setFollowupDays6(cursor.isNull(offset + 92) ? null : cursor.getInt(offset + 92));
        entity.setFollowupOrgId6(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
        entity.setFollowupDate7(cursor.isNull(offset + 94) ? null : new java.util.Date(cursor.getLong(offset + 94)));
        entity.setFollowupWeeks7(cursor.isNull(offset + 95) ? null : cursor.getInt(offset + 95));
        entity.setFollowupDays7(cursor.isNull(offset + 96) ? null : cursor.getInt(offset + 96));
        entity.setFollowupOrgId7(cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97));
        entity.setFollowupDate8(cursor.isNull(offset + 98) ? null : new java.util.Date(cursor.getLong(offset + 98)));
        entity.setFollowupWeeks8(cursor.isNull(offset + 99) ? null : cursor.getInt(offset + 99));
        entity.setFollowupDays8(cursor.isNull(offset + 100) ? null : cursor.getInt(offset + 100));
        entity.setFollowupOrgId8(cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101));
        entity.setFollowupDate9(cursor.isNull(offset + 102) ? null : new java.util.Date(cursor.getLong(offset + 102)));
        entity.setFollowupWeeks9(cursor.isNull(offset + 103) ? null : cursor.getInt(offset + 103));
        entity.setFollowupDays9(cursor.isNull(offset + 104) ? null : cursor.getInt(offset + 104));
        entity.setFollowupOrgId9(cursor.isNull(offset + 105) ? null : cursor.getString(offset + 105));
        entity.setFollowupDate10(cursor.isNull(offset + 106) ? null : new java.util.Date(cursor.getLong(offset + 106)));
        entity.setFollowupWeeks10(cursor.isNull(offset + 107) ? null : cursor.getInt(offset + 107));
        entity.setFollowupDays10(cursor.isNull(offset + 108) ? null : cursor.getInt(offset + 108));
        entity.setFollowupOrgId10(cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109));
        entity.setAnemia(cursor.isNull(offset + 110) ? null : cursor.getString(offset + 110));
        entity.setHivExamination(cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111));
        entity.setHepatitisCheck(cursor.isNull(offset + 112) ? null : cursor.getString(offset + 112));
        entity.setSyphilisExamination(cursor.isNull(offset + 113) ? null : cursor.getString(offset + 113));
        entity.setHrScoreEarly(cursor.isNull(offset + 114) ? null : cursor.getInt(offset + 114));
        entity.setHrScoreMiddle(cursor.isNull(offset + 115) ? null : cursor.getInt(offset + 115));
        entity.setHrScoreEarlyLater(cursor.isNull(offset + 116) ? null : cursor.getInt(offset + 116));
        entity.setDownsSyndrome(cursor.isNull(offset + 117) ? null : cursor.getString(offset + 117));
        entity.setPrenatalDiagnosis(cursor.isNull(offset + 118) ? null : cursor.getString(offset + 118));
        entity.setMaternalChildbirthDate(cursor.isNull(offset + 119) ? null : new java.util.Date(cursor.getLong(offset + 119)));
        entity.setMaternalWeeks(cursor.isNull(offset + 120) ? null : cursor.getInt(offset + 120));
        entity.setMaternalDays(cursor.isNull(offset + 121) ? null : cursor.getInt(offset + 121));
        entity.setMaternalHospital(cursor.isNull(offset + 122) ? null : cursor.getString(offset + 122));
        entity.setLaborWayValue(cursor.isNull(offset + 123) ? null : cursor.getString(offset + 123));
        entity.setPerinatalBabyScore(cursor.isNull(offset + 124) ? null : cursor.getString(offset + 124));
        entity.setPerinatalBabyWeight(cursor.isNull(offset + 125) ? null : cursor.getString(offset + 125));
        entity.setPostpartumFollowupDate(cursor.isNull(offset + 126) ? null : new java.util.Date(cursor.getLong(offset + 126)));
        entity.setPostpartumPostpartumMom(cursor.isNull(offset + 127) ? null : cursor.getString(offset + 127));
        entity.setPostpartumOrgId(cursor.isNull(offset + 128) ? null : cursor.getString(offset + 128));
        entity.setLastFollowupDate(cursor.isNull(offset + 129) ? null : new java.util.Date(cursor.getLong(offset + 129)));
        entity.setLastFollowupResult(cursor.isNull(offset + 130) ? null : cursor.getString(offset + 130));
        entity.setLastFollowupOrgId(cursor.isNull(offset + 131) ? null : cursor.getString(offset + 131));
        entity.setBabySex(cursor.isNull(offset + 132) ? null : cursor.getString(offset + 132));
        entity.setFollowupType(cursor.isNull(offset + 133) ? null : cursor.getString(offset + 133));
        entity.setLedgerRemark(cursor.isNull(offset + 134) ? null : cursor.getString(offset + 134));
        entity.setCloseCaseCode(cursor.isNull(offset + 135) ? null : cursor.getString(offset + 135));
        entity.setCloseCaseReason(cursor.isNull(offset + 136) ? null : cursor.getString(offset + 136));
        entity.setWorkUnit(cursor.isNull(offset + 137) ? null : cursor.getString(offset + 137));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(MaternalRegister entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(MaternalRegister entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
