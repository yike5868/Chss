package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.old.ElderDepressed;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ELDER_DEPRESSED".
*/
public class ElderDepressedDao extends AbstractDao<ElderDepressed, Void> {

    public static final String TABLENAME = "ELDER_DEPRESSED";

    /**
     * Properties of entity ElderDepressed.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ElderDepressedId = new Property(0, String.class, "elderDepressedId", false, "ELDER_DEPRESSED_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property Name = new Property(2, String.class, "name", false, "NAME");
        public final static Property SexCode = new Property(3, String.class, "sexCode", false, "SEX_CODE");
        public final static Property Birthday = new Property(4, java.util.Date.class, "birthday", false, "BIRTHDAY");
        public final static Property Age = new Property(5, Integer.class, "age", false, "AGE");
        public final static Property OccupationCode = new Property(6, String.class, "occupationCode", false, "OCCUPATION_CODE");
        public final static Property EducationCode = new Property(7, String.class, "educationCode", false, "EDUCATION_CODE");
        public final static Property AssessDate = new Property(8, java.util.Date.class, "assessDate", false, "ASSESS_DATE");
        public final static Property TotalScore = new Property(9, String.class, "totalScore", false, "TOTAL_SCORE");
        public final static Property IsLifesatisfaction = new Property(10, String.class, "isLifesatisfaction", false, "IS_LIFESATISFACTION");
        public final static Property IsJoy = new Property(11, String.class, "isJoy", false, "IS_JOY");
        public final static Property IsVoid = new Property(12, String.class, "isVoid", false, "IS_VOID");
        public final static Property IsBored = new Property(13, String.class, "isBored", false, "IS_BORED");
        public final static Property IsHope = new Property(14, String.class, "isHope", false, "IS_HOPE");
        public final static Property IsWorry = new Property(15, String.class, "isWorry", false, "IS_WORRY");
        public final static Property IsSpirit = new Property(16, String.class, "isSpirit", false, "IS_SPIRIT");
        public final static Property IsAfraid = new Property(17, String.class, "isAfraid", false, "IS_AFRAID");
        public final static Property IsHappy = new Property(18, String.class, "isHappy", false, "IS_HAPPY");
        public final static Property IsHelpless = new Property(19, String.class, "isHelpless", false, "IS_HELPLESS");
        public final static Property IsUnsafe = new Property(20, String.class, "isUnsafe", false, "IS_UNSAFE");
        public final static Property IsGoout = new Property(21, String.class, "isGoout", false, "IS_GOOUT");
        public final static Property IsFuture = new Property(22, String.class, "isFuture", false, "IS_FUTURE");
        public final static Property IsMemory = new Property(23, String.class, "isMemory", false, "IS_MEMORY");
        public final static Property IsSplendid = new Property(24, String.class, "isSplendid", false, "IS_SPLENDID");
        public final static Property IsLaziness = new Property(25, String.class, "isLaziness", false, "IS_LAZINESS");
        public final static Property IsUseless = new Property(26, String.class, "isUseless", false, "IS_USELESS");
        public final static Property IsFormerly = new Property(27, String.class, "isFormerly", false, "IS_FORMERLY");
        public final static Property IsExcite = new Property(28, String.class, "isExcite", false, "IS_EXCITE");
        public final static Property IsLearnhard = new Property(29, String.class, "isLearnhard", false, "IS_LEARNHARD");
        public final static Property IsEnergyfull = new Property(30, String.class, "isEnergyfull", false, "IS_ENERGYFULL");
        public final static Property IsNohope = new Property(31, String.class, "isNohope", false, "IS_NOHOPE");
        public final static Property IsHappylife = new Property(32, String.class, "isHappylife", false, "IS_HAPPYLIFE");
        public final static Property IsThingbad = new Property(33, String.class, "isThingbad", false, "IS_THINGBAD");
        public final static Property IsCry = new Property(34, String.class, "isCry", false, "IS_CRY");
        public final static Property IsMindhard = new Property(35, String.class, "isMindhard", false, "IS_MINDHARD");
        public final static Property IsGetup = new Property(36, String.class, "isGetup", false, "IS_GETUP");
        public final static Property IsExercise = new Property(37, String.class, "isExercise", false, "IS_EXERCISE");
        public final static Property IsDecideeasy = new Property(38, String.class, "isDecideeasy", false, "IS_DECIDEEASY");
        public final static Property IsClearhead = new Property(39, String.class, "isClearhead", false, "IS_CLEARHEAD");
        public final static Property IsCancel = new Property(40, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(41, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(42, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(43, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(44, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(45, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(46, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(47, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(48, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(49, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(50, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
    };


    public ElderDepressedDao(DaoConfig config) {
        super(config);
    }
    
    public ElderDepressedDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ELDER_DEPRESSED\" (" + //
                "\"ELDER_DEPRESSED_ID\" TEXT," + // 0: elderDepressedId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"NAME\" TEXT," + // 2: name
                "\"SEX_CODE\" TEXT," + // 3: sexCode
                "\"BIRTHDAY\" INTEGER," + // 4: birthday
                "\"AGE\" INTEGER," + // 5: age
                "\"OCCUPATION_CODE\" TEXT," + // 6: occupationCode
                "\"EDUCATION_CODE\" TEXT," + // 7: educationCode
                "\"ASSESS_DATE\" INTEGER," + // 8: assessDate
                "\"TOTAL_SCORE\" TEXT," + // 9: totalScore
                "\"IS_LIFESATISFACTION\" TEXT," + // 10: isLifesatisfaction
                "\"IS_JOY\" TEXT," + // 11: isJoy
                "\"IS_VOID\" TEXT," + // 12: isVoid
                "\"IS_BORED\" TEXT," + // 13: isBored
                "\"IS_HOPE\" TEXT," + // 14: isHope
                "\"IS_WORRY\" TEXT," + // 15: isWorry
                "\"IS_SPIRIT\" TEXT," + // 16: isSpirit
                "\"IS_AFRAID\" TEXT," + // 17: isAfraid
                "\"IS_HAPPY\" TEXT," + // 18: isHappy
                "\"IS_HELPLESS\" TEXT," + // 19: isHelpless
                "\"IS_UNSAFE\" TEXT," + // 20: isUnsafe
                "\"IS_GOOUT\" TEXT," + // 21: isGoout
                "\"IS_FUTURE\" TEXT," + // 22: isFuture
                "\"IS_MEMORY\" TEXT," + // 23: isMemory
                "\"IS_SPLENDID\" TEXT," + // 24: isSplendid
                "\"IS_LAZINESS\" TEXT," + // 25: isLaziness
                "\"IS_USELESS\" TEXT," + // 26: isUseless
                "\"IS_FORMERLY\" TEXT," + // 27: isFormerly
                "\"IS_EXCITE\" TEXT," + // 28: isExcite
                "\"IS_LEARNHARD\" TEXT," + // 29: isLearnhard
                "\"IS_ENERGYFULL\" TEXT," + // 30: isEnergyfull
                "\"IS_NOHOPE\" TEXT," + // 31: isNohope
                "\"IS_HAPPYLIFE\" TEXT," + // 32: isHappylife
                "\"IS_THINGBAD\" TEXT," + // 33: isThingbad
                "\"IS_CRY\" TEXT," + // 34: isCry
                "\"IS_MINDHARD\" TEXT," + // 35: isMindhard
                "\"IS_GETUP\" TEXT," + // 36: isGetup
                "\"IS_EXERCISE\" TEXT," + // 37: isExercise
                "\"IS_DECIDEEASY\" TEXT," + // 38: isDecideeasy
                "\"IS_CLEARHEAD\" TEXT," + // 39: isClearhead
                "\"IS_CANCEL\" INTEGER," + // 40: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 41: createOrgId
                "\"ORG_NAME\" TEXT," + // 42: orgName
                "\"CREATOR_ID\" TEXT," + // 43: creatorId
                "\"CREATOR\" TEXT," + // 44: creator
                "\"CREATE_TIME\" INTEGER," + // 45: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 46: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 47: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 48: modifierId
                "\"MODIFIER\" TEXT," + // 49: modifier
                "\"MODIFIED_TIME\" INTEGER);"); // 50: modifiedTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ELDER_DEPRESSED\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ElderDepressed entity) {
        stmt.clearBindings();
 
        String elderDepressedId = entity.getElderDepressedId();
        if (elderDepressedId != null) {
            stmt.bindString(1, elderDepressedId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(3, name);
        }
 
        String sexCode = entity.getSexCode();
        if (sexCode != null) {
            stmt.bindString(4, sexCode);
        }
 
        java.util.Date birthday = entity.getBirthday();
        if (birthday != null) {
            stmt.bindLong(5, birthday.getTime());
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(6, age);
        }
 
        String occupationCode = entity.getOccupationCode();
        if (occupationCode != null) {
            stmt.bindString(7, occupationCode);
        }
 
        String educationCode = entity.getEducationCode();
        if (educationCode != null) {
            stmt.bindString(8, educationCode);
        }
 
        java.util.Date assessDate = entity.getAssessDate();
        if (assessDate != null) {
            stmt.bindLong(9, assessDate.getTime());
        }
 
        String totalScore = entity.getTotalScore();
        if (totalScore != null) {
            stmt.bindString(10, totalScore);
        }
 
        String isLifesatisfaction = entity.getIsLifesatisfaction();
        if (isLifesatisfaction != null) {
            stmt.bindString(11, isLifesatisfaction);
        }
 
        String isJoy = entity.getIsJoy();
        if (isJoy != null) {
            stmt.bindString(12, isJoy);
        }
 
        String isVoid = entity.getIsVoid();
        if (isVoid != null) {
            stmt.bindString(13, isVoid);
        }
 
        String isBored = entity.getIsBored();
        if (isBored != null) {
            stmt.bindString(14, isBored);
        }
 
        String isHope = entity.getIsHope();
        if (isHope != null) {
            stmt.bindString(15, isHope);
        }
 
        String isWorry = entity.getIsWorry();
        if (isWorry != null) {
            stmt.bindString(16, isWorry);
        }
 
        String isSpirit = entity.getIsSpirit();
        if (isSpirit != null) {
            stmt.bindString(17, isSpirit);
        }
 
        String isAfraid = entity.getIsAfraid();
        if (isAfraid != null) {
            stmt.bindString(18, isAfraid);
        }
 
        String isHappy = entity.getIsHappy();
        if (isHappy != null) {
            stmt.bindString(19, isHappy);
        }
 
        String isHelpless = entity.getIsHelpless();
        if (isHelpless != null) {
            stmt.bindString(20, isHelpless);
        }
 
        String isUnsafe = entity.getIsUnsafe();
        if (isUnsafe != null) {
            stmt.bindString(21, isUnsafe);
        }
 
        String isGoout = entity.getIsGoout();
        if (isGoout != null) {
            stmt.bindString(22, isGoout);
        }
 
        String isFuture = entity.getIsFuture();
        if (isFuture != null) {
            stmt.bindString(23, isFuture);
        }
 
        String isMemory = entity.getIsMemory();
        if (isMemory != null) {
            stmt.bindString(24, isMemory);
        }
 
        String isSplendid = entity.getIsSplendid();
        if (isSplendid != null) {
            stmt.bindString(25, isSplendid);
        }
 
        String isLaziness = entity.getIsLaziness();
        if (isLaziness != null) {
            stmt.bindString(26, isLaziness);
        }
 
        String isUseless = entity.getIsUseless();
        if (isUseless != null) {
            stmt.bindString(27, isUseless);
        }
 
        String isFormerly = entity.getIsFormerly();
        if (isFormerly != null) {
            stmt.bindString(28, isFormerly);
        }
 
        String isExcite = entity.getIsExcite();
        if (isExcite != null) {
            stmt.bindString(29, isExcite);
        }
 
        String isLearnhard = entity.getIsLearnhard();
        if (isLearnhard != null) {
            stmt.bindString(30, isLearnhard);
        }
 
        String isEnergyfull = entity.getIsEnergyfull();
        if (isEnergyfull != null) {
            stmt.bindString(31, isEnergyfull);
        }
 
        String isNohope = entity.getIsNohope();
        if (isNohope != null) {
            stmt.bindString(32, isNohope);
        }
 
        String isHappylife = entity.getIsHappylife();
        if (isHappylife != null) {
            stmt.bindString(33, isHappylife);
        }
 
        String isThingbad = entity.getIsThingbad();
        if (isThingbad != null) {
            stmt.bindString(34, isThingbad);
        }
 
        String isCry = entity.getIsCry();
        if (isCry != null) {
            stmt.bindString(35, isCry);
        }
 
        String isMindhard = entity.getIsMindhard();
        if (isMindhard != null) {
            stmt.bindString(36, isMindhard);
        }
 
        String isGetup = entity.getIsGetup();
        if (isGetup != null) {
            stmt.bindString(37, isGetup);
        }
 
        String isExercise = entity.getIsExercise();
        if (isExercise != null) {
            stmt.bindString(38, isExercise);
        }
 
        String isDecideeasy = entity.getIsDecideeasy();
        if (isDecideeasy != null) {
            stmt.bindString(39, isDecideeasy);
        }
 
        String isClearhead = entity.getIsClearhead();
        if (isClearhead != null) {
            stmt.bindString(40, isClearhead);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(41, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(42, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(43, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(44, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(45, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(46, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(47, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(48, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(49, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(50, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(51, modifiedTime.getTime());
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ElderDepressed entity) {
        stmt.clearBindings();
 
        String elderDepressedId = entity.getElderDepressedId();
        if (elderDepressedId != null) {
            stmt.bindString(1, elderDepressedId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(3, name);
        }
 
        String sexCode = entity.getSexCode();
        if (sexCode != null) {
            stmt.bindString(4, sexCode);
        }
 
        java.util.Date birthday = entity.getBirthday();
        if (birthday != null) {
            stmt.bindLong(5, birthday.getTime());
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(6, age);
        }
 
        String occupationCode = entity.getOccupationCode();
        if (occupationCode != null) {
            stmt.bindString(7, occupationCode);
        }
 
        String educationCode = entity.getEducationCode();
        if (educationCode != null) {
            stmt.bindString(8, educationCode);
        }
 
        java.util.Date assessDate = entity.getAssessDate();
        if (assessDate != null) {
            stmt.bindLong(9, assessDate.getTime());
        }
 
        String totalScore = entity.getTotalScore();
        if (totalScore != null) {
            stmt.bindString(10, totalScore);
        }
 
        String isLifesatisfaction = entity.getIsLifesatisfaction();
        if (isLifesatisfaction != null) {
            stmt.bindString(11, isLifesatisfaction);
        }
 
        String isJoy = entity.getIsJoy();
        if (isJoy != null) {
            stmt.bindString(12, isJoy);
        }
 
        String isVoid = entity.getIsVoid();
        if (isVoid != null) {
            stmt.bindString(13, isVoid);
        }
 
        String isBored = entity.getIsBored();
        if (isBored != null) {
            stmt.bindString(14, isBored);
        }
 
        String isHope = entity.getIsHope();
        if (isHope != null) {
            stmt.bindString(15, isHope);
        }
 
        String isWorry = entity.getIsWorry();
        if (isWorry != null) {
            stmt.bindString(16, isWorry);
        }
 
        String isSpirit = entity.getIsSpirit();
        if (isSpirit != null) {
            stmt.bindString(17, isSpirit);
        }
 
        String isAfraid = entity.getIsAfraid();
        if (isAfraid != null) {
            stmt.bindString(18, isAfraid);
        }
 
        String isHappy = entity.getIsHappy();
        if (isHappy != null) {
            stmt.bindString(19, isHappy);
        }
 
        String isHelpless = entity.getIsHelpless();
        if (isHelpless != null) {
            stmt.bindString(20, isHelpless);
        }
 
        String isUnsafe = entity.getIsUnsafe();
        if (isUnsafe != null) {
            stmt.bindString(21, isUnsafe);
        }
 
        String isGoout = entity.getIsGoout();
        if (isGoout != null) {
            stmt.bindString(22, isGoout);
        }
 
        String isFuture = entity.getIsFuture();
        if (isFuture != null) {
            stmt.bindString(23, isFuture);
        }
 
        String isMemory = entity.getIsMemory();
        if (isMemory != null) {
            stmt.bindString(24, isMemory);
        }
 
        String isSplendid = entity.getIsSplendid();
        if (isSplendid != null) {
            stmt.bindString(25, isSplendid);
        }
 
        String isLaziness = entity.getIsLaziness();
        if (isLaziness != null) {
            stmt.bindString(26, isLaziness);
        }
 
        String isUseless = entity.getIsUseless();
        if (isUseless != null) {
            stmt.bindString(27, isUseless);
        }
 
        String isFormerly = entity.getIsFormerly();
        if (isFormerly != null) {
            stmt.bindString(28, isFormerly);
        }
 
        String isExcite = entity.getIsExcite();
        if (isExcite != null) {
            stmt.bindString(29, isExcite);
        }
 
        String isLearnhard = entity.getIsLearnhard();
        if (isLearnhard != null) {
            stmt.bindString(30, isLearnhard);
        }
 
        String isEnergyfull = entity.getIsEnergyfull();
        if (isEnergyfull != null) {
            stmt.bindString(31, isEnergyfull);
        }
 
        String isNohope = entity.getIsNohope();
        if (isNohope != null) {
            stmt.bindString(32, isNohope);
        }
 
        String isHappylife = entity.getIsHappylife();
        if (isHappylife != null) {
            stmt.bindString(33, isHappylife);
        }
 
        String isThingbad = entity.getIsThingbad();
        if (isThingbad != null) {
            stmt.bindString(34, isThingbad);
        }
 
        String isCry = entity.getIsCry();
        if (isCry != null) {
            stmt.bindString(35, isCry);
        }
 
        String isMindhard = entity.getIsMindhard();
        if (isMindhard != null) {
            stmt.bindString(36, isMindhard);
        }
 
        String isGetup = entity.getIsGetup();
        if (isGetup != null) {
            stmt.bindString(37, isGetup);
        }
 
        String isExercise = entity.getIsExercise();
        if (isExercise != null) {
            stmt.bindString(38, isExercise);
        }
 
        String isDecideeasy = entity.getIsDecideeasy();
        if (isDecideeasy != null) {
            stmt.bindString(39, isDecideeasy);
        }
 
        String isClearhead = entity.getIsClearhead();
        if (isClearhead != null) {
            stmt.bindString(40, isClearhead);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(41, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(42, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(43, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(44, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(45, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(46, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(47, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(48, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(49, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(50, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(51, modifiedTime.getTime());
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public ElderDepressed readEntity(Cursor cursor, int offset) {
        ElderDepressed entity = new ElderDepressed( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // elderDepressedId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // sexCode
            cursor.isNull(offset + 4) ? null : new java.util.Date(cursor.getLong(offset + 4)), // birthday
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // age
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // occupationCode
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // educationCode
            cursor.isNull(offset + 8) ? null : new java.util.Date(cursor.getLong(offset + 8)), // assessDate
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // totalScore
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // isLifesatisfaction
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // isJoy
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // isVoid
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // isBored
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // isHope
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // isWorry
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // isSpirit
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // isAfraid
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // isHappy
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // isHelpless
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // isUnsafe
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // isGoout
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // isFuture
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // isMemory
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // isSplendid
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // isLaziness
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // isUseless
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // isFormerly
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // isExcite
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // isLearnhard
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // isEnergyfull
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // isNohope
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // isHappylife
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // isThingbad
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // isCry
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // isMindhard
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // isGetup
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // isExercise
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // isDecideeasy
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // isClearhead
            cursor.isNull(offset + 40) ? null : cursor.getInt(offset + 40), // isCancel
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // createOrgId
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // orgName
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // creatorId
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // creator
            cursor.isNull(offset + 45) ? null : new java.util.Date(cursor.getLong(offset + 45)), // createTime
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // modifiedOrgId
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // modifiedOrgName
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // modifierId
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // modifier
            cursor.isNull(offset + 50) ? null : new java.util.Date(cursor.getLong(offset + 50)) // modifiedTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ElderDepressed entity, int offset) {
        entity.setElderDepressedId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setSexCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setBirthday(cursor.isNull(offset + 4) ? null : new java.util.Date(cursor.getLong(offset + 4)));
        entity.setAge(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setOccupationCode(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setEducationCode(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setAssessDate(cursor.isNull(offset + 8) ? null : new java.util.Date(cursor.getLong(offset + 8)));
        entity.setTotalScore(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setIsLifesatisfaction(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setIsJoy(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setIsVoid(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setIsBored(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setIsHope(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setIsWorry(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setIsSpirit(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setIsAfraid(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setIsHappy(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setIsHelpless(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setIsUnsafe(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setIsGoout(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setIsFuture(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setIsMemory(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setIsSplendid(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setIsLaziness(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setIsUseless(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setIsFormerly(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setIsExcite(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setIsLearnhard(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setIsEnergyfull(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setIsNohope(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setIsHappylife(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setIsThingbad(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setIsCry(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setIsMindhard(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setIsGetup(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setIsExercise(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setIsDecideeasy(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setIsClearhead(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setIsCancel(cursor.isNull(offset + 40) ? null : cursor.getInt(offset + 40));
        entity.setCreateOrgId(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setOrgName(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setCreatorId(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setCreator(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setCreateTime(cursor.isNull(offset + 45) ? null : new java.util.Date(cursor.getLong(offset + 45)));
        entity.setModifiedOrgId(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setModifiedOrgName(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setModifierId(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setModifier(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setModifiedTime(cursor.isNull(offset + 50) ? null : new java.util.Date(cursor.getLong(offset + 50)));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(ElderDepressed entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(ElderDepressed entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
