package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.tuberculosis.TuberculosisFirstFollowup;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TUBERCULOSIS_FIRST_FOLLOWUP".
*/
public class TuberculosisFirstFollowupDao extends AbstractDao<TuberculosisFirstFollowup, Void> {

    public static final String TABLENAME = "TUBERCULOSIS_FIRST_FOLLOWUP";

    /**
     * Properties of entity TuberculosisFirstFollowup.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property TuberculosisFirstFollowupId = new Property(0, String.class, "tuberculosisFirstFollowupId", false, "TUBERCULOSIS_FIRST_FOLLOWUP_ID");
        public final static Property TuberculosisInfoId = new Property(1, String.class, "tuberculosisInfoId", false, "TUBERCULOSIS_INFO_ID");
        public final static Property PersonInfoId = new Property(2, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property TuberculosisFirstFollowupNo = new Property(3, String.class, "tuberculosisFirstFollowupNo", false, "TUBERCULOSIS_FIRST_FOLLOWUP_NO");
        public final static Property Name = new Property(4, String.class, "name", false, "NAME");
        public final static Property FollowupDate = new Property(5, java.util.Date.class, "followupDate", false, "FOLLOWUP_DATE");
        public final static Property FollowupWayCode = new Property(6, String.class, "followupWayCode", false, "FOLLOWUP_WAY_CODE");
        public final static Property PatientTypeCode = new Property(7, String.class, "patientTypeCode", false, "PATIENT_TYPE_CODE");
        public final static Property SputumCode = new Property(8, String.class, "sputumCode", false, "SPUTUM_CODE");
        public final static Property DrugResistanceCode = new Property(9, String.class, "drugResistanceCode", false, "DRUG_RESISTANCE_CODE");
        public final static Property ChemotherapyCode = new Property(10, String.class, "chemotherapyCode", false, "CHEMOTHERAPY_CODE");
        public final static Property ChemotherapyValue = new Property(11, String.class, "chemotherapyValue", false, "CHEMOTHERAPY_VALUE");
        public final static Property DrugUseCode = new Property(12, String.class, "drugUseCode", false, "DRUG_USE_CODE");
        public final static Property SupervisorKindCode = new Property(13, String.class, "supervisorKindCode", false, "SUPERVISOR_KIND_CODE");
        public final static Property SeparateRoomCode = new Property(14, String.class, "separateRoomCode", false, "SEPARATE_ROOM_CODE");
        public final static Property VentilationCode = new Property(15, String.class, "ventilationCode", false, "VENTILATION_CODE");
        public final static Property DailySmoking = new Property(16, Integer.class, "dailySmoking", false, "DAILY_SMOKING");
        public final static Property AimDailySmoking = new Property(17, Integer.class, "aimDailySmoking", false, "AIM_DAILY_SMOKING");
        public final static Property DailyDrinking = new Property(18, Integer.class, "dailyDrinking", false, "DAILY_DRINKING");
        public final static Property AimDailyDrinking = new Property(19, Integer.class, "aimDailyDrinking", false, "AIM_DAILY_DRINKING");
        public final static Property GetMedicinePlace = new Property(20, String.class, "getMedicinePlace", false, "GET_MEDICINE_PLACE");
        public final static Property GetMedicineDate = new Property(21, java.util.Date.class, "getMedicineDate", false, "GET_MEDICINE_DATE");
        public final static Property MedicationRecCardCode = new Property(22, String.class, "medicationRecCardCode", false, "MEDICATION_REC_CARD_CODE");
        public final static Property DrugLimitCode = new Property(23, String.class, "drugLimitCode", false, "DRUG_LIMIT_CODE");
        public final static Property TreatmentCourseCode = new Property(24, String.class, "treatmentCourseCode", false, "TREATMENT_COURSE_CODE");
        public final static Property IrregularMedicationCode = new Property(25, String.class, "irregularMedicationCode", false, "IRREGULAR_MEDICATION_CODE");
        public final static Property ArtCode = new Property(26, String.class, "artCode", false, "ART_CODE");
        public final static Property TreatmentSputumCode = new Property(27, String.class, "treatmentSputumCode", false, "TREATMENT_SPUTUM_CODE");
        public final static Property AdhereMedicationCode = new Property(28, String.class, "adhereMedicationCode", false, "ADHERE_MEDICATION_CODE");
        public final static Property LivingHabitsCode = new Property(29, String.class, "livingHabitsCode", false, "LIVING_HABITS_CODE");
        public final static Property CloseContactCheckCode = new Property(30, String.class, "closeContactCheckCode", false, "CLOSE_CONTACT_CHECK_CODE");
        public final static Property NextFollowupDate = new Property(31, java.util.Date.class, "nextFollowupDate", false, "NEXT_FOLLOWUP_DATE");
        public final static Property FollowupDoctorId = new Property(32, String.class, "followupDoctorId", false, "FOLLOWUP_DOCTOR_ID");
        public final static Property FollowupDoctorName = new Property(33, String.class, "followupDoctorName", false, "FOLLOWUP_DOCTOR_NAME");
        public final static Property IsCancel = new Property(34, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(35, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(36, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(37, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(38, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(39, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(40, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(41, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(42, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(43, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(44, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
    };


    public TuberculosisFirstFollowupDao(DaoConfig config) {
        super(config);
    }
    
    public TuberculosisFirstFollowupDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TUBERCULOSIS_FIRST_FOLLOWUP\" (" + //
                "\"TUBERCULOSIS_FIRST_FOLLOWUP_ID\" TEXT," + // 0: tuberculosisFirstFollowupId
                "\"TUBERCULOSIS_INFO_ID\" TEXT," + // 1: tuberculosisInfoId
                "\"PERSON_INFO_ID\" TEXT," + // 2: personInfoId
                "\"TUBERCULOSIS_FIRST_FOLLOWUP_NO\" TEXT," + // 3: tuberculosisFirstFollowupNo
                "\"NAME\" TEXT," + // 4: name
                "\"FOLLOWUP_DATE\" INTEGER," + // 5: followupDate
                "\"FOLLOWUP_WAY_CODE\" TEXT," + // 6: followupWayCode
                "\"PATIENT_TYPE_CODE\" TEXT," + // 7: patientTypeCode
                "\"SPUTUM_CODE\" TEXT," + // 8: sputumCode
                "\"DRUG_RESISTANCE_CODE\" TEXT," + // 9: drugResistanceCode
                "\"CHEMOTHERAPY_CODE\" TEXT," + // 10: chemotherapyCode
                "\"CHEMOTHERAPY_VALUE\" TEXT," + // 11: chemotherapyValue
                "\"DRUG_USE_CODE\" TEXT," + // 12: drugUseCode
                "\"SUPERVISOR_KIND_CODE\" TEXT," + // 13: supervisorKindCode
                "\"SEPARATE_ROOM_CODE\" TEXT," + // 14: separateRoomCode
                "\"VENTILATION_CODE\" TEXT," + // 15: ventilationCode
                "\"DAILY_SMOKING\" INTEGER," + // 16: dailySmoking
                "\"AIM_DAILY_SMOKING\" INTEGER," + // 17: aimDailySmoking
                "\"DAILY_DRINKING\" INTEGER," + // 18: dailyDrinking
                "\"AIM_DAILY_DRINKING\" INTEGER," + // 19: aimDailyDrinking
                "\"GET_MEDICINE_PLACE\" TEXT," + // 20: getMedicinePlace
                "\"GET_MEDICINE_DATE\" INTEGER," + // 21: getMedicineDate
                "\"MEDICATION_REC_CARD_CODE\" TEXT," + // 22: medicationRecCardCode
                "\"DRUG_LIMIT_CODE\" TEXT," + // 23: drugLimitCode
                "\"TREATMENT_COURSE_CODE\" TEXT," + // 24: treatmentCourseCode
                "\"IRREGULAR_MEDICATION_CODE\" TEXT," + // 25: irregularMedicationCode
                "\"ART_CODE\" TEXT," + // 26: artCode
                "\"TREATMENT_SPUTUM_CODE\" TEXT," + // 27: treatmentSputumCode
                "\"ADHERE_MEDICATION_CODE\" TEXT," + // 28: adhereMedicationCode
                "\"LIVING_HABITS_CODE\" TEXT," + // 29: livingHabitsCode
                "\"CLOSE_CONTACT_CHECK_CODE\" TEXT," + // 30: closeContactCheckCode
                "\"NEXT_FOLLOWUP_DATE\" INTEGER," + // 31: nextFollowupDate
                "\"FOLLOWUP_DOCTOR_ID\" TEXT," + // 32: followupDoctorId
                "\"FOLLOWUP_DOCTOR_NAME\" TEXT," + // 33: followupDoctorName
                "\"IS_CANCEL\" INTEGER," + // 34: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 35: createOrgId
                "\"ORG_NAME\" TEXT," + // 36: orgName
                "\"CREATOR_ID\" TEXT," + // 37: creatorId
                "\"CREATOR\" TEXT," + // 38: creator
                "\"CREATE_TIME\" INTEGER," + // 39: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 40: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 41: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 42: modifierId
                "\"MODIFIER\" TEXT," + // 43: modifier
                "\"MODIFIED_TIME\" INTEGER);"); // 44: modifiedTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TUBERCULOSIS_FIRST_FOLLOWUP\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TuberculosisFirstFollowup entity) {
        stmt.clearBindings();
 
        String tuberculosisFirstFollowupId = entity.getTuberculosisFirstFollowupId();
        if (tuberculosisFirstFollowupId != null) {
            stmt.bindString(1, tuberculosisFirstFollowupId);
        }
 
        String tuberculosisInfoId = entity.getTuberculosisInfoId();
        if (tuberculosisInfoId != null) {
            stmt.bindString(2, tuberculosisInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(3, personInfoId);
        }
 
        String tuberculosisFirstFollowupNo = entity.getTuberculosisFirstFollowupNo();
        if (tuberculosisFirstFollowupNo != null) {
            stmt.bindString(4, tuberculosisFirstFollowupNo);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(5, name);
        }
 
        java.util.Date followupDate = entity.getFollowupDate();
        if (followupDate != null) {
            stmt.bindLong(6, followupDate.getTime());
        }
 
        String followupWayCode = entity.getFollowupWayCode();
        if (followupWayCode != null) {
            stmt.bindString(7, followupWayCode);
        }
 
        String patientTypeCode = entity.getPatientTypeCode();
        if (patientTypeCode != null) {
            stmt.bindString(8, patientTypeCode);
        }
 
        String sputumCode = entity.getSputumCode();
        if (sputumCode != null) {
            stmt.bindString(9, sputumCode);
        }
 
        String drugResistanceCode = entity.getDrugResistanceCode();
        if (drugResistanceCode != null) {
            stmt.bindString(10, drugResistanceCode);
        }
 
        String chemotherapyCode = entity.getChemotherapyCode();
        if (chemotherapyCode != null) {
            stmt.bindString(11, chemotherapyCode);
        }
 
        String chemotherapyValue = entity.getChemotherapyValue();
        if (chemotherapyValue != null) {
            stmt.bindString(12, chemotherapyValue);
        }
 
        String drugUseCode = entity.getDrugUseCode();
        if (drugUseCode != null) {
            stmt.bindString(13, drugUseCode);
        }
 
        String supervisorKindCode = entity.getSupervisorKindCode();
        if (supervisorKindCode != null) {
            stmt.bindString(14, supervisorKindCode);
        }
 
        String separateRoomCode = entity.getSeparateRoomCode();
        if (separateRoomCode != null) {
            stmt.bindString(15, separateRoomCode);
        }
 
        String ventilationCode = entity.getVentilationCode();
        if (ventilationCode != null) {
            stmt.bindString(16, ventilationCode);
        }
 
        Integer dailySmoking = entity.getDailySmoking();
        if (dailySmoking != null) {
            stmt.bindLong(17, dailySmoking);
        }
 
        Integer aimDailySmoking = entity.getAimDailySmoking();
        if (aimDailySmoking != null) {
            stmt.bindLong(18, aimDailySmoking);
        }
 
        Integer dailyDrinking = entity.getDailyDrinking();
        if (dailyDrinking != null) {
            stmt.bindLong(19, dailyDrinking);
        }
 
        Integer aimDailyDrinking = entity.getAimDailyDrinking();
        if (aimDailyDrinking != null) {
            stmt.bindLong(20, aimDailyDrinking);
        }
 
        String getMedicinePlace = entity.getGetMedicinePlace();
        if (getMedicinePlace != null) {
            stmt.bindString(21, getMedicinePlace);
        }
 
        java.util.Date getMedicineDate = entity.getGetMedicineDate();
        if (getMedicineDate != null) {
            stmt.bindLong(22, getMedicineDate.getTime());
        }
 
        String medicationRecCardCode = entity.getMedicationRecCardCode();
        if (medicationRecCardCode != null) {
            stmt.bindString(23, medicationRecCardCode);
        }
 
        String drugLimitCode = entity.getDrugLimitCode();
        if (drugLimitCode != null) {
            stmt.bindString(24, drugLimitCode);
        }
 
        String treatmentCourseCode = entity.getTreatmentCourseCode();
        if (treatmentCourseCode != null) {
            stmt.bindString(25, treatmentCourseCode);
        }
 
        String irregularMedicationCode = entity.getIrregularMedicationCode();
        if (irregularMedicationCode != null) {
            stmt.bindString(26, irregularMedicationCode);
        }
 
        String artCode = entity.getArtCode();
        if (artCode != null) {
            stmt.bindString(27, artCode);
        }
 
        String treatmentSputumCode = entity.getTreatmentSputumCode();
        if (treatmentSputumCode != null) {
            stmt.bindString(28, treatmentSputumCode);
        }
 
        String adhereMedicationCode = entity.getAdhereMedicationCode();
        if (adhereMedicationCode != null) {
            stmt.bindString(29, adhereMedicationCode);
        }
 
        String livingHabitsCode = entity.getLivingHabitsCode();
        if (livingHabitsCode != null) {
            stmt.bindString(30, livingHabitsCode);
        }
 
        String closeContactCheckCode = entity.getCloseContactCheckCode();
        if (closeContactCheckCode != null) {
            stmt.bindString(31, closeContactCheckCode);
        }
 
        java.util.Date nextFollowupDate = entity.getNextFollowupDate();
        if (nextFollowupDate != null) {
            stmt.bindLong(32, nextFollowupDate.getTime());
        }
 
        String followupDoctorId = entity.getFollowupDoctorId();
        if (followupDoctorId != null) {
            stmt.bindString(33, followupDoctorId);
        }
 
        String followupDoctorName = entity.getFollowupDoctorName();
        if (followupDoctorName != null) {
            stmt.bindString(34, followupDoctorName);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(35, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(36, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(37, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(38, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(39, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(40, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(41, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(42, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(43, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(44, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(45, modifiedTime.getTime());
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TuberculosisFirstFollowup entity) {
        stmt.clearBindings();
 
        String tuberculosisFirstFollowupId = entity.getTuberculosisFirstFollowupId();
        if (tuberculosisFirstFollowupId != null) {
            stmt.bindString(1, tuberculosisFirstFollowupId);
        }
 
        String tuberculosisInfoId = entity.getTuberculosisInfoId();
        if (tuberculosisInfoId != null) {
            stmt.bindString(2, tuberculosisInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(3, personInfoId);
        }
 
        String tuberculosisFirstFollowupNo = entity.getTuberculosisFirstFollowupNo();
        if (tuberculosisFirstFollowupNo != null) {
            stmt.bindString(4, tuberculosisFirstFollowupNo);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(5, name);
        }
 
        java.util.Date followupDate = entity.getFollowupDate();
        if (followupDate != null) {
            stmt.bindLong(6, followupDate.getTime());
        }
 
        String followupWayCode = entity.getFollowupWayCode();
        if (followupWayCode != null) {
            stmt.bindString(7, followupWayCode);
        }
 
        String patientTypeCode = entity.getPatientTypeCode();
        if (patientTypeCode != null) {
            stmt.bindString(8, patientTypeCode);
        }
 
        String sputumCode = entity.getSputumCode();
        if (sputumCode != null) {
            stmt.bindString(9, sputumCode);
        }
 
        String drugResistanceCode = entity.getDrugResistanceCode();
        if (drugResistanceCode != null) {
            stmt.bindString(10, drugResistanceCode);
        }
 
        String chemotherapyCode = entity.getChemotherapyCode();
        if (chemotherapyCode != null) {
            stmt.bindString(11, chemotherapyCode);
        }
 
        String chemotherapyValue = entity.getChemotherapyValue();
        if (chemotherapyValue != null) {
            stmt.bindString(12, chemotherapyValue);
        }
 
        String drugUseCode = entity.getDrugUseCode();
        if (drugUseCode != null) {
            stmt.bindString(13, drugUseCode);
        }
 
        String supervisorKindCode = entity.getSupervisorKindCode();
        if (supervisorKindCode != null) {
            stmt.bindString(14, supervisorKindCode);
        }
 
        String separateRoomCode = entity.getSeparateRoomCode();
        if (separateRoomCode != null) {
            stmt.bindString(15, separateRoomCode);
        }
 
        String ventilationCode = entity.getVentilationCode();
        if (ventilationCode != null) {
            stmt.bindString(16, ventilationCode);
        }
 
        Integer dailySmoking = entity.getDailySmoking();
        if (dailySmoking != null) {
            stmt.bindLong(17, dailySmoking);
        }
 
        Integer aimDailySmoking = entity.getAimDailySmoking();
        if (aimDailySmoking != null) {
            stmt.bindLong(18, aimDailySmoking);
        }
 
        Integer dailyDrinking = entity.getDailyDrinking();
        if (dailyDrinking != null) {
            stmt.bindLong(19, dailyDrinking);
        }
 
        Integer aimDailyDrinking = entity.getAimDailyDrinking();
        if (aimDailyDrinking != null) {
            stmt.bindLong(20, aimDailyDrinking);
        }
 
        String getMedicinePlace = entity.getGetMedicinePlace();
        if (getMedicinePlace != null) {
            stmt.bindString(21, getMedicinePlace);
        }
 
        java.util.Date getMedicineDate = entity.getGetMedicineDate();
        if (getMedicineDate != null) {
            stmt.bindLong(22, getMedicineDate.getTime());
        }
 
        String medicationRecCardCode = entity.getMedicationRecCardCode();
        if (medicationRecCardCode != null) {
            stmt.bindString(23, medicationRecCardCode);
        }
 
        String drugLimitCode = entity.getDrugLimitCode();
        if (drugLimitCode != null) {
            stmt.bindString(24, drugLimitCode);
        }
 
        String treatmentCourseCode = entity.getTreatmentCourseCode();
        if (treatmentCourseCode != null) {
            stmt.bindString(25, treatmentCourseCode);
        }
 
        String irregularMedicationCode = entity.getIrregularMedicationCode();
        if (irregularMedicationCode != null) {
            stmt.bindString(26, irregularMedicationCode);
        }
 
        String artCode = entity.getArtCode();
        if (artCode != null) {
            stmt.bindString(27, artCode);
        }
 
        String treatmentSputumCode = entity.getTreatmentSputumCode();
        if (treatmentSputumCode != null) {
            stmt.bindString(28, treatmentSputumCode);
        }
 
        String adhereMedicationCode = entity.getAdhereMedicationCode();
        if (adhereMedicationCode != null) {
            stmt.bindString(29, adhereMedicationCode);
        }
 
        String livingHabitsCode = entity.getLivingHabitsCode();
        if (livingHabitsCode != null) {
            stmt.bindString(30, livingHabitsCode);
        }
 
        String closeContactCheckCode = entity.getCloseContactCheckCode();
        if (closeContactCheckCode != null) {
            stmt.bindString(31, closeContactCheckCode);
        }
 
        java.util.Date nextFollowupDate = entity.getNextFollowupDate();
        if (nextFollowupDate != null) {
            stmt.bindLong(32, nextFollowupDate.getTime());
        }
 
        String followupDoctorId = entity.getFollowupDoctorId();
        if (followupDoctorId != null) {
            stmt.bindString(33, followupDoctorId);
        }
 
        String followupDoctorName = entity.getFollowupDoctorName();
        if (followupDoctorName != null) {
            stmt.bindString(34, followupDoctorName);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(35, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(36, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(37, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(38, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(39, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(40, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(41, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(42, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(43, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(44, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(45, modifiedTime.getTime());
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public TuberculosisFirstFollowup readEntity(Cursor cursor, int offset) {
        TuberculosisFirstFollowup entity = new TuberculosisFirstFollowup( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // tuberculosisFirstFollowupId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // tuberculosisInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // personInfoId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // tuberculosisFirstFollowupNo
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // name
            cursor.isNull(offset + 5) ? null : new java.util.Date(cursor.getLong(offset + 5)), // followupDate
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // followupWayCode
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // patientTypeCode
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // sputumCode
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // drugResistanceCode
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // chemotherapyCode
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // chemotherapyValue
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // drugUseCode
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // supervisorKindCode
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // separateRoomCode
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // ventilationCode
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // dailySmoking
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // aimDailySmoking
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // dailyDrinking
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // aimDailyDrinking
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // getMedicinePlace
            cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)), // getMedicineDate
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // medicationRecCardCode
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // drugLimitCode
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // treatmentCourseCode
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // irregularMedicationCode
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // artCode
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // treatmentSputumCode
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // adhereMedicationCode
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // livingHabitsCode
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // closeContactCheckCode
            cursor.isNull(offset + 31) ? null : new java.util.Date(cursor.getLong(offset + 31)), // nextFollowupDate
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // followupDoctorId
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // followupDoctorName
            cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34), // isCancel
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // createOrgId
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // orgName
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // creatorId
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // creator
            cursor.isNull(offset + 39) ? null : new java.util.Date(cursor.getLong(offset + 39)), // createTime
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // modifiedOrgId
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // modifiedOrgName
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // modifierId
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // modifier
            cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)) // modifiedTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TuberculosisFirstFollowup entity, int offset) {
        entity.setTuberculosisFirstFollowupId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setTuberculosisInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPersonInfoId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTuberculosisFirstFollowupNo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFollowupDate(cursor.isNull(offset + 5) ? null : new java.util.Date(cursor.getLong(offset + 5)));
        entity.setFollowupWayCode(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setPatientTypeCode(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSputumCode(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setDrugResistanceCode(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setChemotherapyCode(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setChemotherapyValue(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setDrugUseCode(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setSupervisorKindCode(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setSeparateRoomCode(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setVentilationCode(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setDailySmoking(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setAimDailySmoking(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setDailyDrinking(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setAimDailyDrinking(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setGetMedicinePlace(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setGetMedicineDate(cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)));
        entity.setMedicationRecCardCode(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setDrugLimitCode(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setTreatmentCourseCode(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setIrregularMedicationCode(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setArtCode(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setTreatmentSputumCode(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setAdhereMedicationCode(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setLivingHabitsCode(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setCloseContactCheckCode(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setNextFollowupDate(cursor.isNull(offset + 31) ? null : new java.util.Date(cursor.getLong(offset + 31)));
        entity.setFollowupDoctorId(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setFollowupDoctorName(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setIsCancel(cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34));
        entity.setCreateOrgId(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setOrgName(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCreatorId(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setCreator(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setCreateTime(cursor.isNull(offset + 39) ? null : new java.util.Date(cursor.getLong(offset + 39)));
        entity.setModifiedOrgId(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setModifiedOrgName(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setModifierId(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setModifier(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setModifiedTime(cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(TuberculosisFirstFollowup entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(TuberculosisFirstFollowup entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
