package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.diabetes.DiabetesInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DIABETES_INFO".
*/
public class DiabetesInfoDao extends AbstractDao<DiabetesInfo, Void> {

    public static final String TABLENAME = "DIABETES_INFO";

    /**
     * Properties of entity DiabetesInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property DiabetesInfoId = new Property(0, String.class, "diabetesInfoId", false, "DIABETES_INFO_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property ManageOrgId = new Property(2, String.class, "manageOrgId", false, "MANAGE_ORG_ID");
        public final static Property DiabetesInfoNo = new Property(3, String.class, "diabetesInfoNo", false, "DIABETES_INFO_NO");
        public final static Property PersonalHistory = new Property(4, String.class, "personalHistory", false, "PERSONAL_HISTORY");
        public final static Property DiseaseHistory = new Property(5, String.class, "diseaseHistory", false, "DISEASE_HISTORY");
        public final static Property DmFamilyHistory = new Property(6, String.class, "dmFamilyHistory", false, "DM_FAMILY_HISTORY");
        public final static Property AllergicHistory = new Property(7, String.class, "allergicHistory", false, "ALLERGIC_HISTORY");
        public final static Property DiagnoseDate = new Property(8, java.util.Date.class, "diagnoseDate", false, "DIAGNOSE_DATE");
        public final static Property DiagnoseModeCode = new Property(9, String.class, "diagnoseModeCode", false, "DIAGNOSE_MODE_CODE");
        public final static Property DiagnoseOrgName = new Property(10, String.class, "diagnoseOrgName", false, "DIAGNOSE_ORG_NAME");
        public final static Property DiagnoseHyperCode = new Property(11, String.class, "diagnoseHyperCode", false, "DIAGNOSE_HYPER_CODE");
        public final static Property MedicationName = new Property(12, String.class, "medicationName", false, "MEDICATION_NAME");
        public final static Property DiagnoseRetionopathyCode = new Property(13, String.class, "diagnoseRetionopathyCode", false, "DIAGNOSE_RETIONOPATHY_CODE");
        public final static Property DiagnoseDmFootCode = new Property(14, String.class, "diagnoseDmFootCode", false, "DIAGNOSE_DM_FOOT_CODE");
        public final static Property DiagnoseDnCode = new Property(15, String.class, "diagnoseDnCode", false, "DIAGNOSE_DN_CODE");
        public final static Property DiagnoseNeuropathyCode = new Property(16, String.class, "diagnoseNeuropathyCode", false, "DIAGNOSE_NEUROPATHY_CODE");
        public final static Property DiagnoseHyperlipidemiaCode = new Property(17, String.class, "diagnoseHyperlipidemiaCode", false, "DIAGNOSE_HYPERLIPIDEMIA_CODE");
        public final static Property DiagnoseAmiCode = new Property(18, String.class, "diagnoseAmiCode", false, "DIAGNOSE_AMI_CODE");
        public final static Property DiagnoseStrokeCode = new Property(19, String.class, "diagnoseStrokeCode", false, "DIAGNOSE_STROKE_CODE");
        public final static Property PastFbg = new Property(20, Double.class, "pastFbg", false, "PAST_FBG");
        public final static Property PastPbg = new Property(21, Double.class, "pastPbg", false, "PAST_PBG");
        public final static Property PastGhb = new Property(22, Double.class, "pastGhb", false, "PAST_GHB");
        public final static Property SmokingCode = new Property(23, String.class, "smokingCode", false, "SMOKING_CODE");
        public final static Property DailySmoking = new Property(24, Integer.class, "dailySmoking", false, "DAILY_SMOKING");
        public final static Property DrinkingCode = new Property(25, String.class, "drinkingCode", false, "DRINKING_CODE");
        public final static Property DailyDrinking = new Property(26, Integer.class, "dailyDrinking", false, "DAILY_DRINKING");
        public final static Property Height = new Property(27, Double.class, "height", false, "HEIGHT");
        public final static Property Weight = new Property(28, Double.class, "weight", false, "WEIGHT");
        public final static Property Bmi = new Property(29, Double.class, "bmi", false, "BMI");
        public final static Property Fbg = new Property(30, Double.class, "fbg", false, "FBG");
        public final static Property Pbg = new Property(31, Double.class, "pbg", false, "PBG");
        public final static Property Ghb = new Property(32, Double.class, "ghb", false, "GHB");
        public final static Property Tg = new Property(33, Double.class, "tg", false, "TG");
        public final static Property Sbp = new Property(34, Integer.class, "sbp", false, "SBP");
        public final static Property Dbp = new Property(35, Integer.class, "dbp", false, "DBP");
        public final static Property Tcho = new Property(36, Double.class, "tcho", false, "TCHO");
        public final static Property Ldlc = new Property(37, Double.class, "ldlc", false, "LDLC");
        public final static Property Hdlc = new Property(38, Double.class, "hdlc", false, "HDLC");
        public final static Property RetionopathyCode = new Property(39, String.class, "retionopathyCode", false, "RETIONOPATHY_CODE");
        public final static Property NeuropathyCode = new Property(40, String.class, "neuropathyCode", false, "NEUROPATHY_CODE");
        public final static Property DmFootCode = new Property(41, String.class, "dmFootCode", false, "DM_FOOT_CODE");
        public final static Property UrineMalb = new Property(42, Double.class, "urineMalb", false, "URINE_MALB");
        public final static Property DietControlCode = new Property(43, String.class, "dietControlCode", false, "DIET_CONTROL_CODE");
        public final static Property ExerciseCode = new Property(44, String.class, "exerciseCode", false, "EXERCISE_CODE");
        public final static Property ExerciseFreqCode = new Property(45, Integer.class, "exerciseFreqCode", false, "EXERCISE_FREQ_CODE");
        public final static Property ExerciseDurationMins = new Property(46, Integer.class, "exerciseDurationMins", false, "EXERCISE_DURATION_MINS");
        public final static Property TakeMedicineCode = new Property(47, String.class, "takeMedicineCode", false, "TAKE_MEDICINE_CODE");
        public final static Property InsulinCode = new Property(48, String.class, "insulinCode", false, "INSULIN_CODE");
        public final static Property InsulinType = new Property(49, String.class, "insulinType", false, "INSULIN_TYPE");
        public final static Property InsulinPerDose = new Property(50, String.class, "insulinPerDose", false, "INSULIN_PER_DOSE");
        public final static Property StopSmokingCode = new Property(51, String.class, "stopSmokingCode", false, "STOP_SMOKING_CODE");
        public final static Property LimitAlcoholCode = new Property(52, String.class, "limitAlcoholCode", false, "LIMIT_ALCOHOL_CODE");
        public final static Property LastVisitDate = new Property(53, java.util.Date.class, "lastVisitDate", false, "LAST_VISIT_DATE");
        public final static Property NextVisitDate = new Property(54, java.util.Date.class, "nextVisitDate", false, "NEXT_VISIT_DATE");
        public final static Property IsCancel = new Property(55, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(56, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(57, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(58, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(59, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(60, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(61, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(62, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(63, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(64, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(65, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
        public final static Property CompanyTel = new Property(66, String.class, "companyTel", false, "COMPANY_TEL");
        public final static Property FamilyTel = new Property(67, String.class, "familyTel", false, "FAMILY_TEL");
        public final static Property HealthcareOrg = new Property(68, String.class, "healthcareOrg", false, "HEALTHCARE_ORG");
        public final static Property UserCreateTime = new Property(69, java.util.Date.class, "userCreateTime", false, "USER_CREATE_TIME");
        public final static Property RespDoctorId = new Property(70, String.class, "respDoctorId", false, "RESP_DOCTOR_ID");
        public final static Property RespDoctorName = new Property(71, String.class, "respDoctorName", false, "RESP_DOCTOR_NAME");
        public final static Property JsonDetail = new Property(72, String.class, "jsonDetail", false, "JSON_DETAIL");
        public final static Property HouseholdRegister = new Property(73, String.class, "householdRegister", false, "HOUSEHOLD_REGISTER");
    };


    public DiabetesInfoDao(DaoConfig config) {
        super(config);
    }
    
    public DiabetesInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DIABETES_INFO\" (" + //
                "\"DIABETES_INFO_ID\" TEXT," + // 0: diabetesInfoId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"MANAGE_ORG_ID\" TEXT," + // 2: manageOrgId
                "\"DIABETES_INFO_NO\" TEXT," + // 3: diabetesInfoNo
                "\"PERSONAL_HISTORY\" TEXT," + // 4: personalHistory
                "\"DISEASE_HISTORY\" TEXT," + // 5: diseaseHistory
                "\"DM_FAMILY_HISTORY\" TEXT," + // 6: dmFamilyHistory
                "\"ALLERGIC_HISTORY\" TEXT," + // 7: allergicHistory
                "\"DIAGNOSE_DATE\" INTEGER," + // 8: diagnoseDate
                "\"DIAGNOSE_MODE_CODE\" TEXT," + // 9: diagnoseModeCode
                "\"DIAGNOSE_ORG_NAME\" TEXT," + // 10: diagnoseOrgName
                "\"DIAGNOSE_HYPER_CODE\" TEXT," + // 11: diagnoseHyperCode
                "\"MEDICATION_NAME\" TEXT," + // 12: medicationName
                "\"DIAGNOSE_RETIONOPATHY_CODE\" TEXT," + // 13: diagnoseRetionopathyCode
                "\"DIAGNOSE_DM_FOOT_CODE\" TEXT," + // 14: diagnoseDmFootCode
                "\"DIAGNOSE_DN_CODE\" TEXT," + // 15: diagnoseDnCode
                "\"DIAGNOSE_NEUROPATHY_CODE\" TEXT," + // 16: diagnoseNeuropathyCode
                "\"DIAGNOSE_HYPERLIPIDEMIA_CODE\" TEXT," + // 17: diagnoseHyperlipidemiaCode
                "\"DIAGNOSE_AMI_CODE\" TEXT," + // 18: diagnoseAmiCode
                "\"DIAGNOSE_STROKE_CODE\" TEXT," + // 19: diagnoseStrokeCode
                "\"PAST_FBG\" REAL," + // 20: pastFbg
                "\"PAST_PBG\" REAL," + // 21: pastPbg
                "\"PAST_GHB\" REAL," + // 22: pastGhb
                "\"SMOKING_CODE\" TEXT," + // 23: smokingCode
                "\"DAILY_SMOKING\" INTEGER," + // 24: dailySmoking
                "\"DRINKING_CODE\" TEXT," + // 25: drinkingCode
                "\"DAILY_DRINKING\" INTEGER," + // 26: dailyDrinking
                "\"HEIGHT\" REAL," + // 27: height
                "\"WEIGHT\" REAL," + // 28: weight
                "\"BMI\" REAL," + // 29: bmi
                "\"FBG\" REAL," + // 30: fbg
                "\"PBG\" REAL," + // 31: pbg
                "\"GHB\" REAL," + // 32: ghb
                "\"TG\" REAL," + // 33: tg
                "\"SBP\" INTEGER," + // 34: sbp
                "\"DBP\" INTEGER," + // 35: dbp
                "\"TCHO\" REAL," + // 36: tcho
                "\"LDLC\" REAL," + // 37: ldlc
                "\"HDLC\" REAL," + // 38: hdlc
                "\"RETIONOPATHY_CODE\" TEXT," + // 39: retionopathyCode
                "\"NEUROPATHY_CODE\" TEXT," + // 40: neuropathyCode
                "\"DM_FOOT_CODE\" TEXT," + // 41: dmFootCode
                "\"URINE_MALB\" REAL," + // 42: urineMalb
                "\"DIET_CONTROL_CODE\" TEXT," + // 43: dietControlCode
                "\"EXERCISE_CODE\" TEXT," + // 44: exerciseCode
                "\"EXERCISE_FREQ_CODE\" INTEGER," + // 45: exerciseFreqCode
                "\"EXERCISE_DURATION_MINS\" INTEGER," + // 46: exerciseDurationMins
                "\"TAKE_MEDICINE_CODE\" TEXT," + // 47: takeMedicineCode
                "\"INSULIN_CODE\" TEXT," + // 48: insulinCode
                "\"INSULIN_TYPE\" TEXT," + // 49: insulinType
                "\"INSULIN_PER_DOSE\" TEXT," + // 50: insulinPerDose
                "\"STOP_SMOKING_CODE\" TEXT," + // 51: stopSmokingCode
                "\"LIMIT_ALCOHOL_CODE\" TEXT," + // 52: limitAlcoholCode
                "\"LAST_VISIT_DATE\" INTEGER," + // 53: lastVisitDate
                "\"NEXT_VISIT_DATE\" INTEGER," + // 54: nextVisitDate
                "\"IS_CANCEL\" INTEGER," + // 55: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 56: createOrgId
                "\"ORG_NAME\" TEXT," + // 57: orgName
                "\"CREATOR_ID\" TEXT," + // 58: creatorId
                "\"CREATOR\" TEXT," + // 59: creator
                "\"CREATE_TIME\" INTEGER," + // 60: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 61: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 62: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 63: modifierId
                "\"MODIFIER\" TEXT," + // 64: modifier
                "\"MODIFIED_TIME\" INTEGER," + // 65: modifiedTime
                "\"COMPANY_TEL\" TEXT," + // 66: companyTel
                "\"FAMILY_TEL\" TEXT," + // 67: familyTel
                "\"HEALTHCARE_ORG\" TEXT," + // 68: healthcareOrg
                "\"USER_CREATE_TIME\" INTEGER," + // 69: userCreateTime
                "\"RESP_DOCTOR_ID\" TEXT," + // 70: respDoctorId
                "\"RESP_DOCTOR_NAME\" TEXT," + // 71: respDoctorName
                "\"JSON_DETAIL\" TEXT," + // 72: jsonDetail
                "\"HOUSEHOLD_REGISTER\" TEXT);"); // 73: householdRegister
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DIABETES_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, DiabetesInfo entity) {
        stmt.clearBindings();
 
        String diabetesInfoId = entity.getDiabetesInfoId();
        if (diabetesInfoId != null) {
            stmt.bindString(1, diabetesInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String manageOrgId = entity.getManageOrgId();
        if (manageOrgId != null) {
            stmt.bindString(3, manageOrgId);
        }
 
        String diabetesInfoNo = entity.getDiabetesInfoNo();
        if (diabetesInfoNo != null) {
            stmt.bindString(4, diabetesInfoNo);
        }
 
        String personalHistory = entity.getPersonalHistory();
        if (personalHistory != null) {
            stmt.bindString(5, personalHistory);
        }
 
        String diseaseHistory = entity.getDiseaseHistory();
        if (diseaseHistory != null) {
            stmt.bindString(6, diseaseHistory);
        }
 
        String dmFamilyHistory = entity.getDmFamilyHistory();
        if (dmFamilyHistory != null) {
            stmt.bindString(7, dmFamilyHistory);
        }
 
        String allergicHistory = entity.getAllergicHistory();
        if (allergicHistory != null) {
            stmt.bindString(8, allergicHistory);
        }
 
        java.util.Date diagnoseDate = entity.getDiagnoseDate();
        if (diagnoseDate != null) {
            stmt.bindLong(9, diagnoseDate.getTime());
        }
 
        String diagnoseModeCode = entity.getDiagnoseModeCode();
        if (diagnoseModeCode != null) {
            stmt.bindString(10, diagnoseModeCode);
        }
 
        String diagnoseOrgName = entity.getDiagnoseOrgName();
        if (diagnoseOrgName != null) {
            stmt.bindString(11, diagnoseOrgName);
        }
 
        String diagnoseHyperCode = entity.getDiagnoseHyperCode();
        if (diagnoseHyperCode != null) {
            stmt.bindString(12, diagnoseHyperCode);
        }
 
        String medicationName = entity.getMedicationName();
        if (medicationName != null) {
            stmt.bindString(13, medicationName);
        }
 
        String diagnoseRetionopathyCode = entity.getDiagnoseRetionopathyCode();
        if (diagnoseRetionopathyCode != null) {
            stmt.bindString(14, diagnoseRetionopathyCode);
        }
 
        String diagnoseDmFootCode = entity.getDiagnoseDmFootCode();
        if (diagnoseDmFootCode != null) {
            stmt.bindString(15, diagnoseDmFootCode);
        }
 
        String diagnoseDnCode = entity.getDiagnoseDnCode();
        if (diagnoseDnCode != null) {
            stmt.bindString(16, diagnoseDnCode);
        }
 
        String diagnoseNeuropathyCode = entity.getDiagnoseNeuropathyCode();
        if (diagnoseNeuropathyCode != null) {
            stmt.bindString(17, diagnoseNeuropathyCode);
        }
 
        String diagnoseHyperlipidemiaCode = entity.getDiagnoseHyperlipidemiaCode();
        if (diagnoseHyperlipidemiaCode != null) {
            stmt.bindString(18, diagnoseHyperlipidemiaCode);
        }
 
        String diagnoseAmiCode = entity.getDiagnoseAmiCode();
        if (diagnoseAmiCode != null) {
            stmt.bindString(19, diagnoseAmiCode);
        }
 
        String diagnoseStrokeCode = entity.getDiagnoseStrokeCode();
        if (diagnoseStrokeCode != null) {
            stmt.bindString(20, diagnoseStrokeCode);
        }
 
        Double pastFbg = entity.getPastFbg();
        if (pastFbg != null) {
            stmt.bindDouble(21, pastFbg);
        }
 
        Double pastPbg = entity.getPastPbg();
        if (pastPbg != null) {
            stmt.bindDouble(22, pastPbg);
        }
 
        Double pastGhb = entity.getPastGhb();
        if (pastGhb != null) {
            stmt.bindDouble(23, pastGhb);
        }
 
        String smokingCode = entity.getSmokingCode();
        if (smokingCode != null) {
            stmt.bindString(24, smokingCode);
        }
 
        Integer dailySmoking = entity.getDailySmoking();
        if (dailySmoking != null) {
            stmt.bindLong(25, dailySmoking);
        }
 
        String drinkingCode = entity.getDrinkingCode();
        if (drinkingCode != null) {
            stmt.bindString(26, drinkingCode);
        }
 
        Integer dailyDrinking = entity.getDailyDrinking();
        if (dailyDrinking != null) {
            stmt.bindLong(27, dailyDrinking);
        }
 
        Double height = entity.getHeight();
        if (height != null) {
            stmt.bindDouble(28, height);
        }
 
        Double weight = entity.getWeight();
        if (weight != null) {
            stmt.bindDouble(29, weight);
        }
 
        Double bmi = entity.getBmi();
        if (bmi != null) {
            stmt.bindDouble(30, bmi);
        }
 
        Double fbg = entity.getFbg();
        if (fbg != null) {
            stmt.bindDouble(31, fbg);
        }
 
        Double pbg = entity.getPbg();
        if (pbg != null) {
            stmt.bindDouble(32, pbg);
        }
 
        Double ghb = entity.getGhb();
        if (ghb != null) {
            stmt.bindDouble(33, ghb);
        }
 
        Double tg = entity.getTg();
        if (tg != null) {
            stmt.bindDouble(34, tg);
        }
 
        Integer sbp = entity.getSbp();
        if (sbp != null) {
            stmt.bindLong(35, sbp);
        }
 
        Integer dbp = entity.getDbp();
        if (dbp != null) {
            stmt.bindLong(36, dbp);
        }
 
        Double tcho = entity.getTcho();
        if (tcho != null) {
            stmt.bindDouble(37, tcho);
        }
 
        Double ldlc = entity.getLdlc();
        if (ldlc != null) {
            stmt.bindDouble(38, ldlc);
        }
 
        Double hdlc = entity.getHdlc();
        if (hdlc != null) {
            stmt.bindDouble(39, hdlc);
        }
 
        String retionopathyCode = entity.getRetionopathyCode();
        if (retionopathyCode != null) {
            stmt.bindString(40, retionopathyCode);
        }
 
        String neuropathyCode = entity.getNeuropathyCode();
        if (neuropathyCode != null) {
            stmt.bindString(41, neuropathyCode);
        }
 
        String dmFootCode = entity.getDmFootCode();
        if (dmFootCode != null) {
            stmt.bindString(42, dmFootCode);
        }
 
        Double urineMalb = entity.getUrineMalb();
        if (urineMalb != null) {
            stmt.bindDouble(43, urineMalb);
        }
 
        String dietControlCode = entity.getDietControlCode();
        if (dietControlCode != null) {
            stmt.bindString(44, dietControlCode);
        }
 
        String exerciseCode = entity.getExerciseCode();
        if (exerciseCode != null) {
            stmt.bindString(45, exerciseCode);
        }
 
        Integer exerciseFreqCode = entity.getExerciseFreqCode();
        if (exerciseFreqCode != null) {
            stmt.bindLong(46, exerciseFreqCode);
        }
 
        Integer exerciseDurationMins = entity.getExerciseDurationMins();
        if (exerciseDurationMins != null) {
            stmt.bindLong(47, exerciseDurationMins);
        }
 
        String takeMedicineCode = entity.getTakeMedicineCode();
        if (takeMedicineCode != null) {
            stmt.bindString(48, takeMedicineCode);
        }
 
        String insulinCode = entity.getInsulinCode();
        if (insulinCode != null) {
            stmt.bindString(49, insulinCode);
        }
 
        String insulinType = entity.getInsulinType();
        if (insulinType != null) {
            stmt.bindString(50, insulinType);
        }
 
        String insulinPerDose = entity.getInsulinPerDose();
        if (insulinPerDose != null) {
            stmt.bindString(51, insulinPerDose);
        }
 
        String stopSmokingCode = entity.getStopSmokingCode();
        if (stopSmokingCode != null) {
            stmt.bindString(52, stopSmokingCode);
        }
 
        String limitAlcoholCode = entity.getLimitAlcoholCode();
        if (limitAlcoholCode != null) {
            stmt.bindString(53, limitAlcoholCode);
        }
 
        java.util.Date lastVisitDate = entity.getLastVisitDate();
        if (lastVisitDate != null) {
            stmt.bindLong(54, lastVisitDate.getTime());
        }
 
        java.util.Date nextVisitDate = entity.getNextVisitDate();
        if (nextVisitDate != null) {
            stmt.bindLong(55, nextVisitDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(56, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(57, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(58, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(59, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(60, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(61, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(62, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(63, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(64, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(65, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(66, modifiedTime.getTime());
        }
 
        String companyTel = entity.getCompanyTel();
        if (companyTel != null) {
            stmt.bindString(67, companyTel);
        }
 
        String familyTel = entity.getFamilyTel();
        if (familyTel != null) {
            stmt.bindString(68, familyTel);
        }
 
        String healthcareOrg = entity.getHealthcareOrg();
        if (healthcareOrg != null) {
            stmt.bindString(69, healthcareOrg);
        }
 
        java.util.Date userCreateTime = entity.getUserCreateTime();
        if (userCreateTime != null) {
            stmt.bindLong(70, userCreateTime.getTime());
        }
 
        String respDoctorId = entity.getRespDoctorId();
        if (respDoctorId != null) {
            stmt.bindString(71, respDoctorId);
        }
 
        String respDoctorName = entity.getRespDoctorName();
        if (respDoctorName != null) {
            stmt.bindString(72, respDoctorName);
        }
 
        String jsonDetail = entity.getJsonDetail();
        if (jsonDetail != null) {
            stmt.bindString(73, jsonDetail);
        }
 
        String householdRegister = entity.getHouseholdRegister();
        if (householdRegister != null) {
            stmt.bindString(74, householdRegister);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, DiabetesInfo entity) {
        stmt.clearBindings();
 
        String diabetesInfoId = entity.getDiabetesInfoId();
        if (diabetesInfoId != null) {
            stmt.bindString(1, diabetesInfoId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String manageOrgId = entity.getManageOrgId();
        if (manageOrgId != null) {
            stmt.bindString(3, manageOrgId);
        }
 
        String diabetesInfoNo = entity.getDiabetesInfoNo();
        if (diabetesInfoNo != null) {
            stmt.bindString(4, diabetesInfoNo);
        }
 
        String personalHistory = entity.getPersonalHistory();
        if (personalHistory != null) {
            stmt.bindString(5, personalHistory);
        }
 
        String diseaseHistory = entity.getDiseaseHistory();
        if (diseaseHistory != null) {
            stmt.bindString(6, diseaseHistory);
        }
 
        String dmFamilyHistory = entity.getDmFamilyHistory();
        if (dmFamilyHistory != null) {
            stmt.bindString(7, dmFamilyHistory);
        }
 
        String allergicHistory = entity.getAllergicHistory();
        if (allergicHistory != null) {
            stmt.bindString(8, allergicHistory);
        }
 
        java.util.Date diagnoseDate = entity.getDiagnoseDate();
        if (diagnoseDate != null) {
            stmt.bindLong(9, diagnoseDate.getTime());
        }
 
        String diagnoseModeCode = entity.getDiagnoseModeCode();
        if (diagnoseModeCode != null) {
            stmt.bindString(10, diagnoseModeCode);
        }
 
        String diagnoseOrgName = entity.getDiagnoseOrgName();
        if (diagnoseOrgName != null) {
            stmt.bindString(11, diagnoseOrgName);
        }
 
        String diagnoseHyperCode = entity.getDiagnoseHyperCode();
        if (diagnoseHyperCode != null) {
            stmt.bindString(12, diagnoseHyperCode);
        }
 
        String medicationName = entity.getMedicationName();
        if (medicationName != null) {
            stmt.bindString(13, medicationName);
        }
 
        String diagnoseRetionopathyCode = entity.getDiagnoseRetionopathyCode();
        if (diagnoseRetionopathyCode != null) {
            stmt.bindString(14, diagnoseRetionopathyCode);
        }
 
        String diagnoseDmFootCode = entity.getDiagnoseDmFootCode();
        if (diagnoseDmFootCode != null) {
            stmt.bindString(15, diagnoseDmFootCode);
        }
 
        String diagnoseDnCode = entity.getDiagnoseDnCode();
        if (diagnoseDnCode != null) {
            stmt.bindString(16, diagnoseDnCode);
        }
 
        String diagnoseNeuropathyCode = entity.getDiagnoseNeuropathyCode();
        if (diagnoseNeuropathyCode != null) {
            stmt.bindString(17, diagnoseNeuropathyCode);
        }
 
        String diagnoseHyperlipidemiaCode = entity.getDiagnoseHyperlipidemiaCode();
        if (diagnoseHyperlipidemiaCode != null) {
            stmt.bindString(18, diagnoseHyperlipidemiaCode);
        }
 
        String diagnoseAmiCode = entity.getDiagnoseAmiCode();
        if (diagnoseAmiCode != null) {
            stmt.bindString(19, diagnoseAmiCode);
        }
 
        String diagnoseStrokeCode = entity.getDiagnoseStrokeCode();
        if (diagnoseStrokeCode != null) {
            stmt.bindString(20, diagnoseStrokeCode);
        }
 
        Double pastFbg = entity.getPastFbg();
        if (pastFbg != null) {
            stmt.bindDouble(21, pastFbg);
        }
 
        Double pastPbg = entity.getPastPbg();
        if (pastPbg != null) {
            stmt.bindDouble(22, pastPbg);
        }
 
        Double pastGhb = entity.getPastGhb();
        if (pastGhb != null) {
            stmt.bindDouble(23, pastGhb);
        }
 
        String smokingCode = entity.getSmokingCode();
        if (smokingCode != null) {
            stmt.bindString(24, smokingCode);
        }
 
        Integer dailySmoking = entity.getDailySmoking();
        if (dailySmoking != null) {
            stmt.bindLong(25, dailySmoking);
        }
 
        String drinkingCode = entity.getDrinkingCode();
        if (drinkingCode != null) {
            stmt.bindString(26, drinkingCode);
        }
 
        Integer dailyDrinking = entity.getDailyDrinking();
        if (dailyDrinking != null) {
            stmt.bindLong(27, dailyDrinking);
        }
 
        Double height = entity.getHeight();
        if (height != null) {
            stmt.bindDouble(28, height);
        }
 
        Double weight = entity.getWeight();
        if (weight != null) {
            stmt.bindDouble(29, weight);
        }
 
        Double bmi = entity.getBmi();
        if (bmi != null) {
            stmt.bindDouble(30, bmi);
        }
 
        Double fbg = entity.getFbg();
        if (fbg != null) {
            stmt.bindDouble(31, fbg);
        }
 
        Double pbg = entity.getPbg();
        if (pbg != null) {
            stmt.bindDouble(32, pbg);
        }
 
        Double ghb = entity.getGhb();
        if (ghb != null) {
            stmt.bindDouble(33, ghb);
        }
 
        Double tg = entity.getTg();
        if (tg != null) {
            stmt.bindDouble(34, tg);
        }
 
        Integer sbp = entity.getSbp();
        if (sbp != null) {
            stmt.bindLong(35, sbp);
        }
 
        Integer dbp = entity.getDbp();
        if (dbp != null) {
            stmt.bindLong(36, dbp);
        }
 
        Double tcho = entity.getTcho();
        if (tcho != null) {
            stmt.bindDouble(37, tcho);
        }
 
        Double ldlc = entity.getLdlc();
        if (ldlc != null) {
            stmt.bindDouble(38, ldlc);
        }
 
        Double hdlc = entity.getHdlc();
        if (hdlc != null) {
            stmt.bindDouble(39, hdlc);
        }
 
        String retionopathyCode = entity.getRetionopathyCode();
        if (retionopathyCode != null) {
            stmt.bindString(40, retionopathyCode);
        }
 
        String neuropathyCode = entity.getNeuropathyCode();
        if (neuropathyCode != null) {
            stmt.bindString(41, neuropathyCode);
        }
 
        String dmFootCode = entity.getDmFootCode();
        if (dmFootCode != null) {
            stmt.bindString(42, dmFootCode);
        }
 
        Double urineMalb = entity.getUrineMalb();
        if (urineMalb != null) {
            stmt.bindDouble(43, urineMalb);
        }
 
        String dietControlCode = entity.getDietControlCode();
        if (dietControlCode != null) {
            stmt.bindString(44, dietControlCode);
        }
 
        String exerciseCode = entity.getExerciseCode();
        if (exerciseCode != null) {
            stmt.bindString(45, exerciseCode);
        }
 
        Integer exerciseFreqCode = entity.getExerciseFreqCode();
        if (exerciseFreqCode != null) {
            stmt.bindLong(46, exerciseFreqCode);
        }
 
        Integer exerciseDurationMins = entity.getExerciseDurationMins();
        if (exerciseDurationMins != null) {
            stmt.bindLong(47, exerciseDurationMins);
        }
 
        String takeMedicineCode = entity.getTakeMedicineCode();
        if (takeMedicineCode != null) {
            stmt.bindString(48, takeMedicineCode);
        }
 
        String insulinCode = entity.getInsulinCode();
        if (insulinCode != null) {
            stmt.bindString(49, insulinCode);
        }
 
        String insulinType = entity.getInsulinType();
        if (insulinType != null) {
            stmt.bindString(50, insulinType);
        }
 
        String insulinPerDose = entity.getInsulinPerDose();
        if (insulinPerDose != null) {
            stmt.bindString(51, insulinPerDose);
        }
 
        String stopSmokingCode = entity.getStopSmokingCode();
        if (stopSmokingCode != null) {
            stmt.bindString(52, stopSmokingCode);
        }
 
        String limitAlcoholCode = entity.getLimitAlcoholCode();
        if (limitAlcoholCode != null) {
            stmt.bindString(53, limitAlcoholCode);
        }
 
        java.util.Date lastVisitDate = entity.getLastVisitDate();
        if (lastVisitDate != null) {
            stmt.bindLong(54, lastVisitDate.getTime());
        }
 
        java.util.Date nextVisitDate = entity.getNextVisitDate();
        if (nextVisitDate != null) {
            stmt.bindLong(55, nextVisitDate.getTime());
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(56, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(57, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(58, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(59, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(60, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(61, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(62, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(63, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(64, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(65, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(66, modifiedTime.getTime());
        }
 
        String companyTel = entity.getCompanyTel();
        if (companyTel != null) {
            stmt.bindString(67, companyTel);
        }
 
        String familyTel = entity.getFamilyTel();
        if (familyTel != null) {
            stmt.bindString(68, familyTel);
        }
 
        String healthcareOrg = entity.getHealthcareOrg();
        if (healthcareOrg != null) {
            stmt.bindString(69, healthcareOrg);
        }
 
        java.util.Date userCreateTime = entity.getUserCreateTime();
        if (userCreateTime != null) {
            stmt.bindLong(70, userCreateTime.getTime());
        }
 
        String respDoctorId = entity.getRespDoctorId();
        if (respDoctorId != null) {
            stmt.bindString(71, respDoctorId);
        }
 
        String respDoctorName = entity.getRespDoctorName();
        if (respDoctorName != null) {
            stmt.bindString(72, respDoctorName);
        }
 
        String jsonDetail = entity.getJsonDetail();
        if (jsonDetail != null) {
            stmt.bindString(73, jsonDetail);
        }
 
        String householdRegister = entity.getHouseholdRegister();
        if (householdRegister != null) {
            stmt.bindString(74, householdRegister);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public DiabetesInfo readEntity(Cursor cursor, int offset) {
        DiabetesInfo entity = new DiabetesInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // diabetesInfoId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // manageOrgId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // diabetesInfoNo
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // personalHistory
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // diseaseHistory
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // dmFamilyHistory
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // allergicHistory
            cursor.isNull(offset + 8) ? null : new java.util.Date(cursor.getLong(offset + 8)), // diagnoseDate
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // diagnoseModeCode
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // diagnoseOrgName
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // diagnoseHyperCode
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // medicationName
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // diagnoseRetionopathyCode
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // diagnoseDmFootCode
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // diagnoseDnCode
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // diagnoseNeuropathyCode
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // diagnoseHyperlipidemiaCode
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // diagnoseAmiCode
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // diagnoseStrokeCode
            cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20), // pastFbg
            cursor.isNull(offset + 21) ? null : cursor.getDouble(offset + 21), // pastPbg
            cursor.isNull(offset + 22) ? null : cursor.getDouble(offset + 22), // pastGhb
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // smokingCode
            cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24), // dailySmoking
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // drinkingCode
            cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26), // dailyDrinking
            cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27), // height
            cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28), // weight
            cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29), // bmi
            cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30), // fbg
            cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31), // pbg
            cursor.isNull(offset + 32) ? null : cursor.getDouble(offset + 32), // ghb
            cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33), // tg
            cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34), // sbp
            cursor.isNull(offset + 35) ? null : cursor.getInt(offset + 35), // dbp
            cursor.isNull(offset + 36) ? null : cursor.getDouble(offset + 36), // tcho
            cursor.isNull(offset + 37) ? null : cursor.getDouble(offset + 37), // ldlc
            cursor.isNull(offset + 38) ? null : cursor.getDouble(offset + 38), // hdlc
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // retionopathyCode
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // neuropathyCode
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // dmFootCode
            cursor.isNull(offset + 42) ? null : cursor.getDouble(offset + 42), // urineMalb
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // dietControlCode
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // exerciseCode
            cursor.isNull(offset + 45) ? null : cursor.getInt(offset + 45), // exerciseFreqCode
            cursor.isNull(offset + 46) ? null : cursor.getInt(offset + 46), // exerciseDurationMins
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // takeMedicineCode
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // insulinCode
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // insulinType
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // insulinPerDose
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // stopSmokingCode
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // limitAlcoholCode
            cursor.isNull(offset + 53) ? null : new java.util.Date(cursor.getLong(offset + 53)), // lastVisitDate
            cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)), // nextVisitDate
            cursor.isNull(offset + 55) ? null : cursor.getInt(offset + 55), // isCancel
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // createOrgId
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // orgName
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // creatorId
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // creator
            cursor.isNull(offset + 60) ? null : new java.util.Date(cursor.getLong(offset + 60)), // createTime
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // modifiedOrgId
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // modifiedOrgName
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // modifierId
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // modifier
            cursor.isNull(offset + 65) ? null : new java.util.Date(cursor.getLong(offset + 65)), // modifiedTime
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // companyTel
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // familyTel
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // healthcareOrg
            cursor.isNull(offset + 69) ? null : new java.util.Date(cursor.getLong(offset + 69)), // userCreateTime
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // respDoctorId
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // respDoctorName
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // jsonDetail
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73) // householdRegister
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, DiabetesInfo entity, int offset) {
        entity.setDiabetesInfoId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setManageOrgId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDiabetesInfoNo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPersonalHistory(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDiseaseHistory(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setDmFamilyHistory(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAllergicHistory(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setDiagnoseDate(cursor.isNull(offset + 8) ? null : new java.util.Date(cursor.getLong(offset + 8)));
        entity.setDiagnoseModeCode(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setDiagnoseOrgName(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDiagnoseHyperCode(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setMedicationName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setDiagnoseRetionopathyCode(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDiagnoseDmFootCode(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDiagnoseDnCode(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setDiagnoseNeuropathyCode(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setDiagnoseHyperlipidemiaCode(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setDiagnoseAmiCode(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setDiagnoseStrokeCode(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPastFbg(cursor.isNull(offset + 20) ? null : cursor.getDouble(offset + 20));
        entity.setPastPbg(cursor.isNull(offset + 21) ? null : cursor.getDouble(offset + 21));
        entity.setPastGhb(cursor.isNull(offset + 22) ? null : cursor.getDouble(offset + 22));
        entity.setSmokingCode(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setDailySmoking(cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24));
        entity.setDrinkingCode(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setDailyDrinking(cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26));
        entity.setHeight(cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27));
        entity.setWeight(cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28));
        entity.setBmi(cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29));
        entity.setFbg(cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30));
        entity.setPbg(cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31));
        entity.setGhb(cursor.isNull(offset + 32) ? null : cursor.getDouble(offset + 32));
        entity.setTg(cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33));
        entity.setSbp(cursor.isNull(offset + 34) ? null : cursor.getInt(offset + 34));
        entity.setDbp(cursor.isNull(offset + 35) ? null : cursor.getInt(offset + 35));
        entity.setTcho(cursor.isNull(offset + 36) ? null : cursor.getDouble(offset + 36));
        entity.setLdlc(cursor.isNull(offset + 37) ? null : cursor.getDouble(offset + 37));
        entity.setHdlc(cursor.isNull(offset + 38) ? null : cursor.getDouble(offset + 38));
        entity.setRetionopathyCode(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setNeuropathyCode(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setDmFootCode(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setUrineMalb(cursor.isNull(offset + 42) ? null : cursor.getDouble(offset + 42));
        entity.setDietControlCode(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setExerciseCode(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setExerciseFreqCode(cursor.isNull(offset + 45) ? null : cursor.getInt(offset + 45));
        entity.setExerciseDurationMins(cursor.isNull(offset + 46) ? null : cursor.getInt(offset + 46));
        entity.setTakeMedicineCode(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setInsulinCode(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setInsulinType(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setInsulinPerDose(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setStopSmokingCode(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setLimitAlcoholCode(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setLastVisitDate(cursor.isNull(offset + 53) ? null : new java.util.Date(cursor.getLong(offset + 53)));
        entity.setNextVisitDate(cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)));
        entity.setIsCancel(cursor.isNull(offset + 55) ? null : cursor.getInt(offset + 55));
        entity.setCreateOrgId(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setOrgName(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setCreatorId(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setCreator(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setCreateTime(cursor.isNull(offset + 60) ? null : new java.util.Date(cursor.getLong(offset + 60)));
        entity.setModifiedOrgId(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setModifiedOrgName(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setModifierId(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setModifier(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setModifiedTime(cursor.isNull(offset + 65) ? null : new java.util.Date(cursor.getLong(offset + 65)));
        entity.setCompanyTel(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setFamilyTel(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setHealthcareOrg(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setUserCreateTime(cursor.isNull(offset + 69) ? null : new java.util.Date(cursor.getLong(offset + 69)));
        entity.setRespDoctorId(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setRespDoctorName(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setJsonDetail(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setHouseholdRegister(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(DiabetesInfo entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(DiabetesInfo entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
