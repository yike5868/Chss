package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.child.ChildLedger;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CHILD_LEDGER".
*/
public class ChildLedgerDao extends AbstractDao<ChildLedger, Void> {

    public static final String TABLENAME = "CHILD_LEDGER";

    /**
     * Properties of entity ChildLedger.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ChildLedgerId = new Property(0, String.class, "childLedgerId", false, "CHILD_LEDGER_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property NewbornName = new Property(2, String.class, "newbornName", false, "NEWBORN_NAME");
        public final static Property NewbornSexCode = new Property(3, String.class, "newbornSexCode", false, "NEWBORN_SEX_CODE");
        public final static Property NewbornSexValue = new Property(4, String.class, "newbornSexValue", false, "NEWBORN_SEX_VALUE");
        public final static Property NewbornBirthDate = new Property(5, java.util.Date.class, "newbornBirthDate", false, "NEWBORN_BIRTH_DATE");
        public final static Property NewbornNation = new Property(6, String.class, "newbornNation", false, "NEWBORN_NATION");
        public final static Property PresentAddrProvince = new Property(7, String.class, "presentAddrProvince", false, "PRESENT_ADDR_PROVINCE");
        public final static Property FatherId = new Property(8, String.class, "fatherId", false, "FATHER_ID");
        public final static Property FatherName = new Property(9, String.class, "fatherName", false, "FATHER_NAME");
        public final static Property FatherIdno = new Property(10, String.class, "fatherIdno", false, "FATHER_IDNO");
        public final static Property FatherOccupCode = new Property(11, String.class, "fatherOccupCode", false, "FATHER_OCCUP_CODE");
        public final static Property FatherTelNo = new Property(12, String.class, "fatherTelNo", false, "FATHER_TEL_NO");
        public final static Property FatherBirthDate = new Property(13, java.util.Date.class, "fatherBirthDate", false, "FATHER_BIRTH_DATE");
        public final static Property MotherId = new Property(14, String.class, "motherId", false, "MOTHER_ID");
        public final static Property MotherName = new Property(15, String.class, "motherName", false, "MOTHER_NAME");
        public final static Property MotherIdno = new Property(16, String.class, "motherIdno", false, "MOTHER_IDNO");
        public final static Property MotherOccupCode = new Property(17, String.class, "motherOccupCode", false, "MOTHER_OCCUP_CODE");
        public final static Property MotherTelNo = new Property(18, String.class, "motherTelNo", false, "MOTHER_TEL_NO");
        public final static Property MotherBirthDate = new Property(19, java.util.Date.class, "motherBirthDate", false, "MOTHER_BIRTH_DATE");
        public final static Property Household = new Property(20, String.class, "household", false, "HOUSEHOLD");
        public final static Property CreateDate = new Property(21, java.util.Date.class, "createDate", false, "CREATE_DATE");
        public final static Property ChildHomeVisitDate = new Property(22, java.util.Date.class, "childHomeVisitDate", false, "CHILD_HOME_VISIT_DATE");
        public final static Property ChildHomeVisitOrgId = new Property(23, String.class, "childHomeVisitOrgId", false, "CHILD_HOME_VISIT_ORG_ID");
        public final static Property OneMonth = new Property(24, java.util.Date.class, "oneMonth", false, "ONE_MONTH");
        public final static Property OneMonthOrgId = new Property(25, String.class, "oneMonthOrgId", false, "ONE_MONTH_ORG_ID");
        public final static Property ThreeMonth = new Property(26, java.util.Date.class, "threeMonth", false, "THREE_MONTH");
        public final static Property ThreeMonthOrgId = new Property(27, String.class, "threeMonthOrgId", false, "THREE_MONTH_ORG_ID");
        public final static Property SixMonth = new Property(28, java.util.Date.class, "sixMonth", false, "SIX_MONTH");
        public final static Property SixMonthOrgId = new Property(29, String.class, "sixMonthOrgId", false, "SIX_MONTH_ORG_ID");
        public final static Property Eight = new Property(30, java.util.Date.class, "eight", false, "EIGHT");
        public final static Property EightOrgId = new Property(31, String.class, "eightOrgId", false, "EIGHT_ORG_ID");
        public final static Property OneYear = new Property(32, java.util.Date.class, "oneYear", false, "ONE_YEAR");
        public final static Property OneYearOrgId = new Property(33, String.class, "oneYearOrgId", false, "ONE_YEAR_ORG_ID");
        public final static Property Eighteen = new Property(34, java.util.Date.class, "eighteen", false, "EIGHTEEN");
        public final static Property EighteenOrgId = new Property(35, String.class, "eighteenOrgId", false, "EIGHTEEN_ORG_ID");
        public final static Property TwentyFourMonth = new Property(36, java.util.Date.class, "twentyFourMonth", false, "TWENTY_FOUR_MONTH");
        public final static Property TwentyFourMonthOrgId = new Property(37, String.class, "twentyFourMonthOrgId", false, "TWENTY_FOUR_MONTH_ORG_ID");
        public final static Property ThirtyMonth = new Property(38, java.util.Date.class, "thirtyMonth", false, "THIRTY_MONTH");
        public final static Property ThirtyMonthOrgId = new Property(39, String.class, "thirtyMonthOrgId", false, "THIRTY_MONTH_ORG_ID");
        public final static Property ThreeYear = new Property(40, java.util.Date.class, "threeYear", false, "THREE_YEAR");
        public final static Property ThreeYearOrgId = new Property(41, String.class, "threeYearOrgId", false, "THREE_YEAR_ORG_ID");
        public final static Property FourYear = new Property(42, java.util.Date.class, "fourYear", false, "FOUR_YEAR");
        public final static Property FourYearOrgId = new Property(43, String.class, "fourYearOrgId", false, "FOUR_YEAR_ORG_ID");
        public final static Property FiveYear = new Property(44, java.util.Date.class, "fiveYear", false, "FIVE_YEAR");
        public final static Property FiveYearOrgId = new Property(45, String.class, "fiveYearOrgId", false, "FIVE_YEAR_ORG_ID");
        public final static Property SixYear = new Property(46, java.util.Date.class, "sixYear", false, "SIX_YEAR");
        public final static Property SixYearOrgId = new Property(47, String.class, "sixYearOrgId", false, "SIX_YEAR_ORG_ID");
        public final static Property HematochromeSix = new Property(48, Double.class, "hematochromeSix", false, "HEMATOCHROME_SIX");
        public final static Property HematochromeTwelev = new Property(49, Double.class, "hematochromeTwelev", false, "HEMATOCHROME_TWELEV");
        public final static Property HematochromeEighteen = new Property(50, Double.class, "hematochromeEighteen", false, "HEMATOCHROME_EIGHTEEN");
        public final static Property HematochromeTwentyFour = new Property(51, Double.class, "hematochromeTwentyFour", false, "HEMATOCHROME_TWENTY_FOUR");
        public final static Property TcmSixMonth = new Property(52, java.util.Date.class, "tcmSixMonth", false, "TCM_SIX_MONTH");
        public final static Property TcmOneYear = new Property(53, java.util.Date.class, "tcmOneYear", false, "TCM_ONE_YEAR");
        public final static Property TcmEighteen = new Property(54, java.util.Date.class, "tcmEighteen", false, "TCM_EIGHTEEN");
        public final static Property TcmTwentyFourMonth = new Property(55, java.util.Date.class, "tcmTwentyFourMonth", false, "TCM_TWENTY_FOUR_MONTH");
        public final static Property TcmThirtyMonth = new Property(56, java.util.Date.class, "tcmThirtyMonth", false, "TCM_THIRTY_MONTH");
        public final static Property TcmThreeYear = new Property(57, java.util.Date.class, "tcmThreeYear", false, "TCM_THREE_YEAR");
        public final static Property TurnOutDate = new Property(58, java.util.Date.class, "turnOutDate", false, "TURN_OUT_DATE");
        public final static Property FeedType = new Property(59, String.class, "feedType", false, "FEED_TYPE");
        public final static Property Premature = new Property(60, String.class, "premature", false, "PREMATURE");
        public final static Property Lowweight = new Property(61, String.class, "lowweight", false, "LOWWEIGHT");
        public final static Property GrowSlow = new Property(62, String.class, "growSlow", false, "GROW_SLOW");
        public final static Property Overweight = new Property(63, String.class, "overweight", false, "OVERWEIGHT");
        public final static Property Fat = new Property(64, String.class, "fat", false, "FAT");
        public final static Property Remark = new Property(65, String.class, "remark", false, "REMARK");
        public final static Property IsCancel = new Property(66, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property Age = new Property(67, Integer.class, "age", false, "AGE");
    };


    public ChildLedgerDao(DaoConfig config) {
        super(config);
    }
    
    public ChildLedgerDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CHILD_LEDGER\" (" + //
                "\"CHILD_LEDGER_ID\" TEXT," + // 0: childLedgerId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"NEWBORN_NAME\" TEXT," + // 2: newbornName
                "\"NEWBORN_SEX_CODE\" TEXT," + // 3: newbornSexCode
                "\"NEWBORN_SEX_VALUE\" TEXT," + // 4: newbornSexValue
                "\"NEWBORN_BIRTH_DATE\" INTEGER," + // 5: newbornBirthDate
                "\"NEWBORN_NATION\" TEXT," + // 6: newbornNation
                "\"PRESENT_ADDR_PROVINCE\" TEXT," + // 7: presentAddrProvince
                "\"FATHER_ID\" TEXT," + // 8: fatherId
                "\"FATHER_NAME\" TEXT," + // 9: fatherName
                "\"FATHER_IDNO\" TEXT," + // 10: fatherIdno
                "\"FATHER_OCCUP_CODE\" TEXT," + // 11: fatherOccupCode
                "\"FATHER_TEL_NO\" TEXT," + // 12: fatherTelNo
                "\"FATHER_BIRTH_DATE\" INTEGER," + // 13: fatherBirthDate
                "\"MOTHER_ID\" TEXT," + // 14: motherId
                "\"MOTHER_NAME\" TEXT," + // 15: motherName
                "\"MOTHER_IDNO\" TEXT," + // 16: motherIdno
                "\"MOTHER_OCCUP_CODE\" TEXT," + // 17: motherOccupCode
                "\"MOTHER_TEL_NO\" TEXT," + // 18: motherTelNo
                "\"MOTHER_BIRTH_DATE\" INTEGER," + // 19: motherBirthDate
                "\"HOUSEHOLD\" TEXT," + // 20: household
                "\"CREATE_DATE\" INTEGER," + // 21: createDate
                "\"CHILD_HOME_VISIT_DATE\" INTEGER," + // 22: childHomeVisitDate
                "\"CHILD_HOME_VISIT_ORG_ID\" TEXT," + // 23: childHomeVisitOrgId
                "\"ONE_MONTH\" INTEGER," + // 24: oneMonth
                "\"ONE_MONTH_ORG_ID\" TEXT," + // 25: oneMonthOrgId
                "\"THREE_MONTH\" INTEGER," + // 26: threeMonth
                "\"THREE_MONTH_ORG_ID\" TEXT," + // 27: threeMonthOrgId
                "\"SIX_MONTH\" INTEGER," + // 28: sixMonth
                "\"SIX_MONTH_ORG_ID\" TEXT," + // 29: sixMonthOrgId
                "\"EIGHT\" INTEGER," + // 30: eight
                "\"EIGHT_ORG_ID\" TEXT," + // 31: eightOrgId
                "\"ONE_YEAR\" INTEGER," + // 32: oneYear
                "\"ONE_YEAR_ORG_ID\" TEXT," + // 33: oneYearOrgId
                "\"EIGHTEEN\" INTEGER," + // 34: eighteen
                "\"EIGHTEEN_ORG_ID\" TEXT," + // 35: eighteenOrgId
                "\"TWENTY_FOUR_MONTH\" INTEGER," + // 36: twentyFourMonth
                "\"TWENTY_FOUR_MONTH_ORG_ID\" TEXT," + // 37: twentyFourMonthOrgId
                "\"THIRTY_MONTH\" INTEGER," + // 38: thirtyMonth
                "\"THIRTY_MONTH_ORG_ID\" TEXT," + // 39: thirtyMonthOrgId
                "\"THREE_YEAR\" INTEGER," + // 40: threeYear
                "\"THREE_YEAR_ORG_ID\" TEXT," + // 41: threeYearOrgId
                "\"FOUR_YEAR\" INTEGER," + // 42: fourYear
                "\"FOUR_YEAR_ORG_ID\" TEXT," + // 43: fourYearOrgId
                "\"FIVE_YEAR\" INTEGER," + // 44: fiveYear
                "\"FIVE_YEAR_ORG_ID\" TEXT," + // 45: fiveYearOrgId
                "\"SIX_YEAR\" INTEGER," + // 46: sixYear
                "\"SIX_YEAR_ORG_ID\" TEXT," + // 47: sixYearOrgId
                "\"HEMATOCHROME_SIX\" REAL," + // 48: hematochromeSix
                "\"HEMATOCHROME_TWELEV\" REAL," + // 49: hematochromeTwelev
                "\"HEMATOCHROME_EIGHTEEN\" REAL," + // 50: hematochromeEighteen
                "\"HEMATOCHROME_TWENTY_FOUR\" REAL," + // 51: hematochromeTwentyFour
                "\"TCM_SIX_MONTH\" INTEGER," + // 52: tcmSixMonth
                "\"TCM_ONE_YEAR\" INTEGER," + // 53: tcmOneYear
                "\"TCM_EIGHTEEN\" INTEGER," + // 54: tcmEighteen
                "\"TCM_TWENTY_FOUR_MONTH\" INTEGER," + // 55: tcmTwentyFourMonth
                "\"TCM_THIRTY_MONTH\" INTEGER," + // 56: tcmThirtyMonth
                "\"TCM_THREE_YEAR\" INTEGER," + // 57: tcmThreeYear
                "\"TURN_OUT_DATE\" INTEGER," + // 58: turnOutDate
                "\"FEED_TYPE\" TEXT," + // 59: feedType
                "\"PREMATURE\" TEXT," + // 60: premature
                "\"LOWWEIGHT\" TEXT," + // 61: lowweight
                "\"GROW_SLOW\" TEXT," + // 62: growSlow
                "\"OVERWEIGHT\" TEXT," + // 63: overweight
                "\"FAT\" TEXT," + // 64: fat
                "\"REMARK\" TEXT," + // 65: remark
                "\"IS_CANCEL\" INTEGER," + // 66: isCancel
                "\"AGE\" INTEGER);"); // 67: age
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CHILD_LEDGER\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ChildLedger entity) {
        stmt.clearBindings();
 
        String childLedgerId = entity.getChildLedgerId();
        if (childLedgerId != null) {
            stmt.bindString(1, childLedgerId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String newbornName = entity.getNewbornName();
        if (newbornName != null) {
            stmt.bindString(3, newbornName);
        }
 
        String newbornSexCode = entity.getNewbornSexCode();
        if (newbornSexCode != null) {
            stmt.bindString(4, newbornSexCode);
        }
 
        String newbornSexValue = entity.getNewbornSexValue();
        if (newbornSexValue != null) {
            stmt.bindString(5, newbornSexValue);
        }
 
        java.util.Date newbornBirthDate = entity.getNewbornBirthDate();
        if (newbornBirthDate != null) {
            stmt.bindLong(6, newbornBirthDate.getTime());
        }
 
        String newbornNation = entity.getNewbornNation();
        if (newbornNation != null) {
            stmt.bindString(7, newbornNation);
        }
 
        String presentAddrProvince = entity.getPresentAddrProvince();
        if (presentAddrProvince != null) {
            stmt.bindString(8, presentAddrProvince);
        }
 
        String fatherId = entity.getFatherId();
        if (fatherId != null) {
            stmt.bindString(9, fatherId);
        }
 
        String fatherName = entity.getFatherName();
        if (fatherName != null) {
            stmt.bindString(10, fatherName);
        }
 
        String fatherIdno = entity.getFatherIdno();
        if (fatherIdno != null) {
            stmt.bindString(11, fatherIdno);
        }
 
        String fatherOccupCode = entity.getFatherOccupCode();
        if (fatherOccupCode != null) {
            stmt.bindString(12, fatherOccupCode);
        }
 
        String fatherTelNo = entity.getFatherTelNo();
        if (fatherTelNo != null) {
            stmt.bindString(13, fatherTelNo);
        }
 
        java.util.Date fatherBirthDate = entity.getFatherBirthDate();
        if (fatherBirthDate != null) {
            stmt.bindLong(14, fatherBirthDate.getTime());
        }
 
        String motherId = entity.getMotherId();
        if (motherId != null) {
            stmt.bindString(15, motherId);
        }
 
        String motherName = entity.getMotherName();
        if (motherName != null) {
            stmt.bindString(16, motherName);
        }
 
        String motherIdno = entity.getMotherIdno();
        if (motherIdno != null) {
            stmt.bindString(17, motherIdno);
        }
 
        String motherOccupCode = entity.getMotherOccupCode();
        if (motherOccupCode != null) {
            stmt.bindString(18, motherOccupCode);
        }
 
        String motherTelNo = entity.getMotherTelNo();
        if (motherTelNo != null) {
            stmt.bindString(19, motherTelNo);
        }
 
        java.util.Date motherBirthDate = entity.getMotherBirthDate();
        if (motherBirthDate != null) {
            stmt.bindLong(20, motherBirthDate.getTime());
        }
 
        String household = entity.getHousehold();
        if (household != null) {
            stmt.bindString(21, household);
        }
 
        java.util.Date createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindLong(22, createDate.getTime());
        }
 
        java.util.Date childHomeVisitDate = entity.getChildHomeVisitDate();
        if (childHomeVisitDate != null) {
            stmt.bindLong(23, childHomeVisitDate.getTime());
        }
 
        String childHomeVisitOrgId = entity.getChildHomeVisitOrgId();
        if (childHomeVisitOrgId != null) {
            stmt.bindString(24, childHomeVisitOrgId);
        }
 
        java.util.Date oneMonth = entity.getOneMonth();
        if (oneMonth != null) {
            stmt.bindLong(25, oneMonth.getTime());
        }
 
        String oneMonthOrgId = entity.getOneMonthOrgId();
        if (oneMonthOrgId != null) {
            stmt.bindString(26, oneMonthOrgId);
        }
 
        java.util.Date threeMonth = entity.getThreeMonth();
        if (threeMonth != null) {
            stmt.bindLong(27, threeMonth.getTime());
        }
 
        String threeMonthOrgId = entity.getThreeMonthOrgId();
        if (threeMonthOrgId != null) {
            stmt.bindString(28, threeMonthOrgId);
        }
 
        java.util.Date sixMonth = entity.getSixMonth();
        if (sixMonth != null) {
            stmt.bindLong(29, sixMonth.getTime());
        }
 
        String sixMonthOrgId = entity.getSixMonthOrgId();
        if (sixMonthOrgId != null) {
            stmt.bindString(30, sixMonthOrgId);
        }
 
        java.util.Date eight = entity.getEight();
        if (eight != null) {
            stmt.bindLong(31, eight.getTime());
        }
 
        String eightOrgId = entity.getEightOrgId();
        if (eightOrgId != null) {
            stmt.bindString(32, eightOrgId);
        }
 
        java.util.Date oneYear = entity.getOneYear();
        if (oneYear != null) {
            stmt.bindLong(33, oneYear.getTime());
        }
 
        String oneYearOrgId = entity.getOneYearOrgId();
        if (oneYearOrgId != null) {
            stmt.bindString(34, oneYearOrgId);
        }
 
        java.util.Date eighteen = entity.getEighteen();
        if (eighteen != null) {
            stmt.bindLong(35, eighteen.getTime());
        }
 
        String eighteenOrgId = entity.getEighteenOrgId();
        if (eighteenOrgId != null) {
            stmt.bindString(36, eighteenOrgId);
        }
 
        java.util.Date twentyFourMonth = entity.getTwentyFourMonth();
        if (twentyFourMonth != null) {
            stmt.bindLong(37, twentyFourMonth.getTime());
        }
 
        String twentyFourMonthOrgId = entity.getTwentyFourMonthOrgId();
        if (twentyFourMonthOrgId != null) {
            stmt.bindString(38, twentyFourMonthOrgId);
        }
 
        java.util.Date thirtyMonth = entity.getThirtyMonth();
        if (thirtyMonth != null) {
            stmt.bindLong(39, thirtyMonth.getTime());
        }
 
        String thirtyMonthOrgId = entity.getThirtyMonthOrgId();
        if (thirtyMonthOrgId != null) {
            stmt.bindString(40, thirtyMonthOrgId);
        }
 
        java.util.Date threeYear = entity.getThreeYear();
        if (threeYear != null) {
            stmt.bindLong(41, threeYear.getTime());
        }
 
        String threeYearOrgId = entity.getThreeYearOrgId();
        if (threeYearOrgId != null) {
            stmt.bindString(42, threeYearOrgId);
        }
 
        java.util.Date fourYear = entity.getFourYear();
        if (fourYear != null) {
            stmt.bindLong(43, fourYear.getTime());
        }
 
        String fourYearOrgId = entity.getFourYearOrgId();
        if (fourYearOrgId != null) {
            stmt.bindString(44, fourYearOrgId);
        }
 
        java.util.Date fiveYear = entity.getFiveYear();
        if (fiveYear != null) {
            stmt.bindLong(45, fiveYear.getTime());
        }
 
        String fiveYearOrgId = entity.getFiveYearOrgId();
        if (fiveYearOrgId != null) {
            stmt.bindString(46, fiveYearOrgId);
        }
 
        java.util.Date sixYear = entity.getSixYear();
        if (sixYear != null) {
            stmt.bindLong(47, sixYear.getTime());
        }
 
        String sixYearOrgId = entity.getSixYearOrgId();
        if (sixYearOrgId != null) {
            stmt.bindString(48, sixYearOrgId);
        }
 
        Double hematochromeSix = entity.getHematochromeSix();
        if (hematochromeSix != null) {
            stmt.bindDouble(49, hematochromeSix);
        }
 
        Double hematochromeTwelev = entity.getHematochromeTwelev();
        if (hematochromeTwelev != null) {
            stmt.bindDouble(50, hematochromeTwelev);
        }
 
        Double hematochromeEighteen = entity.getHematochromeEighteen();
        if (hematochromeEighteen != null) {
            stmt.bindDouble(51, hematochromeEighteen);
        }
 
        Double hematochromeTwentyFour = entity.getHematochromeTwentyFour();
        if (hematochromeTwentyFour != null) {
            stmt.bindDouble(52, hematochromeTwentyFour);
        }
 
        java.util.Date tcmSixMonth = entity.getTcmSixMonth();
        if (tcmSixMonth != null) {
            stmt.bindLong(53, tcmSixMonth.getTime());
        }
 
        java.util.Date tcmOneYear = entity.getTcmOneYear();
        if (tcmOneYear != null) {
            stmt.bindLong(54, tcmOneYear.getTime());
        }
 
        java.util.Date tcmEighteen = entity.getTcmEighteen();
        if (tcmEighteen != null) {
            stmt.bindLong(55, tcmEighteen.getTime());
        }
 
        java.util.Date tcmTwentyFourMonth = entity.getTcmTwentyFourMonth();
        if (tcmTwentyFourMonth != null) {
            stmt.bindLong(56, tcmTwentyFourMonth.getTime());
        }
 
        java.util.Date tcmThirtyMonth = entity.getTcmThirtyMonth();
        if (tcmThirtyMonth != null) {
            stmt.bindLong(57, tcmThirtyMonth.getTime());
        }
 
        java.util.Date tcmThreeYear = entity.getTcmThreeYear();
        if (tcmThreeYear != null) {
            stmt.bindLong(58, tcmThreeYear.getTime());
        }
 
        java.util.Date turnOutDate = entity.getTurnOutDate();
        if (turnOutDate != null) {
            stmt.bindLong(59, turnOutDate.getTime());
        }
 
        String feedType = entity.getFeedType();
        if (feedType != null) {
            stmt.bindString(60, feedType);
        }
 
        String premature = entity.getPremature();
        if (premature != null) {
            stmt.bindString(61, premature);
        }
 
        String lowweight = entity.getLowweight();
        if (lowweight != null) {
            stmt.bindString(62, lowweight);
        }
 
        String growSlow = entity.getGrowSlow();
        if (growSlow != null) {
            stmt.bindString(63, growSlow);
        }
 
        String overweight = entity.getOverweight();
        if (overweight != null) {
            stmt.bindString(64, overweight);
        }
 
        String fat = entity.getFat();
        if (fat != null) {
            stmt.bindString(65, fat);
        }
 
        String remark = entity.getRemark();
        if (remark != null) {
            stmt.bindString(66, remark);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(67, isCancel);
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(68, age);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ChildLedger entity) {
        stmt.clearBindings();
 
        String childLedgerId = entity.getChildLedgerId();
        if (childLedgerId != null) {
            stmt.bindString(1, childLedgerId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String newbornName = entity.getNewbornName();
        if (newbornName != null) {
            stmt.bindString(3, newbornName);
        }
 
        String newbornSexCode = entity.getNewbornSexCode();
        if (newbornSexCode != null) {
            stmt.bindString(4, newbornSexCode);
        }
 
        String newbornSexValue = entity.getNewbornSexValue();
        if (newbornSexValue != null) {
            stmt.bindString(5, newbornSexValue);
        }
 
        java.util.Date newbornBirthDate = entity.getNewbornBirthDate();
        if (newbornBirthDate != null) {
            stmt.bindLong(6, newbornBirthDate.getTime());
        }
 
        String newbornNation = entity.getNewbornNation();
        if (newbornNation != null) {
            stmt.bindString(7, newbornNation);
        }
 
        String presentAddrProvince = entity.getPresentAddrProvince();
        if (presentAddrProvince != null) {
            stmt.bindString(8, presentAddrProvince);
        }
 
        String fatherId = entity.getFatherId();
        if (fatherId != null) {
            stmt.bindString(9, fatherId);
        }
 
        String fatherName = entity.getFatherName();
        if (fatherName != null) {
            stmt.bindString(10, fatherName);
        }
 
        String fatherIdno = entity.getFatherIdno();
        if (fatherIdno != null) {
            stmt.bindString(11, fatherIdno);
        }
 
        String fatherOccupCode = entity.getFatherOccupCode();
        if (fatherOccupCode != null) {
            stmt.bindString(12, fatherOccupCode);
        }
 
        String fatherTelNo = entity.getFatherTelNo();
        if (fatherTelNo != null) {
            stmt.bindString(13, fatherTelNo);
        }
 
        java.util.Date fatherBirthDate = entity.getFatherBirthDate();
        if (fatherBirthDate != null) {
            stmt.bindLong(14, fatherBirthDate.getTime());
        }
 
        String motherId = entity.getMotherId();
        if (motherId != null) {
            stmt.bindString(15, motherId);
        }
 
        String motherName = entity.getMotherName();
        if (motherName != null) {
            stmt.bindString(16, motherName);
        }
 
        String motherIdno = entity.getMotherIdno();
        if (motherIdno != null) {
            stmt.bindString(17, motherIdno);
        }
 
        String motherOccupCode = entity.getMotherOccupCode();
        if (motherOccupCode != null) {
            stmt.bindString(18, motherOccupCode);
        }
 
        String motherTelNo = entity.getMotherTelNo();
        if (motherTelNo != null) {
            stmt.bindString(19, motherTelNo);
        }
 
        java.util.Date motherBirthDate = entity.getMotherBirthDate();
        if (motherBirthDate != null) {
            stmt.bindLong(20, motherBirthDate.getTime());
        }
 
        String household = entity.getHousehold();
        if (household != null) {
            stmt.bindString(21, household);
        }
 
        java.util.Date createDate = entity.getCreateDate();
        if (createDate != null) {
            stmt.bindLong(22, createDate.getTime());
        }
 
        java.util.Date childHomeVisitDate = entity.getChildHomeVisitDate();
        if (childHomeVisitDate != null) {
            stmt.bindLong(23, childHomeVisitDate.getTime());
        }
 
        String childHomeVisitOrgId = entity.getChildHomeVisitOrgId();
        if (childHomeVisitOrgId != null) {
            stmt.bindString(24, childHomeVisitOrgId);
        }
 
        java.util.Date oneMonth = entity.getOneMonth();
        if (oneMonth != null) {
            stmt.bindLong(25, oneMonth.getTime());
        }
 
        String oneMonthOrgId = entity.getOneMonthOrgId();
        if (oneMonthOrgId != null) {
            stmt.bindString(26, oneMonthOrgId);
        }
 
        java.util.Date threeMonth = entity.getThreeMonth();
        if (threeMonth != null) {
            stmt.bindLong(27, threeMonth.getTime());
        }
 
        String threeMonthOrgId = entity.getThreeMonthOrgId();
        if (threeMonthOrgId != null) {
            stmt.bindString(28, threeMonthOrgId);
        }
 
        java.util.Date sixMonth = entity.getSixMonth();
        if (sixMonth != null) {
            stmt.bindLong(29, sixMonth.getTime());
        }
 
        String sixMonthOrgId = entity.getSixMonthOrgId();
        if (sixMonthOrgId != null) {
            stmt.bindString(30, sixMonthOrgId);
        }
 
        java.util.Date eight = entity.getEight();
        if (eight != null) {
            stmt.bindLong(31, eight.getTime());
        }
 
        String eightOrgId = entity.getEightOrgId();
        if (eightOrgId != null) {
            stmt.bindString(32, eightOrgId);
        }
 
        java.util.Date oneYear = entity.getOneYear();
        if (oneYear != null) {
            stmt.bindLong(33, oneYear.getTime());
        }
 
        String oneYearOrgId = entity.getOneYearOrgId();
        if (oneYearOrgId != null) {
            stmt.bindString(34, oneYearOrgId);
        }
 
        java.util.Date eighteen = entity.getEighteen();
        if (eighteen != null) {
            stmt.bindLong(35, eighteen.getTime());
        }
 
        String eighteenOrgId = entity.getEighteenOrgId();
        if (eighteenOrgId != null) {
            stmt.bindString(36, eighteenOrgId);
        }
 
        java.util.Date twentyFourMonth = entity.getTwentyFourMonth();
        if (twentyFourMonth != null) {
            stmt.bindLong(37, twentyFourMonth.getTime());
        }
 
        String twentyFourMonthOrgId = entity.getTwentyFourMonthOrgId();
        if (twentyFourMonthOrgId != null) {
            stmt.bindString(38, twentyFourMonthOrgId);
        }
 
        java.util.Date thirtyMonth = entity.getThirtyMonth();
        if (thirtyMonth != null) {
            stmt.bindLong(39, thirtyMonth.getTime());
        }
 
        String thirtyMonthOrgId = entity.getThirtyMonthOrgId();
        if (thirtyMonthOrgId != null) {
            stmt.bindString(40, thirtyMonthOrgId);
        }
 
        java.util.Date threeYear = entity.getThreeYear();
        if (threeYear != null) {
            stmt.bindLong(41, threeYear.getTime());
        }
 
        String threeYearOrgId = entity.getThreeYearOrgId();
        if (threeYearOrgId != null) {
            stmt.bindString(42, threeYearOrgId);
        }
 
        java.util.Date fourYear = entity.getFourYear();
        if (fourYear != null) {
            stmt.bindLong(43, fourYear.getTime());
        }
 
        String fourYearOrgId = entity.getFourYearOrgId();
        if (fourYearOrgId != null) {
            stmt.bindString(44, fourYearOrgId);
        }
 
        java.util.Date fiveYear = entity.getFiveYear();
        if (fiveYear != null) {
            stmt.bindLong(45, fiveYear.getTime());
        }
 
        String fiveYearOrgId = entity.getFiveYearOrgId();
        if (fiveYearOrgId != null) {
            stmt.bindString(46, fiveYearOrgId);
        }
 
        java.util.Date sixYear = entity.getSixYear();
        if (sixYear != null) {
            stmt.bindLong(47, sixYear.getTime());
        }
 
        String sixYearOrgId = entity.getSixYearOrgId();
        if (sixYearOrgId != null) {
            stmt.bindString(48, sixYearOrgId);
        }
 
        Double hematochromeSix = entity.getHematochromeSix();
        if (hematochromeSix != null) {
            stmt.bindDouble(49, hematochromeSix);
        }
 
        Double hematochromeTwelev = entity.getHematochromeTwelev();
        if (hematochromeTwelev != null) {
            stmt.bindDouble(50, hematochromeTwelev);
        }
 
        Double hematochromeEighteen = entity.getHematochromeEighteen();
        if (hematochromeEighteen != null) {
            stmt.bindDouble(51, hematochromeEighteen);
        }
 
        Double hematochromeTwentyFour = entity.getHematochromeTwentyFour();
        if (hematochromeTwentyFour != null) {
            stmt.bindDouble(52, hematochromeTwentyFour);
        }
 
        java.util.Date tcmSixMonth = entity.getTcmSixMonth();
        if (tcmSixMonth != null) {
            stmt.bindLong(53, tcmSixMonth.getTime());
        }
 
        java.util.Date tcmOneYear = entity.getTcmOneYear();
        if (tcmOneYear != null) {
            stmt.bindLong(54, tcmOneYear.getTime());
        }
 
        java.util.Date tcmEighteen = entity.getTcmEighteen();
        if (tcmEighteen != null) {
            stmt.bindLong(55, tcmEighteen.getTime());
        }
 
        java.util.Date tcmTwentyFourMonth = entity.getTcmTwentyFourMonth();
        if (tcmTwentyFourMonth != null) {
            stmt.bindLong(56, tcmTwentyFourMonth.getTime());
        }
 
        java.util.Date tcmThirtyMonth = entity.getTcmThirtyMonth();
        if (tcmThirtyMonth != null) {
            stmt.bindLong(57, tcmThirtyMonth.getTime());
        }
 
        java.util.Date tcmThreeYear = entity.getTcmThreeYear();
        if (tcmThreeYear != null) {
            stmt.bindLong(58, tcmThreeYear.getTime());
        }
 
        java.util.Date turnOutDate = entity.getTurnOutDate();
        if (turnOutDate != null) {
            stmt.bindLong(59, turnOutDate.getTime());
        }
 
        String feedType = entity.getFeedType();
        if (feedType != null) {
            stmt.bindString(60, feedType);
        }
 
        String premature = entity.getPremature();
        if (premature != null) {
            stmt.bindString(61, premature);
        }
 
        String lowweight = entity.getLowweight();
        if (lowweight != null) {
            stmt.bindString(62, lowweight);
        }
 
        String growSlow = entity.getGrowSlow();
        if (growSlow != null) {
            stmt.bindString(63, growSlow);
        }
 
        String overweight = entity.getOverweight();
        if (overweight != null) {
            stmt.bindString(64, overweight);
        }
 
        String fat = entity.getFat();
        if (fat != null) {
            stmt.bindString(65, fat);
        }
 
        String remark = entity.getRemark();
        if (remark != null) {
            stmt.bindString(66, remark);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(67, isCancel);
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(68, age);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public ChildLedger readEntity(Cursor cursor, int offset) {
        ChildLedger entity = new ChildLedger( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // childLedgerId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // newbornName
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // newbornSexCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // newbornSexValue
            cursor.isNull(offset + 5) ? null : new java.util.Date(cursor.getLong(offset + 5)), // newbornBirthDate
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // newbornNation
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // presentAddrProvince
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // fatherId
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // fatherName
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // fatherIdno
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // fatherOccupCode
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // fatherTelNo
            cursor.isNull(offset + 13) ? null : new java.util.Date(cursor.getLong(offset + 13)), // fatherBirthDate
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // motherId
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // motherName
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // motherIdno
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // motherOccupCode
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // motherTelNo
            cursor.isNull(offset + 19) ? null : new java.util.Date(cursor.getLong(offset + 19)), // motherBirthDate
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // household
            cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)), // createDate
            cursor.isNull(offset + 22) ? null : new java.util.Date(cursor.getLong(offset + 22)), // childHomeVisitDate
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // childHomeVisitOrgId
            cursor.isNull(offset + 24) ? null : new java.util.Date(cursor.getLong(offset + 24)), // oneMonth
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // oneMonthOrgId
            cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)), // threeMonth
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // threeMonthOrgId
            cursor.isNull(offset + 28) ? null : new java.util.Date(cursor.getLong(offset + 28)), // sixMonth
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // sixMonthOrgId
            cursor.isNull(offset + 30) ? null : new java.util.Date(cursor.getLong(offset + 30)), // eight
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // eightOrgId
            cursor.isNull(offset + 32) ? null : new java.util.Date(cursor.getLong(offset + 32)), // oneYear
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // oneYearOrgId
            cursor.isNull(offset + 34) ? null : new java.util.Date(cursor.getLong(offset + 34)), // eighteen
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // eighteenOrgId
            cursor.isNull(offset + 36) ? null : new java.util.Date(cursor.getLong(offset + 36)), // twentyFourMonth
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // twentyFourMonthOrgId
            cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)), // thirtyMonth
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // thirtyMonthOrgId
            cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)), // threeYear
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // threeYearOrgId
            cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)), // fourYear
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // fourYearOrgId
            cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)), // fiveYear
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // fiveYearOrgId
            cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)), // sixYear
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // sixYearOrgId
            cursor.isNull(offset + 48) ? null : cursor.getDouble(offset + 48), // hematochromeSix
            cursor.isNull(offset + 49) ? null : cursor.getDouble(offset + 49), // hematochromeTwelev
            cursor.isNull(offset + 50) ? null : cursor.getDouble(offset + 50), // hematochromeEighteen
            cursor.isNull(offset + 51) ? null : cursor.getDouble(offset + 51), // hematochromeTwentyFour
            cursor.isNull(offset + 52) ? null : new java.util.Date(cursor.getLong(offset + 52)), // tcmSixMonth
            cursor.isNull(offset + 53) ? null : new java.util.Date(cursor.getLong(offset + 53)), // tcmOneYear
            cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)), // tcmEighteen
            cursor.isNull(offset + 55) ? null : new java.util.Date(cursor.getLong(offset + 55)), // tcmTwentyFourMonth
            cursor.isNull(offset + 56) ? null : new java.util.Date(cursor.getLong(offset + 56)), // tcmThirtyMonth
            cursor.isNull(offset + 57) ? null : new java.util.Date(cursor.getLong(offset + 57)), // tcmThreeYear
            cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)), // turnOutDate
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // feedType
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // premature
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // lowweight
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // growSlow
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // overweight
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // fat
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // remark
            cursor.isNull(offset + 66) ? null : cursor.getInt(offset + 66), // isCancel
            cursor.isNull(offset + 67) ? null : cursor.getInt(offset + 67) // age
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ChildLedger entity, int offset) {
        entity.setChildLedgerId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setNewbornName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setNewbornSexCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setNewbornSexValue(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setNewbornBirthDate(cursor.isNull(offset + 5) ? null : new java.util.Date(cursor.getLong(offset + 5)));
        entity.setNewbornNation(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setPresentAddrProvince(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFatherId(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setFatherName(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFatherIdno(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFatherOccupCode(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFatherTelNo(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFatherBirthDate(cursor.isNull(offset + 13) ? null : new java.util.Date(cursor.getLong(offset + 13)));
        entity.setMotherId(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setMotherName(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setMotherIdno(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setMotherOccupCode(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setMotherTelNo(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setMotherBirthDate(cursor.isNull(offset + 19) ? null : new java.util.Date(cursor.getLong(offset + 19)));
        entity.setHousehold(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setCreateDate(cursor.isNull(offset + 21) ? null : new java.util.Date(cursor.getLong(offset + 21)));
        entity.setChildHomeVisitDate(cursor.isNull(offset + 22) ? null : new java.util.Date(cursor.getLong(offset + 22)));
        entity.setChildHomeVisitOrgId(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setOneMonth(cursor.isNull(offset + 24) ? null : new java.util.Date(cursor.getLong(offset + 24)));
        entity.setOneMonthOrgId(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setThreeMonth(cursor.isNull(offset + 26) ? null : new java.util.Date(cursor.getLong(offset + 26)));
        entity.setThreeMonthOrgId(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setSixMonth(cursor.isNull(offset + 28) ? null : new java.util.Date(cursor.getLong(offset + 28)));
        entity.setSixMonthOrgId(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setEight(cursor.isNull(offset + 30) ? null : new java.util.Date(cursor.getLong(offset + 30)));
        entity.setEightOrgId(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setOneYear(cursor.isNull(offset + 32) ? null : new java.util.Date(cursor.getLong(offset + 32)));
        entity.setOneYearOrgId(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setEighteen(cursor.isNull(offset + 34) ? null : new java.util.Date(cursor.getLong(offset + 34)));
        entity.setEighteenOrgId(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setTwentyFourMonth(cursor.isNull(offset + 36) ? null : new java.util.Date(cursor.getLong(offset + 36)));
        entity.setTwentyFourMonthOrgId(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setThirtyMonth(cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)));
        entity.setThirtyMonthOrgId(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setThreeYear(cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)));
        entity.setThreeYearOrgId(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setFourYear(cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)));
        entity.setFourYearOrgId(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setFiveYear(cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)));
        entity.setFiveYearOrgId(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setSixYear(cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)));
        entity.setSixYearOrgId(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setHematochromeSix(cursor.isNull(offset + 48) ? null : cursor.getDouble(offset + 48));
        entity.setHematochromeTwelev(cursor.isNull(offset + 49) ? null : cursor.getDouble(offset + 49));
        entity.setHematochromeEighteen(cursor.isNull(offset + 50) ? null : cursor.getDouble(offset + 50));
        entity.setHematochromeTwentyFour(cursor.isNull(offset + 51) ? null : cursor.getDouble(offset + 51));
        entity.setTcmSixMonth(cursor.isNull(offset + 52) ? null : new java.util.Date(cursor.getLong(offset + 52)));
        entity.setTcmOneYear(cursor.isNull(offset + 53) ? null : new java.util.Date(cursor.getLong(offset + 53)));
        entity.setTcmEighteen(cursor.isNull(offset + 54) ? null : new java.util.Date(cursor.getLong(offset + 54)));
        entity.setTcmTwentyFourMonth(cursor.isNull(offset + 55) ? null : new java.util.Date(cursor.getLong(offset + 55)));
        entity.setTcmThirtyMonth(cursor.isNull(offset + 56) ? null : new java.util.Date(cursor.getLong(offset + 56)));
        entity.setTcmThreeYear(cursor.isNull(offset + 57) ? null : new java.util.Date(cursor.getLong(offset + 57)));
        entity.setTurnOutDate(cursor.isNull(offset + 58) ? null : new java.util.Date(cursor.getLong(offset + 58)));
        entity.setFeedType(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setPremature(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setLowweight(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setGrowSlow(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setOverweight(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setFat(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setRemark(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setIsCancel(cursor.isNull(offset + 66) ? null : cursor.getInt(offset + 66));
        entity.setAge(cursor.isNull(offset + 67) ? null : cursor.getInt(offset + 67));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(ChildLedger entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(ChildLedger entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
