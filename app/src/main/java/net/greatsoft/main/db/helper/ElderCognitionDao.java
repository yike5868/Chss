package net.greatsoft.main.db.helper;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import net.greatsoft.main.db.po.old.ElderCognition;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ELDER_COGNITION".
*/
public class ElderCognitionDao extends AbstractDao<ElderCognition, Void> {

    public static final String TABLENAME = "ELDER_COGNITION";

    /**
     * Properties of entity ElderCognition.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ElderCognitionId = new Property(0, String.class, "elderCognitionId", false, "ELDER_COGNITION_ID");
        public final static Property PersonInfoId = new Property(1, String.class, "personInfoId", false, "PERSON_INFO_ID");
        public final static Property Name = new Property(2, String.class, "name", false, "NAME");
        public final static Property SexCode = new Property(3, String.class, "sexCode", false, "SEX_CODE");
        public final static Property Age = new Property(4, Integer.class, "age", false, "AGE");
        public final static Property EducationCode = new Property(5, String.class, "educationCode", false, "EDUCATION_CODE");
        public final static Property AssessDate = new Property(6, java.util.Date.class, "assessDate", false, "ASSESS_DATE");
        public final static Property DiseaseHistory = new Property(7, String.class, "diseaseHistory", false, "DISEASE_HISTORY");
        public final static Property TotalScore = new Property(8, String.class, "totalScore", false, "TOTAL_SCORE");
        public final static Property DirectiveRecord1 = new Property(9, String.class, "directiveRecord1", false, "DIRECTIVE_RECORD1");
        public final static Property DirectiveScore1 = new Property(10, String.class, "directiveScore1", false, "DIRECTIVE_SCORE1");
        public final static Property DirectiveRecord2 = new Property(11, String.class, "directiveRecord2", false, "DIRECTIVE_RECORD2");
        public final static Property DirectiveScore2 = new Property(12, String.class, "directiveScore2", false, "DIRECTIVE_SCORE2");
        public final static Property DirectiveRecord3 = new Property(13, String.class, "directiveRecord3", false, "DIRECTIVE_RECORD3");
        public final static Property DirectiveScore3 = new Property(14, String.class, "directiveScore3", false, "DIRECTIVE_SCORE3");
        public final static Property DirectiveRecord4 = new Property(15, String.class, "directiveRecord4", false, "DIRECTIVE_RECORD4");
        public final static Property DirectiveScore4 = new Property(16, String.class, "directiveScore4", false, "DIRECTIVE_SCORE4");
        public final static Property DirectiveRecord5 = new Property(17, String.class, "directiveRecord5", false, "DIRECTIVE_RECORD5");
        public final static Property DirectiveScore5 = new Property(18, String.class, "directiveScore5", false, "DIRECTIVE_SCORE5");
        public final static Property DirectiveRecord6 = new Property(19, String.class, "directiveRecord6", false, "DIRECTIVE_RECORD6");
        public final static Property DirectiveScore6 = new Property(20, String.class, "directiveScore6", false, "DIRECTIVE_SCORE6");
        public final static Property DirectiveRecord7 = new Property(21, String.class, "directiveRecord7", false, "DIRECTIVE_RECORD7");
        public final static Property DirectiveScore7 = new Property(22, String.class, "directiveScore7", false, "DIRECTIVE_SCORE7");
        public final static Property DirectiveRecord8 = new Property(23, String.class, "directiveRecord8", false, "DIRECTIVE_RECORD8");
        public final static Property DirectiveScore8 = new Property(24, String.class, "directiveScore8", false, "DIRECTIVE_SCORE8");
        public final static Property DirectiveRecord9 = new Property(25, String.class, "directiveRecord9", false, "DIRECTIVE_RECORD9");
        public final static Property DirectiveScore9 = new Property(26, String.class, "directiveScore9", false, "DIRECTIVE_SCORE9");
        public final static Property DirectiveRecord10 = new Property(27, String.class, "directiveRecord10", false, "DIRECTIVE_RECORD10");
        public final static Property DirectiveScore10 = new Property(28, String.class, "directiveScore10", false, "DIRECTIVE_SCORE10");
        public final static Property MemoryRecord1 = new Property(29, String.class, "memoryRecord1", false, "MEMORY_RECORD1");
        public final static Property MemoryScore1 = new Property(30, String.class, "memoryScore1", false, "MEMORY_SCORE1");
        public final static Property MemoryRecord2 = new Property(31, String.class, "memoryRecord2", false, "MEMORY_RECORD2");
        public final static Property MemoryScore2 = new Property(32, String.class, "memoryScore2", false, "MEMORY_SCORE2");
        public final static Property MemoryRecord3 = new Property(33, String.class, "memoryRecord3", false, "MEMORY_RECORD3");
        public final static Property MemoryScore3 = new Property(34, String.class, "memoryScore3", false, "MEMORY_SCORE3");
        public final static Property CountRecord1 = new Property(35, String.class, "countRecord1", false, "COUNT_RECORD1");
        public final static Property CountScore1 = new Property(36, String.class, "countScore1", false, "COUNT_SCORE1");
        public final static Property CountRecord2 = new Property(37, String.class, "countRecord2", false, "COUNT_RECORD2");
        public final static Property CountScore2 = new Property(38, String.class, "countScore2", false, "COUNT_SCORE2");
        public final static Property CountRecord3 = new Property(39, String.class, "countRecord3", false, "COUNT_RECORD3");
        public final static Property CountScore3 = new Property(40, String.class, "countScore3", false, "COUNT_SCORE3");
        public final static Property CountRecord4 = new Property(41, String.class, "countRecord4", false, "COUNT_RECORD4");
        public final static Property CountScore4 = new Property(42, String.class, "countScore4", false, "COUNT_SCORE4");
        public final static Property CountRecord5 = new Property(43, String.class, "countRecord5", false, "COUNT_RECORD5");
        public final static Property CountScore5 = new Property(44, String.class, "countScore5", false, "COUNT_SCORE5");
        public final static Property RecollectRecord1 = new Property(45, String.class, "recollectRecord1", false, "RECOLLECT_RECORD1");
        public final static Property RecollectScore1 = new Property(46, String.class, "recollectScore1", false, "RECOLLECT_SCORE1");
        public final static Property RecollectRecord2 = new Property(47, String.class, "recollectRecord2", false, "RECOLLECT_RECORD2");
        public final static Property RecollectScore2 = new Property(48, String.class, "recollectScore2", false, "RECOLLECT_SCORE2");
        public final static Property RecollectRecord3 = new Property(49, String.class, "recollectRecord3", false, "RECOLLECT_RECORD3");
        public final static Property RecollectScore3 = new Property(50, String.class, "recollectScore3", false, "RECOLLECT_SCORE3");
        public final static Property NamingQuestion1 = new Property(51, String.class, "namingQuestion1", false, "NAMING_QUESTION1");
        public final static Property NamingRecord1 = new Property(52, String.class, "namingRecord1", false, "NAMING_RECORD1");
        public final static Property NamingScore1 = new Property(53, String.class, "namingScore1", false, "NAMING_SCORE1");
        public final static Property NamingQuestion2 = new Property(54, String.class, "namingQuestion2", false, "NAMING_QUESTION2");
        public final static Property NamingRecord2 = new Property(55, String.class, "namingRecord2", false, "NAMING_RECORD2");
        public final static Property NamingScore2 = new Property(56, String.class, "namingScore2", false, "NAMING_SCORE2");
        public final static Property LanguageQuestion = new Property(57, String.class, "languageQuestion", false, "LANGUAGE_QUESTION");
        public final static Property LanguageRecord = new Property(58, String.class, "languageRecord", false, "LANGUAGE_RECORD");
        public final static Property LanguageScore = new Property(59, String.class, "languageScore", false, "LANGUAGE_SCORE");
        public final static Property ThreestepQuestion1 = new Property(60, String.class, "threestepQuestion1", false, "THREESTEP_QUESTION1");
        public final static Property ThreestepRecord1 = new Property(61, String.class, "threestepRecord1", false, "THREESTEP_RECORD1");
        public final static Property ThreestepScore1 = new Property(62, String.class, "threestepScore1", false, "THREESTEP_SCORE1");
        public final static Property ThreestepQuestion2 = new Property(63, String.class, "threestepQuestion2", false, "THREESTEP_QUESTION2");
        public final static Property ThreestepRecord2 = new Property(64, String.class, "threestepRecord2", false, "THREESTEP_RECORD2");
        public final static Property ThreestepScore2 = new Property(65, String.class, "threestepScore2", false, "THREESTEP_SCORE2");
        public final static Property ThreestepQuestion3 = new Property(66, String.class, "threestepQuestion3", false, "THREESTEP_QUESTION3");
        public final static Property ThreestepRecord3 = new Property(67, String.class, "threestepRecord3", false, "THREESTEP_RECORD3");
        public final static Property ThreestepScore3 = new Property(68, String.class, "threestepScore3", false, "THREESTEP_SCORE3");
        public final static Property ReadQuestion = new Property(69, String.class, "readQuestion", false, "READ_QUESTION");
        public final static Property ReadRecord = new Property(70, String.class, "readRecord", false, "READ_RECORD");
        public final static Property ReadScore = new Property(71, String.class, "readScore", false, "READ_SCORE");
        public final static Property WriteQuestion = new Property(72, String.class, "writeQuestion", false, "WRITE_QUESTION");
        public final static Property WriteRecord = new Property(73, String.class, "writeRecord", false, "WRITE_RECORD");
        public final static Property WriteScore = new Property(74, String.class, "writeScore", false, "WRITE_SCORE");
        public final static Property StructureRecord = new Property(75, String.class, "structureRecord", false, "STRUCTURE_RECORD");
        public final static Property StructureScore = new Property(76, String.class, "structureScore", false, "STRUCTURE_SCORE");
        public final static Property IsCancel = new Property(77, Integer.class, "isCancel", false, "IS_CANCEL");
        public final static Property CreateOrgId = new Property(78, String.class, "createOrgId", false, "CREATE_ORG_ID");
        public final static Property OrgName = new Property(79, String.class, "orgName", false, "ORG_NAME");
        public final static Property CreatorId = new Property(80, String.class, "creatorId", false, "CREATOR_ID");
        public final static Property Creator = new Property(81, String.class, "creator", false, "CREATOR");
        public final static Property CreateTime = new Property(82, java.util.Date.class, "createTime", false, "CREATE_TIME");
        public final static Property ModifiedOrgId = new Property(83, String.class, "modifiedOrgId", false, "MODIFIED_ORG_ID");
        public final static Property ModifiedOrgName = new Property(84, String.class, "modifiedOrgName", false, "MODIFIED_ORG_NAME");
        public final static Property ModifierId = new Property(85, String.class, "modifierId", false, "MODIFIER_ID");
        public final static Property Modifier = new Property(86, String.class, "modifier", false, "MODIFIER");
        public final static Property ModifiedTime = new Property(87, java.util.Date.class, "modifiedTime", false, "MODIFIED_TIME");
    };


    public ElderCognitionDao(DaoConfig config) {
        super(config);
    }
    
    public ElderCognitionDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ELDER_COGNITION\" (" + //
                "\"ELDER_COGNITION_ID\" TEXT," + // 0: elderCognitionId
                "\"PERSON_INFO_ID\" TEXT," + // 1: personInfoId
                "\"NAME\" TEXT," + // 2: name
                "\"SEX_CODE\" TEXT," + // 3: sexCode
                "\"AGE\" INTEGER," + // 4: age
                "\"EDUCATION_CODE\" TEXT," + // 5: educationCode
                "\"ASSESS_DATE\" INTEGER," + // 6: assessDate
                "\"DISEASE_HISTORY\" TEXT," + // 7: diseaseHistory
                "\"TOTAL_SCORE\" TEXT," + // 8: totalScore
                "\"DIRECTIVE_RECORD1\" TEXT," + // 9: directiveRecord1
                "\"DIRECTIVE_SCORE1\" TEXT," + // 10: directiveScore1
                "\"DIRECTIVE_RECORD2\" TEXT," + // 11: directiveRecord2
                "\"DIRECTIVE_SCORE2\" TEXT," + // 12: directiveScore2
                "\"DIRECTIVE_RECORD3\" TEXT," + // 13: directiveRecord3
                "\"DIRECTIVE_SCORE3\" TEXT," + // 14: directiveScore3
                "\"DIRECTIVE_RECORD4\" TEXT," + // 15: directiveRecord4
                "\"DIRECTIVE_SCORE4\" TEXT," + // 16: directiveScore4
                "\"DIRECTIVE_RECORD5\" TEXT," + // 17: directiveRecord5
                "\"DIRECTIVE_SCORE5\" TEXT," + // 18: directiveScore5
                "\"DIRECTIVE_RECORD6\" TEXT," + // 19: directiveRecord6
                "\"DIRECTIVE_SCORE6\" TEXT," + // 20: directiveScore6
                "\"DIRECTIVE_RECORD7\" TEXT," + // 21: directiveRecord7
                "\"DIRECTIVE_SCORE7\" TEXT," + // 22: directiveScore7
                "\"DIRECTIVE_RECORD8\" TEXT," + // 23: directiveRecord8
                "\"DIRECTIVE_SCORE8\" TEXT," + // 24: directiveScore8
                "\"DIRECTIVE_RECORD9\" TEXT," + // 25: directiveRecord9
                "\"DIRECTIVE_SCORE9\" TEXT," + // 26: directiveScore9
                "\"DIRECTIVE_RECORD10\" TEXT," + // 27: directiveRecord10
                "\"DIRECTIVE_SCORE10\" TEXT," + // 28: directiveScore10
                "\"MEMORY_RECORD1\" TEXT," + // 29: memoryRecord1
                "\"MEMORY_SCORE1\" TEXT," + // 30: memoryScore1
                "\"MEMORY_RECORD2\" TEXT," + // 31: memoryRecord2
                "\"MEMORY_SCORE2\" TEXT," + // 32: memoryScore2
                "\"MEMORY_RECORD3\" TEXT," + // 33: memoryRecord3
                "\"MEMORY_SCORE3\" TEXT," + // 34: memoryScore3
                "\"COUNT_RECORD1\" TEXT," + // 35: countRecord1
                "\"COUNT_SCORE1\" TEXT," + // 36: countScore1
                "\"COUNT_RECORD2\" TEXT," + // 37: countRecord2
                "\"COUNT_SCORE2\" TEXT," + // 38: countScore2
                "\"COUNT_RECORD3\" TEXT," + // 39: countRecord3
                "\"COUNT_SCORE3\" TEXT," + // 40: countScore3
                "\"COUNT_RECORD4\" TEXT," + // 41: countRecord4
                "\"COUNT_SCORE4\" TEXT," + // 42: countScore4
                "\"COUNT_RECORD5\" TEXT," + // 43: countRecord5
                "\"COUNT_SCORE5\" TEXT," + // 44: countScore5
                "\"RECOLLECT_RECORD1\" TEXT," + // 45: recollectRecord1
                "\"RECOLLECT_SCORE1\" TEXT," + // 46: recollectScore1
                "\"RECOLLECT_RECORD2\" TEXT," + // 47: recollectRecord2
                "\"RECOLLECT_SCORE2\" TEXT," + // 48: recollectScore2
                "\"RECOLLECT_RECORD3\" TEXT," + // 49: recollectRecord3
                "\"RECOLLECT_SCORE3\" TEXT," + // 50: recollectScore3
                "\"NAMING_QUESTION1\" TEXT," + // 51: namingQuestion1
                "\"NAMING_RECORD1\" TEXT," + // 52: namingRecord1
                "\"NAMING_SCORE1\" TEXT," + // 53: namingScore1
                "\"NAMING_QUESTION2\" TEXT," + // 54: namingQuestion2
                "\"NAMING_RECORD2\" TEXT," + // 55: namingRecord2
                "\"NAMING_SCORE2\" TEXT," + // 56: namingScore2
                "\"LANGUAGE_QUESTION\" TEXT," + // 57: languageQuestion
                "\"LANGUAGE_RECORD\" TEXT," + // 58: languageRecord
                "\"LANGUAGE_SCORE\" TEXT," + // 59: languageScore
                "\"THREESTEP_QUESTION1\" TEXT," + // 60: threestepQuestion1
                "\"THREESTEP_RECORD1\" TEXT," + // 61: threestepRecord1
                "\"THREESTEP_SCORE1\" TEXT," + // 62: threestepScore1
                "\"THREESTEP_QUESTION2\" TEXT," + // 63: threestepQuestion2
                "\"THREESTEP_RECORD2\" TEXT," + // 64: threestepRecord2
                "\"THREESTEP_SCORE2\" TEXT," + // 65: threestepScore2
                "\"THREESTEP_QUESTION3\" TEXT," + // 66: threestepQuestion3
                "\"THREESTEP_RECORD3\" TEXT," + // 67: threestepRecord3
                "\"THREESTEP_SCORE3\" TEXT," + // 68: threestepScore3
                "\"READ_QUESTION\" TEXT," + // 69: readQuestion
                "\"READ_RECORD\" TEXT," + // 70: readRecord
                "\"READ_SCORE\" TEXT," + // 71: readScore
                "\"WRITE_QUESTION\" TEXT," + // 72: writeQuestion
                "\"WRITE_RECORD\" TEXT," + // 73: writeRecord
                "\"WRITE_SCORE\" TEXT," + // 74: writeScore
                "\"STRUCTURE_RECORD\" TEXT," + // 75: structureRecord
                "\"STRUCTURE_SCORE\" TEXT," + // 76: structureScore
                "\"IS_CANCEL\" INTEGER," + // 77: isCancel
                "\"CREATE_ORG_ID\" TEXT," + // 78: createOrgId
                "\"ORG_NAME\" TEXT," + // 79: orgName
                "\"CREATOR_ID\" TEXT," + // 80: creatorId
                "\"CREATOR\" TEXT," + // 81: creator
                "\"CREATE_TIME\" INTEGER," + // 82: createTime
                "\"MODIFIED_ORG_ID\" TEXT," + // 83: modifiedOrgId
                "\"MODIFIED_ORG_NAME\" TEXT," + // 84: modifiedOrgName
                "\"MODIFIER_ID\" TEXT," + // 85: modifierId
                "\"MODIFIER\" TEXT," + // 86: modifier
                "\"MODIFIED_TIME\" INTEGER);"); // 87: modifiedTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ELDER_COGNITION\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ElderCognition entity) {
        stmt.clearBindings();
 
        String elderCognitionId = entity.getElderCognitionId();
        if (elderCognitionId != null) {
            stmt.bindString(1, elderCognitionId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(3, name);
        }
 
        String sexCode = entity.getSexCode();
        if (sexCode != null) {
            stmt.bindString(4, sexCode);
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(5, age);
        }
 
        String educationCode = entity.getEducationCode();
        if (educationCode != null) {
            stmt.bindString(6, educationCode);
        }
 
        java.util.Date assessDate = entity.getAssessDate();
        if (assessDate != null) {
            stmt.bindLong(7, assessDate.getTime());
        }
 
        String diseaseHistory = entity.getDiseaseHistory();
        if (diseaseHistory != null) {
            stmt.bindString(8, diseaseHistory);
        }
 
        String totalScore = entity.getTotalScore();
        if (totalScore != null) {
            stmt.bindString(9, totalScore);
        }
 
        String directiveRecord1 = entity.getDirectiveRecord1();
        if (directiveRecord1 != null) {
            stmt.bindString(10, directiveRecord1);
        }
 
        String directiveScore1 = entity.getDirectiveScore1();
        if (directiveScore1 != null) {
            stmt.bindString(11, directiveScore1);
        }
 
        String directiveRecord2 = entity.getDirectiveRecord2();
        if (directiveRecord2 != null) {
            stmt.bindString(12, directiveRecord2);
        }
 
        String directiveScore2 = entity.getDirectiveScore2();
        if (directiveScore2 != null) {
            stmt.bindString(13, directiveScore2);
        }
 
        String directiveRecord3 = entity.getDirectiveRecord3();
        if (directiveRecord3 != null) {
            stmt.bindString(14, directiveRecord3);
        }
 
        String directiveScore3 = entity.getDirectiveScore3();
        if (directiveScore3 != null) {
            stmt.bindString(15, directiveScore3);
        }
 
        String directiveRecord4 = entity.getDirectiveRecord4();
        if (directiveRecord4 != null) {
            stmt.bindString(16, directiveRecord4);
        }
 
        String directiveScore4 = entity.getDirectiveScore4();
        if (directiveScore4 != null) {
            stmt.bindString(17, directiveScore4);
        }
 
        String directiveRecord5 = entity.getDirectiveRecord5();
        if (directiveRecord5 != null) {
            stmt.bindString(18, directiveRecord5);
        }
 
        String directiveScore5 = entity.getDirectiveScore5();
        if (directiveScore5 != null) {
            stmt.bindString(19, directiveScore5);
        }
 
        String directiveRecord6 = entity.getDirectiveRecord6();
        if (directiveRecord6 != null) {
            stmt.bindString(20, directiveRecord6);
        }
 
        String directiveScore6 = entity.getDirectiveScore6();
        if (directiveScore6 != null) {
            stmt.bindString(21, directiveScore6);
        }
 
        String directiveRecord7 = entity.getDirectiveRecord7();
        if (directiveRecord7 != null) {
            stmt.bindString(22, directiveRecord7);
        }
 
        String directiveScore7 = entity.getDirectiveScore7();
        if (directiveScore7 != null) {
            stmt.bindString(23, directiveScore7);
        }
 
        String directiveRecord8 = entity.getDirectiveRecord8();
        if (directiveRecord8 != null) {
            stmt.bindString(24, directiveRecord8);
        }
 
        String directiveScore8 = entity.getDirectiveScore8();
        if (directiveScore8 != null) {
            stmt.bindString(25, directiveScore8);
        }
 
        String directiveRecord9 = entity.getDirectiveRecord9();
        if (directiveRecord9 != null) {
            stmt.bindString(26, directiveRecord9);
        }
 
        String directiveScore9 = entity.getDirectiveScore9();
        if (directiveScore9 != null) {
            stmt.bindString(27, directiveScore9);
        }
 
        String directiveRecord10 = entity.getDirectiveRecord10();
        if (directiveRecord10 != null) {
            stmt.bindString(28, directiveRecord10);
        }
 
        String directiveScore10 = entity.getDirectiveScore10();
        if (directiveScore10 != null) {
            stmt.bindString(29, directiveScore10);
        }
 
        String memoryRecord1 = entity.getMemoryRecord1();
        if (memoryRecord1 != null) {
            stmt.bindString(30, memoryRecord1);
        }
 
        String memoryScore1 = entity.getMemoryScore1();
        if (memoryScore1 != null) {
            stmt.bindString(31, memoryScore1);
        }
 
        String memoryRecord2 = entity.getMemoryRecord2();
        if (memoryRecord2 != null) {
            stmt.bindString(32, memoryRecord2);
        }
 
        String memoryScore2 = entity.getMemoryScore2();
        if (memoryScore2 != null) {
            stmt.bindString(33, memoryScore2);
        }
 
        String memoryRecord3 = entity.getMemoryRecord3();
        if (memoryRecord3 != null) {
            stmt.bindString(34, memoryRecord3);
        }
 
        String memoryScore3 = entity.getMemoryScore3();
        if (memoryScore3 != null) {
            stmt.bindString(35, memoryScore3);
        }
 
        String countRecord1 = entity.getCountRecord1();
        if (countRecord1 != null) {
            stmt.bindString(36, countRecord1);
        }
 
        String countScore1 = entity.getCountScore1();
        if (countScore1 != null) {
            stmt.bindString(37, countScore1);
        }
 
        String countRecord2 = entity.getCountRecord2();
        if (countRecord2 != null) {
            stmt.bindString(38, countRecord2);
        }
 
        String countScore2 = entity.getCountScore2();
        if (countScore2 != null) {
            stmt.bindString(39, countScore2);
        }
 
        String countRecord3 = entity.getCountRecord3();
        if (countRecord3 != null) {
            stmt.bindString(40, countRecord3);
        }
 
        String countScore3 = entity.getCountScore3();
        if (countScore3 != null) {
            stmt.bindString(41, countScore3);
        }
 
        String countRecord4 = entity.getCountRecord4();
        if (countRecord4 != null) {
            stmt.bindString(42, countRecord4);
        }
 
        String countScore4 = entity.getCountScore4();
        if (countScore4 != null) {
            stmt.bindString(43, countScore4);
        }
 
        String countRecord5 = entity.getCountRecord5();
        if (countRecord5 != null) {
            stmt.bindString(44, countRecord5);
        }
 
        String countScore5 = entity.getCountScore5();
        if (countScore5 != null) {
            stmt.bindString(45, countScore5);
        }
 
        String recollectRecord1 = entity.getRecollectRecord1();
        if (recollectRecord1 != null) {
            stmt.bindString(46, recollectRecord1);
        }
 
        String recollectScore1 = entity.getRecollectScore1();
        if (recollectScore1 != null) {
            stmt.bindString(47, recollectScore1);
        }
 
        String recollectRecord2 = entity.getRecollectRecord2();
        if (recollectRecord2 != null) {
            stmt.bindString(48, recollectRecord2);
        }
 
        String recollectScore2 = entity.getRecollectScore2();
        if (recollectScore2 != null) {
            stmt.bindString(49, recollectScore2);
        }
 
        String recollectRecord3 = entity.getRecollectRecord3();
        if (recollectRecord3 != null) {
            stmt.bindString(50, recollectRecord3);
        }
 
        String recollectScore3 = entity.getRecollectScore3();
        if (recollectScore3 != null) {
            stmt.bindString(51, recollectScore3);
        }
 
        String namingQuestion1 = entity.getNamingQuestion1();
        if (namingQuestion1 != null) {
            stmt.bindString(52, namingQuestion1);
        }
 
        String namingRecord1 = entity.getNamingRecord1();
        if (namingRecord1 != null) {
            stmt.bindString(53, namingRecord1);
        }
 
        String namingScore1 = entity.getNamingScore1();
        if (namingScore1 != null) {
            stmt.bindString(54, namingScore1);
        }
 
        String namingQuestion2 = entity.getNamingQuestion2();
        if (namingQuestion2 != null) {
            stmt.bindString(55, namingQuestion2);
        }
 
        String namingRecord2 = entity.getNamingRecord2();
        if (namingRecord2 != null) {
            stmt.bindString(56, namingRecord2);
        }
 
        String namingScore2 = entity.getNamingScore2();
        if (namingScore2 != null) {
            stmt.bindString(57, namingScore2);
        }
 
        String languageQuestion = entity.getLanguageQuestion();
        if (languageQuestion != null) {
            stmt.bindString(58, languageQuestion);
        }
 
        String languageRecord = entity.getLanguageRecord();
        if (languageRecord != null) {
            stmt.bindString(59, languageRecord);
        }
 
        String languageScore = entity.getLanguageScore();
        if (languageScore != null) {
            stmt.bindString(60, languageScore);
        }
 
        String threestepQuestion1 = entity.getThreestepQuestion1();
        if (threestepQuestion1 != null) {
            stmt.bindString(61, threestepQuestion1);
        }
 
        String threestepRecord1 = entity.getThreestepRecord1();
        if (threestepRecord1 != null) {
            stmt.bindString(62, threestepRecord1);
        }
 
        String threestepScore1 = entity.getThreestepScore1();
        if (threestepScore1 != null) {
            stmt.bindString(63, threestepScore1);
        }
 
        String threestepQuestion2 = entity.getThreestepQuestion2();
        if (threestepQuestion2 != null) {
            stmt.bindString(64, threestepQuestion2);
        }
 
        String threestepRecord2 = entity.getThreestepRecord2();
        if (threestepRecord2 != null) {
            stmt.bindString(65, threestepRecord2);
        }
 
        String threestepScore2 = entity.getThreestepScore2();
        if (threestepScore2 != null) {
            stmt.bindString(66, threestepScore2);
        }
 
        String threestepQuestion3 = entity.getThreestepQuestion3();
        if (threestepQuestion3 != null) {
            stmt.bindString(67, threestepQuestion3);
        }
 
        String threestepRecord3 = entity.getThreestepRecord3();
        if (threestepRecord3 != null) {
            stmt.bindString(68, threestepRecord3);
        }
 
        String threestepScore3 = entity.getThreestepScore3();
        if (threestepScore3 != null) {
            stmt.bindString(69, threestepScore3);
        }
 
        String readQuestion = entity.getReadQuestion();
        if (readQuestion != null) {
            stmt.bindString(70, readQuestion);
        }
 
        String readRecord = entity.getReadRecord();
        if (readRecord != null) {
            stmt.bindString(71, readRecord);
        }
 
        String readScore = entity.getReadScore();
        if (readScore != null) {
            stmt.bindString(72, readScore);
        }
 
        String writeQuestion = entity.getWriteQuestion();
        if (writeQuestion != null) {
            stmt.bindString(73, writeQuestion);
        }
 
        String writeRecord = entity.getWriteRecord();
        if (writeRecord != null) {
            stmt.bindString(74, writeRecord);
        }
 
        String writeScore = entity.getWriteScore();
        if (writeScore != null) {
            stmt.bindString(75, writeScore);
        }
 
        String structureRecord = entity.getStructureRecord();
        if (structureRecord != null) {
            stmt.bindString(76, structureRecord);
        }
 
        String structureScore = entity.getStructureScore();
        if (structureScore != null) {
            stmt.bindString(77, structureScore);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(78, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(79, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(80, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(81, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(82, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(83, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(84, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(85, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(86, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(87, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(88, modifiedTime.getTime());
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ElderCognition entity) {
        stmt.clearBindings();
 
        String elderCognitionId = entity.getElderCognitionId();
        if (elderCognitionId != null) {
            stmt.bindString(1, elderCognitionId);
        }
 
        String personInfoId = entity.getPersonInfoId();
        if (personInfoId != null) {
            stmt.bindString(2, personInfoId);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(3, name);
        }
 
        String sexCode = entity.getSexCode();
        if (sexCode != null) {
            stmt.bindString(4, sexCode);
        }
 
        Integer age = entity.getAge();
        if (age != null) {
            stmt.bindLong(5, age);
        }
 
        String educationCode = entity.getEducationCode();
        if (educationCode != null) {
            stmt.bindString(6, educationCode);
        }
 
        java.util.Date assessDate = entity.getAssessDate();
        if (assessDate != null) {
            stmt.bindLong(7, assessDate.getTime());
        }
 
        String diseaseHistory = entity.getDiseaseHistory();
        if (diseaseHistory != null) {
            stmt.bindString(8, diseaseHistory);
        }
 
        String totalScore = entity.getTotalScore();
        if (totalScore != null) {
            stmt.bindString(9, totalScore);
        }
 
        String directiveRecord1 = entity.getDirectiveRecord1();
        if (directiveRecord1 != null) {
            stmt.bindString(10, directiveRecord1);
        }
 
        String directiveScore1 = entity.getDirectiveScore1();
        if (directiveScore1 != null) {
            stmt.bindString(11, directiveScore1);
        }
 
        String directiveRecord2 = entity.getDirectiveRecord2();
        if (directiveRecord2 != null) {
            stmt.bindString(12, directiveRecord2);
        }
 
        String directiveScore2 = entity.getDirectiveScore2();
        if (directiveScore2 != null) {
            stmt.bindString(13, directiveScore2);
        }
 
        String directiveRecord3 = entity.getDirectiveRecord3();
        if (directiveRecord3 != null) {
            stmt.bindString(14, directiveRecord3);
        }
 
        String directiveScore3 = entity.getDirectiveScore3();
        if (directiveScore3 != null) {
            stmt.bindString(15, directiveScore3);
        }
 
        String directiveRecord4 = entity.getDirectiveRecord4();
        if (directiveRecord4 != null) {
            stmt.bindString(16, directiveRecord4);
        }
 
        String directiveScore4 = entity.getDirectiveScore4();
        if (directiveScore4 != null) {
            stmt.bindString(17, directiveScore4);
        }
 
        String directiveRecord5 = entity.getDirectiveRecord5();
        if (directiveRecord5 != null) {
            stmt.bindString(18, directiveRecord5);
        }
 
        String directiveScore5 = entity.getDirectiveScore5();
        if (directiveScore5 != null) {
            stmt.bindString(19, directiveScore5);
        }
 
        String directiveRecord6 = entity.getDirectiveRecord6();
        if (directiveRecord6 != null) {
            stmt.bindString(20, directiveRecord6);
        }
 
        String directiveScore6 = entity.getDirectiveScore6();
        if (directiveScore6 != null) {
            stmt.bindString(21, directiveScore6);
        }
 
        String directiveRecord7 = entity.getDirectiveRecord7();
        if (directiveRecord7 != null) {
            stmt.bindString(22, directiveRecord7);
        }
 
        String directiveScore7 = entity.getDirectiveScore7();
        if (directiveScore7 != null) {
            stmt.bindString(23, directiveScore7);
        }
 
        String directiveRecord8 = entity.getDirectiveRecord8();
        if (directiveRecord8 != null) {
            stmt.bindString(24, directiveRecord8);
        }
 
        String directiveScore8 = entity.getDirectiveScore8();
        if (directiveScore8 != null) {
            stmt.bindString(25, directiveScore8);
        }
 
        String directiveRecord9 = entity.getDirectiveRecord9();
        if (directiveRecord9 != null) {
            stmt.bindString(26, directiveRecord9);
        }
 
        String directiveScore9 = entity.getDirectiveScore9();
        if (directiveScore9 != null) {
            stmt.bindString(27, directiveScore9);
        }
 
        String directiveRecord10 = entity.getDirectiveRecord10();
        if (directiveRecord10 != null) {
            stmt.bindString(28, directiveRecord10);
        }
 
        String directiveScore10 = entity.getDirectiveScore10();
        if (directiveScore10 != null) {
            stmt.bindString(29, directiveScore10);
        }
 
        String memoryRecord1 = entity.getMemoryRecord1();
        if (memoryRecord1 != null) {
            stmt.bindString(30, memoryRecord1);
        }
 
        String memoryScore1 = entity.getMemoryScore1();
        if (memoryScore1 != null) {
            stmt.bindString(31, memoryScore1);
        }
 
        String memoryRecord2 = entity.getMemoryRecord2();
        if (memoryRecord2 != null) {
            stmt.bindString(32, memoryRecord2);
        }
 
        String memoryScore2 = entity.getMemoryScore2();
        if (memoryScore2 != null) {
            stmt.bindString(33, memoryScore2);
        }
 
        String memoryRecord3 = entity.getMemoryRecord3();
        if (memoryRecord3 != null) {
            stmt.bindString(34, memoryRecord3);
        }
 
        String memoryScore3 = entity.getMemoryScore3();
        if (memoryScore3 != null) {
            stmt.bindString(35, memoryScore3);
        }
 
        String countRecord1 = entity.getCountRecord1();
        if (countRecord1 != null) {
            stmt.bindString(36, countRecord1);
        }
 
        String countScore1 = entity.getCountScore1();
        if (countScore1 != null) {
            stmt.bindString(37, countScore1);
        }
 
        String countRecord2 = entity.getCountRecord2();
        if (countRecord2 != null) {
            stmt.bindString(38, countRecord2);
        }
 
        String countScore2 = entity.getCountScore2();
        if (countScore2 != null) {
            stmt.bindString(39, countScore2);
        }
 
        String countRecord3 = entity.getCountRecord3();
        if (countRecord3 != null) {
            stmt.bindString(40, countRecord3);
        }
 
        String countScore3 = entity.getCountScore3();
        if (countScore3 != null) {
            stmt.bindString(41, countScore3);
        }
 
        String countRecord4 = entity.getCountRecord4();
        if (countRecord4 != null) {
            stmt.bindString(42, countRecord4);
        }
 
        String countScore4 = entity.getCountScore4();
        if (countScore4 != null) {
            stmt.bindString(43, countScore4);
        }
 
        String countRecord5 = entity.getCountRecord5();
        if (countRecord5 != null) {
            stmt.bindString(44, countRecord5);
        }
 
        String countScore5 = entity.getCountScore5();
        if (countScore5 != null) {
            stmt.bindString(45, countScore5);
        }
 
        String recollectRecord1 = entity.getRecollectRecord1();
        if (recollectRecord1 != null) {
            stmt.bindString(46, recollectRecord1);
        }
 
        String recollectScore1 = entity.getRecollectScore1();
        if (recollectScore1 != null) {
            stmt.bindString(47, recollectScore1);
        }
 
        String recollectRecord2 = entity.getRecollectRecord2();
        if (recollectRecord2 != null) {
            stmt.bindString(48, recollectRecord2);
        }
 
        String recollectScore2 = entity.getRecollectScore2();
        if (recollectScore2 != null) {
            stmt.bindString(49, recollectScore2);
        }
 
        String recollectRecord3 = entity.getRecollectRecord3();
        if (recollectRecord3 != null) {
            stmt.bindString(50, recollectRecord3);
        }
 
        String recollectScore3 = entity.getRecollectScore3();
        if (recollectScore3 != null) {
            stmt.bindString(51, recollectScore3);
        }
 
        String namingQuestion1 = entity.getNamingQuestion1();
        if (namingQuestion1 != null) {
            stmt.bindString(52, namingQuestion1);
        }
 
        String namingRecord1 = entity.getNamingRecord1();
        if (namingRecord1 != null) {
            stmt.bindString(53, namingRecord1);
        }
 
        String namingScore1 = entity.getNamingScore1();
        if (namingScore1 != null) {
            stmt.bindString(54, namingScore1);
        }
 
        String namingQuestion2 = entity.getNamingQuestion2();
        if (namingQuestion2 != null) {
            stmt.bindString(55, namingQuestion2);
        }
 
        String namingRecord2 = entity.getNamingRecord2();
        if (namingRecord2 != null) {
            stmt.bindString(56, namingRecord2);
        }
 
        String namingScore2 = entity.getNamingScore2();
        if (namingScore2 != null) {
            stmt.bindString(57, namingScore2);
        }
 
        String languageQuestion = entity.getLanguageQuestion();
        if (languageQuestion != null) {
            stmt.bindString(58, languageQuestion);
        }
 
        String languageRecord = entity.getLanguageRecord();
        if (languageRecord != null) {
            stmt.bindString(59, languageRecord);
        }
 
        String languageScore = entity.getLanguageScore();
        if (languageScore != null) {
            stmt.bindString(60, languageScore);
        }
 
        String threestepQuestion1 = entity.getThreestepQuestion1();
        if (threestepQuestion1 != null) {
            stmt.bindString(61, threestepQuestion1);
        }
 
        String threestepRecord1 = entity.getThreestepRecord1();
        if (threestepRecord1 != null) {
            stmt.bindString(62, threestepRecord1);
        }
 
        String threestepScore1 = entity.getThreestepScore1();
        if (threestepScore1 != null) {
            stmt.bindString(63, threestepScore1);
        }
 
        String threestepQuestion2 = entity.getThreestepQuestion2();
        if (threestepQuestion2 != null) {
            stmt.bindString(64, threestepQuestion2);
        }
 
        String threestepRecord2 = entity.getThreestepRecord2();
        if (threestepRecord2 != null) {
            stmt.bindString(65, threestepRecord2);
        }
 
        String threestepScore2 = entity.getThreestepScore2();
        if (threestepScore2 != null) {
            stmt.bindString(66, threestepScore2);
        }
 
        String threestepQuestion3 = entity.getThreestepQuestion3();
        if (threestepQuestion3 != null) {
            stmt.bindString(67, threestepQuestion3);
        }
 
        String threestepRecord3 = entity.getThreestepRecord3();
        if (threestepRecord3 != null) {
            stmt.bindString(68, threestepRecord3);
        }
 
        String threestepScore3 = entity.getThreestepScore3();
        if (threestepScore3 != null) {
            stmt.bindString(69, threestepScore3);
        }
 
        String readQuestion = entity.getReadQuestion();
        if (readQuestion != null) {
            stmt.bindString(70, readQuestion);
        }
 
        String readRecord = entity.getReadRecord();
        if (readRecord != null) {
            stmt.bindString(71, readRecord);
        }
 
        String readScore = entity.getReadScore();
        if (readScore != null) {
            stmt.bindString(72, readScore);
        }
 
        String writeQuestion = entity.getWriteQuestion();
        if (writeQuestion != null) {
            stmt.bindString(73, writeQuestion);
        }
 
        String writeRecord = entity.getWriteRecord();
        if (writeRecord != null) {
            stmt.bindString(74, writeRecord);
        }
 
        String writeScore = entity.getWriteScore();
        if (writeScore != null) {
            stmt.bindString(75, writeScore);
        }
 
        String structureRecord = entity.getStructureRecord();
        if (structureRecord != null) {
            stmt.bindString(76, structureRecord);
        }
 
        String structureScore = entity.getStructureScore();
        if (structureScore != null) {
            stmt.bindString(77, structureScore);
        }
 
        Integer isCancel = entity.getIsCancel();
        if (isCancel != null) {
            stmt.bindLong(78, isCancel);
        }
 
        String createOrgId = entity.getCreateOrgId();
        if (createOrgId != null) {
            stmt.bindString(79, createOrgId);
        }
 
        String orgName = entity.getOrgName();
        if (orgName != null) {
            stmt.bindString(80, orgName);
        }
 
        String creatorId = entity.getCreatorId();
        if (creatorId != null) {
            stmt.bindString(81, creatorId);
        }
 
        String creator = entity.getCreator();
        if (creator != null) {
            stmt.bindString(82, creator);
        }
 
        java.util.Date createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindLong(83, createTime.getTime());
        }
 
        String modifiedOrgId = entity.getModifiedOrgId();
        if (modifiedOrgId != null) {
            stmt.bindString(84, modifiedOrgId);
        }
 
        String modifiedOrgName = entity.getModifiedOrgName();
        if (modifiedOrgName != null) {
            stmt.bindString(85, modifiedOrgName);
        }
 
        String modifierId = entity.getModifierId();
        if (modifierId != null) {
            stmt.bindString(86, modifierId);
        }
 
        String modifier = entity.getModifier();
        if (modifier != null) {
            stmt.bindString(87, modifier);
        }
 
        java.util.Date modifiedTime = entity.getModifiedTime();
        if (modifiedTime != null) {
            stmt.bindLong(88, modifiedTime.getTime());
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public ElderCognition readEntity(Cursor cursor, int offset) {
        ElderCognition entity = new ElderCognition( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // elderCognitionId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personInfoId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // sexCode
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // age
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // educationCode
            cursor.isNull(offset + 6) ? null : new java.util.Date(cursor.getLong(offset + 6)), // assessDate
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // diseaseHistory
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // totalScore
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // directiveRecord1
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // directiveScore1
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // directiveRecord2
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // directiveScore2
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // directiveRecord3
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // directiveScore3
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // directiveRecord4
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // directiveScore4
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // directiveRecord5
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // directiveScore5
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // directiveRecord6
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // directiveScore6
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // directiveRecord7
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // directiveScore7
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // directiveRecord8
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // directiveScore8
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // directiveRecord9
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // directiveScore9
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // directiveRecord10
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // directiveScore10
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // memoryRecord1
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // memoryScore1
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // memoryRecord2
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // memoryScore2
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // memoryRecord3
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // memoryScore3
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // countRecord1
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // countScore1
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // countRecord2
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // countScore2
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // countRecord3
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // countScore3
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // countRecord4
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // countScore4
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // countRecord5
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // countScore5
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // recollectRecord1
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // recollectScore1
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // recollectRecord2
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // recollectScore2
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // recollectRecord3
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // recollectScore3
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // namingQuestion1
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // namingRecord1
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // namingScore1
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // namingQuestion2
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // namingRecord2
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // namingScore2
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // languageQuestion
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // languageRecord
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // languageScore
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // threestepQuestion1
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // threestepRecord1
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // threestepScore1
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // threestepQuestion2
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // threestepRecord2
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // threestepScore2
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // threestepQuestion3
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // threestepRecord3
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // threestepScore3
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // readQuestion
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // readRecord
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // readScore
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // writeQuestion
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // writeRecord
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // writeScore
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // structureRecord
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // structureScore
            cursor.isNull(offset + 77) ? null : cursor.getInt(offset + 77), // isCancel
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // createOrgId
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // orgName
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // creatorId
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // creator
            cursor.isNull(offset + 82) ? null : new java.util.Date(cursor.getLong(offset + 82)), // createTime
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // modifiedOrgId
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // modifiedOrgName
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // modifierId
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // modifier
            cursor.isNull(offset + 87) ? null : new java.util.Date(cursor.getLong(offset + 87)) // modifiedTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ElderCognition entity, int offset) {
        entity.setElderCognitionId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setPersonInfoId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setSexCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAge(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setEducationCode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAssessDate(cursor.isNull(offset + 6) ? null : new java.util.Date(cursor.getLong(offset + 6)));
        entity.setDiseaseHistory(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setTotalScore(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setDirectiveRecord1(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setDirectiveScore1(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDirectiveRecord2(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setDirectiveScore2(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setDirectiveRecord3(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDirectiveScore3(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDirectiveRecord4(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setDirectiveScore4(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setDirectiveRecord5(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setDirectiveScore5(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setDirectiveRecord6(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setDirectiveScore6(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setDirectiveRecord7(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setDirectiveScore7(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setDirectiveRecord8(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setDirectiveScore8(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setDirectiveRecord9(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setDirectiveScore9(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setDirectiveRecord10(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDirectiveScore10(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setMemoryRecord1(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setMemoryScore1(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setMemoryRecord2(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setMemoryScore2(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setMemoryRecord3(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setMemoryScore3(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCountRecord1(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setCountScore1(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCountRecord2(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setCountScore2(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setCountRecord3(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setCountScore3(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setCountRecord4(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setCountScore4(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setCountRecord5(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setCountScore5(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setRecollectRecord1(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setRecollectScore1(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setRecollectRecord2(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setRecollectScore2(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setRecollectRecord3(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setRecollectScore3(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setNamingQuestion1(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setNamingRecord1(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setNamingScore1(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setNamingQuestion2(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setNamingRecord2(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setNamingScore2(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setLanguageQuestion(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setLanguageRecord(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setLanguageScore(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setThreestepQuestion1(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setThreestepRecord1(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setThreestepScore1(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setThreestepQuestion2(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setThreestepRecord2(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setThreestepScore2(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setThreestepQuestion3(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setThreestepRecord3(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setThreestepScore3(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setReadQuestion(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setReadRecord(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setReadScore(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setWriteQuestion(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setWriteRecord(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setWriteScore(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setStructureRecord(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setStructureScore(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setIsCancel(cursor.isNull(offset + 77) ? null : cursor.getInt(offset + 77));
        entity.setCreateOrgId(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setOrgName(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setCreatorId(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setCreator(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setCreateTime(cursor.isNull(offset + 82) ? null : new java.util.Date(cursor.getLong(offset + 82)));
        entity.setModifiedOrgId(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setModifiedOrgName(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setModifierId(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setModifier(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setModifiedTime(cursor.isNull(offset + 87) ? null : new java.util.Date(cursor.getLong(offset + 87)));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(ElderCognition entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(ElderCognition entity) {
        return null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
